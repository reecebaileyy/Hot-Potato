{
  "id": "055bf9871953f54cdca6a10f55091da6",
  "_format": "hh-sol-build-info-1",
  "solcVersion": "0.8.7",
  "solcLongVersion": "0.8.7+commit.e28d00a7",
  "input": {
    "language": "Solidity",
    "sources": {
      "@Allcontracts/Inventory.sol": {
        "content": "// SPDX-License-Identifier: GPL-3.0\r\n\r\npragma solidity >=0.7.0 <0.9.0;\r\n\r\ncontract Backgrounds {\r\n    string public constant blue = \"iVBORw0KGgoAAAANSUhEUgAAADwAAAA8BAMAAADI0sRBAAAAIGNIUk0AAHomAACAhAAA+gAAAIDoAAB1MAAA6mAAADqYAAAXcJy6UTwAAAAbUExURcflzsflzsflzsflzsflzsflzsflzsflzv////PFMLgAAAAHdFJOU9ro4fH48PcHHBR7AAAAAWJLR0QIht6VegAAAAd0SU1FB+cGFAgOL6zv9Z0AAAAnSURBVDjLY2AUxAOEGMzL8YAShnB80mWj0qPSo9Kj0qPSo9LDWBoARSkxJrNjYpcAAAAldEVYdGRhdGU6Y3JlYXRlADIwMjMtMDYtMjBUMDg6MTQ6NDcrMDA6MDCvj8zFAAAAJXRFWHRkYXRlOm1vZGlmeQAyMDIzLTA2LTIwVDA4OjE0OjQ3KzAwOjAw3tJ0eQAAACh0RVh0ZGF0ZTp0aW1lc3RhbXAAMjAyMy0wNi0yMFQwODoxNDo0NyswMDowMInHVaYAAAAASUVORK5CYII=\";\r\n    string public constant purple = \"iVBORw0KGgoAAAANSUhEUgAAADwAAAA8BAMAAADI0sRBAAAAIGNIUk0AAHomAACAhAAA+gAAAIDoAAB1MAAA6mAAADqYAAAXcJy6UTwAAAAbUExURbeIvbeIvbeIvbeIvbeIvbeIvbeIvbeIvf///zZASMQAAAAHdFJOU9ro4fH48PcHHBR7AAAAAWJLR0QIht6VegAAAAd0SU1FB+cGFAgOEvSHuYwAAAAnSURBVDjLY2AUxAOEGMzL8YAShnB80mWj0qPSo9Kj0qPSo9LDWBoARSkxJrNjYpcAAAAldEVYdGRhdGU6Y3JlYXRlADIwMjMtMDYtMjBUMDg6MTQ6MTgrMDA6MDARJ7JIAAAAJXRFWHRkYXRlOm1vZGlmeQAyMDIzLTA2LTIwVDA4OjE0OjE4KzAwOjAwYHoK9AAAACh0RVh0ZGF0ZTp0aW1lc3RhbXAAMjAyMy0wNi0yMFQwODoxNDoxOCswMDowMDdvKysAAAAASUVORK5CYII=\";\r\n    string public constant green = \"iVBORw0KGgoAAAANSUhEUgAAADwAAAA8BAMAAADI0sRBAAAAIGNIUk0AAHomAACAhAAA+gAAAIDoAAB1MAAA6mAAADqYAAAXcJy6UTwAAAAbUExURcDXL8DXL8DXL8DXL8DXL8DXL8DXL8DXL////79b7PIAAAAHdFJOU9ro4fH48PcHHBR7AAAAAWJLR0QIht6VegAAAAd0SU1FB+cGFAgPBW5PDQoAAAAnSURBVDjLY2AUxAOEGMzL8YAShnB80mWj0qPSo9Kj0qPSo9LDWBoARSkxJrNjYpcAAAAldEVYdGRhdGU6Y3JlYXRlADIwMjMtMDYtMjBUMDg6MTU6MDUrMDA6MDBTmLgoAAAAJXRFWHRkYXRlOm1vZGlmeQAyMDIzLTA2LTIwVDA4OjE1OjA1KzAwOjAwIsUAlAAAACh0RVh0ZGF0ZTp0aW1lc3RhbXAAMjAyMy0wNi0yMFQwODoxNTowNSswMDowMHXQIUsAAAAASUVORK5CYII=\";\r\n\r\n    function getBlue() public pure returns (string memory) {\r\n        return blue;\r\n    }\r\n\r\n    function getPurple() public pure returns (string memory) {\r\n        return purple;\r\n    }\r\n\r\n    function getGreen() public pure returns (string memory) {\r\n        return green;\r\n    }\r\n}\r\n\r\ncontract Hands {\r\n    string public constant skin_tone_4 = \"iVBORw0KGgoAAAANSUhEUgAAADsAAAA7AgMAAAC4SxogAAAADFBMVEUAAABnRjNULxk1GiAr7rgXAAAAAXRSTlMAQObYZgAAAUZJREFUKM/tzjFLw1AQAOCDzI2/JoIu/opLaBKfUxHSWro42P8R3qB0y5DYapZXqC6B/IY8kM6x1EFcXMTBy8t7SYf+BA/e3X3vODj4D4oTel8H/P6Fi6v+w5Fb2PGws6w4SI8bWu42BGcXF9qDICDX9cx4PA6g3u+NndXNqpzfzUPjzVqUbDHtLTbllHU+FeKlfGLsofcrfBpbhRRiXS4Y41bROJdiTV4wbjce5LKSsuTc4/ascSjjiJy63FEOMMF7eEcf62O2PBziGPY4wqpojfEEzlzUxjcfyZhcY+stKuOu84g87DzU85E23ipfojJU5CWckz04YuoQc7ApL5XtWNvNjamjbJwmfgFW4ketB1ESkVM/nRk/U/k5cN6s9c6UM20nytTdWRpqP6r6oV119rSX7d3G2UTVs0zZwlQ7wuK49X7jP49AvI+9+0e9AAAAAElFTkSuQmCC\";\r\n    string public constant skin_tone_3 = \"iVBORw0KGgoAAAANSUhEUgAAADwAAAA8AgMAAABHkjHhAAAADFBMVEUAAACicEt9SCI1GiBpALqlAAAAAXRSTlMAQObYZgAAAUdJREFUKM/tzjFLw1AQAOCDzI2/JkJd/BWX0CTGqQhpLV0c7P8Ib1C6ZUhsNcsrVJdAfkMeSOdY6iAuLuLg5eW9pEN+Qg/e3X3vODg4RU+c0fs+4s8fXF53H5bYwZ75rUXJQDhM07B3Plj7KFceeB65qubak4kH1eGgba1v18XifuFrbze8CJazznxbzILW55y/Fs9B8Nj5Db60jVxwvimWQcCMvHYm+Ia8DJhZe5CJUoiCMYeZ89q+iEJyYjNL2sMYH+ADXaz6bDg4wgkccIxl3hijKQxtVMZ3F8kY32DjHUrjvvWYPGo9UvOxMt5JX6E0lOQVXJAd6DF1iBmYlFfSZqRsZ9rUUdZOYjcHI3bDxoMwDsmJm8y1X6j8Hjmr1zqn0qmyFaby7jTxlZ9k/VQuWzvKq+Zu7XQq6zCVNjBRDjHvt9qv/Q+PULyPStK0TgAAAABJRU5ErkJggg==\";\r\n    string public constant skin_tone_2 = \"iVBORw0KGgoAAAANSUhEUgAAADwAAAA8AgMAAABHkjHhAAAADFBMVEUAAADVpIS5hWM1GiD9lMytAAAAAXRSTlMAQObYZgAAAUdJREFUKM/tzjFLw1AQAOCDzI2/JkJd/BWX0CTGqQhpLV0c7P8Ib1C6ZUhsNcsrVJdAfkMeSOdY6iAuLuLg5eW9pEN+Qg/e3X3vODg4RU+c0fs+4s8fXF53H5bYwZ75rUXJQDhM07B3Plj7KFceeB65qubak4kH1eGgba1v18XifuFrbze8CJazznxbzILW55y/Fs9B8Nj5Db60jVxwvimWQcCMvHYm+Ia8DJhZe5CJUoiCMYeZ89q+iEJyYjNL2sMYH+ADXaz6bDg4wgkccIxl3hijKQxtVMZ3F8kY32DjHUrjvvWYPGo9UvOxMt5JX6E0lOQVXJAd6DF1iBmYlFfSZqRsZ9rUUdZOYjcHI3bDxoMwDsmJm8y1X6j8Hjmr1zqn0qmyFaby7jTxlZ9k/VQuWzvKq+Zu7XQq6zCVNjBRDjHvt9qv/Q+PULyPStK0TgAAAABJRU5ErkJggg==\";\r\n    string public constant skin_tone_1 = \"iVBORw0KGgoAAAANSUhEUgAAADwAAAA8BAMAAADI0sRBAAAAD1BMVEUAAAD23bnlvYI1GiD44cDJTsFJAAAAAXRSTlMAQObYZgAAAUJJREFUOMvt09GNwyAMBmAkJvjtLmBzA9hkgt7+Qx0+ShMCDx2gRMg2nwxEUdJ3fMd+HCNs8cBhKeUWjlUz/NdLSpV/GLawk0M4Ilh4bSYvz9j8UVmWdkdpTzBqe3jZu1BBO7uhVLlxhjq5umVWFlbYjYtEu+VoprrjNi032jA1RFHL2hhVthxXWzhb8s5kWTpzWx1cOlNn6VwHe7CjzWAWBgfzYJiTgLSztlQ44+QCKACJqxH+i/opZ3AYQMERAThs4uZkrZDQmeECxeCWEmPiApwM1JVpsCwMmbsJM4Ov7Lhw8hdrsL6Y04ccSzFKFLXnevniVe5Mkc9MnWVlFR375chIr+ykChosUBW+s47/W7dc3kftWE/WmTOC7V0Gw2YulxeZ2XfMM9vJ+c6qdGVRPTk/oTIzKR42KuwYE89nD/4DfZRMTv5yKr0AAAAASUVORK5CYII=\";\r\n    string public constant bubble_gum = \"iVBORw0KGgoAAAANSUhEUgAAADwAAAA8BAMAAADI0sRBAAAAD1BMVEUAAAD8uvr6i/Y1GiD/5P6+vso5AAAAAXRSTlMAQObYZgAAAYpJREFUOMvt04sNpDAMBNBIqWDsbcB2A7FDA4jrv6Zz4LJ8lhIu0orEj9EgsZT/6/96X31eXrF/eiul9rW/3FBXJ7dSgoXRfnghh3ApTmDZfsOZHamKzH/aM7zqyYrtyRRhGN0IM3lwhXY2XVrdNLzrpz3YxMI+ra5hQYEXzl+rSS9MiTBtVZMR8srj0X64trIcTK3KzrrldLKVhQceLMm+lZi8WHE2NvLBLOE7b5M/zckRerAaWLiuX85aKOA+npx5PwSezDJY/cGxZgACULRq45pHh115OPVSuqTeOQ8CZaLxQkVcQYwbZ/vJ2fzCfLD/MsuoOzgF5Ph82XMwhgcDMgbb5LozATpYJ39f2s58su88tYSO5slHkdqFBWPFYNu3dOXQfXSw7Hs7uWZcATs4AM3w5e/krJqBOvYtBKrO5cqkmG2RW7nxwhRXtgdTV7XJodrlwvUPaY4m9zxcv+G6Jlud3OLOywtjOxnJrfy7v5b6ZFW6flWiCj6roXJnUnzLK94YN9Yr6+S/lIpajOvz7+EAAAAASUVORK5CYII=\";\r\n    string public constant green_slime = \"iVBORw0KGgoAAAANSUhEUgAAADsAAAA7BAMAAAA3C++AAAAAD1BMVEUAAAB76FBawTE1GiDN/rkecFBxAAAAAXRSTlMAQObYZgAAAYtJREFUOMvt042tpDAMBOBIqWDsbcB2A7FDA4jrv6Zz4PL4WTq4F2lF4o/RILGU3/Xfrj4vr9g/vZVS+9pfbqirk1spwcJoX7yQQ7gUJ7Bs3+HMjlRF5j/tGV71ZMX2ZIowjG6EmTy4QjubLq1uGt710x5sYmGfVtewoMAL56/VpBemRJi2qskIeeXxaF9cW1kOplZlZ91yOtnKwgMPlmTfSkxerDgbG/lglvCdt8mf5uQIPVgNLFzXH85aKOA+npx5PwSezDJY/cGxZgACULRq45pHh115OPVSuqTeOQ8CZaLxQkVcQYwbZ/vJ2fzCfLB/M8uoOzgF5Pj8sOdgDA8GZAy2yXVnAnSwTv55aTvzyb7z1BI6micfRWoXFowVg23f0pVD99HBsu/t5JpxBezgADTDl7+Ts2oG6ti3EKg6lyuTYrZFbuXGC1Nc2R5MXdUmh2qXC9c/pDma3PNw/Ybrmmx1cos7Ly+M7WQkt/Lv/lrqk1Xp+lWJKvishsqdSfFTXvHGuLFeWSf/BZRrWoz6vHg4AAAAAElFTkSuQmCC\";\r\n    string public constant blue_slime = \"iVBORw0KGgoAAAANSUhEUgAAADwAAAA8BAMAAADI0sRBAAAAD1BMVEUAAACE1f9Apuc1GiDm9v/baebNAAAAAXRSTlMAQObYZgAAAYpJREFUOMvt04sNpDAMBNBIqWDsbcB2A7FDA4jrv6Zz4LJ8lhIu0orEj9EgsZT/6/96X31eXrF/eiul9rW/3FBXJ7dSgoXRfnghh3ApTmDZfsOZHamKzH/aM7zqyYrtyRRhGN0IM3lwhXY2XVrdNLzrpz3YxMI+ra5hQYEXzl+rSS9MiTBtVZMR8srj0X64trIcTK3KzrrldLKVhQceLMm+lZi8WHE2NvLBLOE7b5M/zckRerAaWLiuX85aKOA+npx5PwSezDJY/cGxZgACULRq45pHh115OPVSuqTeOQ8CZaLxQkVcQYwbZ/vJ2fzCfLD/MsuoOzgF5Ph82XMwhgcDMgbb5LozATpYJ39f2s58su88tYSO5slHkdqFBWPFYNu3dOXQfXSw7Hs7uWZcATs4AM3w5e/krJqBOvYtBKrO5cqkmG2RW7nxwhRXtgdTV7XJodrlwvUPaY4m9zxcv+G6Jlud3OLOywtjOxnJrfy7v5b6ZFW6flWiCj6roXJnUnzLK94YN9Yr6+S/lIpajOvz7+EAAAAASUVORK5CYII=\";\r\n    string public constant vitiligo = \"iVBORw0KGgoAAAANSUhEUgAAADsAAAA7BAMAAAA3C++AAAAAElBMVEUAAACDWkRULxk1GiDNlXqvdlGHJAhEAAAAAXRSTlMAQObYZgAAAXdJREFUOMvt0+Ft9CAMBmAkJnjNfQNgev9N7joAd3SAT032X6V2Iy4hQV2gJYowebCdIMX9jV87bm0a4g03cc7rNNjgkSkn56YQA+TEiojBZuiGc7LmQizQ/FN6RkJjvY7pd0qUoL0V43Ss7itrc87iA2trhhz4M1q6eEumacRIUbzSgD8UkVg8K2uFIdurndiLuz++mcTHlYM+bZxcJsOVbcPb002Ns3GG3sZ25sE4NIZkiiBemTWcnx4bJ4ABRHs1AsC1TmN+fwC41rKx1jEDyHguoEstGdKx+j/RxVwIPRfkaNU/VtbwEbCx7k0ALo2BqeNqTCu/IZ64xFe2RSB0XBH2nLFjd18ZizGXlYM78tX4Wo/slwobyRbvtVjM0tSO6shkcRvTf1Naea4n5sitnnYqTLznTMygxnNhjuHI3P7vZcjp1QoD5o25Zw9jeS2NIT2n3Yf0nEf87Fk29kfm5bHnyLyxR13mnolRpa0uP3NV7ns3/gKJSV3BEeeLpQAAAABJRU5ErkJggg==\";\r\n    string public constant green_goblin = \"iVBORw0KGgoAAAANSUhEUgAAADwAAAA8BAMAAADI0sRBAAAAD1BMVEUAAAB76FBawTE1GiDN/rkecFBxAAAAAXRSTlMAQObYZgAAAYpJREFUOMvt04sNpDAMBNBIqWDsbcB2A7FDA4jrv6Zz4LJ8lhIu0orEj9EgsZT/6/96X31eXrF/eiul9rW/3FBXJ7dSgoXRfnghh3ApTmDZfsOZHamKzH/aM7zqyYrtyRRhGN0IM3lwhXY2XVrdNLzrpz3YxMI+ra5hQYEXzl+rSS9MiTBtVZMR8srj0X64trIcTK3KzrrldLKVhQceLMm+lZi8WHE2NvLBLOE7b5M/zckRerAaWLiuX85aKOA+npx5PwSezDJY/cGxZgACULRq45pHh115OPVSuqTeOQ8CZaLxQkVcQYwbZ/vJ2fzCfLD/MsuoOzgF5Ph82XMwhgcDMgbb5LozATpYJ39f2s58su88tYSO5slHkdqFBWPFYNu3dOXQfXSw7Hs7uWZcATs4AM3w5e/krJqBOvYtBKrO5cqkmG2RW7nxwhRXtgdTV7XJodrlwvUPaY4m9zxcv+G6Jlud3OLOywtjOxnJrfy7v5b6ZFW6flWiCj6roXJnUnzLK94YN9Yr6+S/lIpajOvz7+EAAAAASUVORK5CYII=\";\r\n    string public constant red_goblin = \"iVBORw0KGgoAAAANSUhEUgAAADwAAAA8BAMAAADI0sRBAAAAElBMVEUAAACna1lyQDA1GiDJkoJMMDZzNdbsAAAAAXRSTlMAQObYZgAAAXBJREFUOMvt0tutozAQgGFLruAfp4EZGrC5FIAoAaX/VhbbJMYsK+37Oc5DxvkyN4T7PT/1TC140t1N0Tk/uaV502Wf3rtzyztHd/WExJKz9xzFGycGCDViJNyS1+M3hhzmb159+owkiD5/ICjbjS0hcYl+90qwnv0qgyLTO/r3dASjdtU9klvKdCyoOVIemCFP9sSWIFUOEOzL04cDlUmFK5UnnDIPSH5qypg5HLqXzFhYGmvmDIWHY+3DSuvSPBfYjqCyxBnDGh8XNq8nM6yIBrSykER5jVTWymAxszcoXEY5V0FAKiso55ruXAW0sUBds/3dIHzeDAyhZ64M452lceqYwmWUc/HCnLwCHZfzfd/mZ95cx6VXmaVnby25pVv83vVvluPauNUu1Xs2NWgMJtY4iVmfbaahZ2tsHXsyt2JuzEy8sl3ZrjzfORXeOo6N/ZX9+syv+J9sJv1oavbhGUzvLMbZPP2LQ+P73if/AYY2VC9sHMmbAAAAAElFTkSuQmCC\";\r\n    string public constant yellow_goblin = \"iVBORw0KGgoAAAANSUhEUgAAADsAAAA7BAMAAAA3C++AAAAAElBMVEUAAACnpllzcjY1GiDGxXxMMDb9ZLDLAAAAAXRSTlMAQObYZgAAAXZJREFUOMvt0uGRhCAMBWBnqOCFbSChASJrAY4lONt/KxcQEVyvgZvTH/D4BoPR6f/6s1eqo4uPuk/JIEW3xwdd9vTZJ/exIX25g1cstrwoEvydFQFl1dnAiKO6FTMQ8oxBim3kd15DdDFNNs54xRuLguJi92zMI7uVAoPSJy57LiLYBgblVUqTmz3n4B8YwU72yKKAFobm4o3TyR4H+8Jn8xdzzRxAlu25bIw4uSWzQyxMjeVg9UfdYK9tpmfX8gNe0XFlim8I5GIm4xmVEVYQe/DBNhNg48p8MCClk1a3cphKBhQggA4uc2iJtZplvphRD1oZDAH8Ec0YjJHRuEy/mBr7kVG45vJRCvvKq1HPNW7tT3riVxyZap5v7KRtvrZTjaWP3yxxZIot3llYgJYVxNKxksiwO+cby8U8sEOOYWq5sB9YOhbp+V3YX5yjtaVnttTO0rNbHxlbz+iZRhYhdLVBJHzyGxC+MYxrcf2F0bGMzJV/ALVoUi4pG0jdAAAAAElFTkSuQmCC\";\r\n    string public constant sully = \"iVBORw0KGgoAAAANSUhEUgAAADsAAAA7BAMAAAA3C++AAAAAGFBMVEUAAABV2dE1GiArjYfPg9ikVa1/8erdmuXBXYPcAAAAAXRSTlMAQObYZgAAAfVJREFUOMvtklFy2yAQhjXcYBfHfQUhq8+wuYAVPH2Oxz6AdYNmev/pvyggRfENWvSghY9vYYHuf/tnW19/T2H/6F3Xmf7YP5lgHqP1qesCx/novuGRiUgxfn7+JhNcchrAp73uKVHF+HiPbbJpSR5iiLzfmHjrZXRmFo4su82NyKy6M5A1+7zbmceXrDOAjM99xbowecVMuvwznBh7DHtsXDfar8njjNGKk3mobf2LM+8c1T66UDGOelCb6eLMjbzaEw6/YnLDWyQrXjELwtfJ0IpTPgsRxWvXnSwCOeTQ8AhMBevaBRPw3M6EPNh6oZjBRK7i3+gU7tApFMKPin9mtQXjakeEauePav8hLr5VOxbX06+tzYD0ovidIvDWPtPSshaWPzsHV/EDvRkDF7VvmDxi4Oha3YyeJ74rviPAfL/W7X0pNJ80+TUrI+Zq48qW1RZ72UloFLddqhkgQ59KjbjxZhfc1l7wanch+Ugc0mdMVuO1DUGESIpgNJI0NYhTnUSfw2KXcChn2o7VCkta7CBeYv7Y2EMWkeBqmejkyW3k/CZJcy/Zg7xm6OvaWWm1lWes3XJDprA9ROiT2+bubas0xB5481p6FJNWO6CyvmUfmSThKbR2ykHIz+01eDmc7qt9v56F23sYieJ02dq3wRKp/Recw2f/wsP1CQAAAABJRU5ErkJggg==\";\r\n    string public constant tiger = \"iVBORw0KGgoAAAANSUhEUgAAADsAAAA7BAMAAAA3C++AAAAAGFBMVEUAAAD7iws1GiDKXgBjJQNFGQH/uGeAMwrO0BFlAAAAAXRSTlMAQObYZgAAAh5JREFUOMvtkkFynDAQRSlu8FvKrCUEeC3JPgBYk6yDRwcYKidw5f6VbjFo8Ng3iMUCNY+v/t2t5nv9t6urr69gd+1M07Tdqfvih/Y6KhuaxpFfT+YTHmkCBAParp/Ek+oD5HC42etHeT+FFCbB2iWn5wdsz0GFSQ7XzrsLPRqLVvVvo2nXl9lTfDA3IoDlMC1YDIf1oxqWn/DDtL8diB/zEb9yYtizaS8ETv/8gM9iPBB7dGL9Yg7MNE/Kok9Bmda7NIP8O3/dcWivSqxZyU1izZ+M2zG32rLaEiS3vMkTN3/HML3yUHFTR976ucUdhzRFAF66pgBEnVzFTwhAwWKtYMDhvU4Llhn2gUIBBF2d/yVAeBlooYD9teNRT7YcqETty5b0tNZxgYpeidoXrUUd2hPnJoY79pBYV2sJ29JL0wzTLUh3a8xXAGdRXwCMTO/WME84WVAUHHlzhe5RrbERiDcnzgMAicnUiQaUtam3vau0GVWppl8kGOZSo18Pd6VgyqLOtuDjfRkW60FuUwcLRQPv6+qHGLfUW/IYl7lCLnzOch2CBC7yNve1bGlrOmeKYVO7aPMlvR/UFjlnZ/YyOQAdCgPUy5KXm888vHngUNiEGMrZt9NdhDaV9uk1wh2bGJ/TvMd9YmedCjt2vmNvad7//iPhclcP8vvPOlBCXtJyaGIaMuxar5rl1PGujpyccDK1Lk+S+p7cqq2yf/2xbAxqJzj+AAAAAElFTkSuQmCC\";\r\n    string public constant snow_tiger = \"iVBORw0KGgoAAAANSUhEUgAAADsAAAA7BAMAAAA3C++AAAAAGFBMVEUAAADe2tI1GiC3r6FwaV5OSUDy7+m3safbVQ7aAAAAAXRSTlMAQObYZgAAAfhJREFUOMvtkkGS2yAQRVXcoBuPswUhK2vouYA1uLIel30Aa5H9pOb+ld/ICI/GN0jQQg2P19BA97/9s62vv6ewv/Wu60y/759MMLfR+tR1geO8d9/wyESkGD8/f5MJLjkN4NNW95SoYny8xTbZtCQPMUTebky89TI6MwtHls3mRmRW3RnImn3e7MzjS9YZQMbnvmJdmLxiJl3+GU6MPYYtNq4b7dfkccZoxcnc1Lb+xZl3jmrvXagYRz2ozXRy5kJe7QmHXzG54S2SFZ+BWRC+ToYaTvkoRPRx7rqDRSC7HFY8ApPiqGsXTLmdjCHyYO1CMYOJXMUf6BTu0CkUwo+Kf2a1BeNqR4Rq5z/V/iQuvlU7FtfTr0ebAelF8TtF4Ef7SEvLWli+d3au4ht6MwZOal8wecTA74pHLWPvia+Krwgw37e6vS+F5oMmP2dlxFxtXNmy2mIvOwkrxW2XagbI0KdSI258tQtuaxfc7C4kH4lDusdkNW5tCCJEUgSjkaSpUfM5iT6HxS7hUM50PVYrLGmxg3iJONJmD1lEgqtlopMn9yDnN0mae8ke5DVDb2tnpdVWntvaZoBM4fEQoWv2lru3qeIQ+5Zdc/coJjU7oLJ+zT4yScrnSvVJBCE/r6/By+5wbfb1fBSmvbvbRHE6PdqXwRKp/RcXe2iOMyBHUwAAAABJRU5ErkJggg==\";\r\n    string public constant skeleton = \"iVBORw0KGgoAAAANSUhEUgAAADwAAAA8BAMAAADI0sRBAAAAD1BMVEUAAAA1GiDn7O+uu8L///8nu3rwAAAAAXRSTlMAQObYZgAAAXlJREFUOMvt08uR3iAMAGDRgR40IOEGBGkAJ/3XFPgdlsf6kvtyscU3YiRGwM/6We+Lts+JwQMCBBSk7xp+s0cF4Cr6C79xVPPbAeQS43pquD1x6odnzXLhycyTVU9mZ781ACBfoqJHchKKpILBmSp5xoNbcj+9n93S39itV27ywsYNubOKidobe69cTg4I8cNPYx+ubXdwhVhYZ9+spW0NjgqBkk+WTAhfN8sOMRFS8B5J+6FcQXRya4tuwR4Fv6i1dnJM/GRrrhuHhOwN74ebZdGQ8eD0HJ7/k93tZBMZDPLGPi/8jQ23OWMdzLrPW5PW1uTeGivsHAfXg8WNPU3OoktpENi01/ZEvbK2gTDdSFdmarowIemN/4KLKdDK8U8FSoMz9Y2V70SFRtR+87WxWUk+IsnF7GBb2XYOd0vHr6gl70+YuPiMpCitiLB1Ej4by6WOYCaIr2+/0KZFRScnfiqbtWnWZVqipZWzVbFlUsPT9ewcn0n9Cw+dSpO5iSxwAAAAAElFTkSuQmCC\";\r\n    string public constant plastic = \"iVBORw0KGgoAAAANSUhEUgAAADwAAAA8BAMAAADI0sRBAAAAGFBMVEUAAADpKSk1GiD91wP/8Jz6d3fcvxzOICD6RWJSAAAAAXRSTlMAQObYZgAAARNJREFUOMvtkLFxwzAMRXXcgIXPLQPyPADhywAWF0jhBVxoADdZPx8Kv0jZiX3ncyk0xP/vE4Q0bLXVVu8oFx46MdCj7zKZ9TyZ5EmbXtd2s+/x0jzHfHsMTms0ESP4Fz6EBVdPDEtNNnyM2XpJObiYxayUpw5rFpEyGlZFm8b82fAJ5rFoPmBztAXB2GEoxS1YTk+CFrrHNhy24WLDo66xFbHVK/iCP3iHB3wGnmvYFHqWGyPQ77KuYO1puih6lq0NZ76QFDkYHfXei9QLTqPA2C/cgZoWjpr1N6d/+Lmuw0rvr5Q7xtswVMNfc3zBkIYpd1UzffYtDnxeY3+L/QNM2TAf42bPcb85MdUNbo9z8X/wDzSZUrFWSci1AAAAAElFTkSuQmCC\";\r\n    string public constant zombie = \"iVBORw0KGgoAAAANSUhEUgAAADwAAAA8BAMAAADI0sRBAAAAFVBMVEUAAAC5tJQ1GiCWj2vOyq+QQD+ubm5a+ZWUAAAAAXRSTlMAQObYZgAAAXlJREFUOMvt0+2NpDAMBuDIHbzxFpDwcf8dVwDaCpB2Cljprv8Szh5mIIHcVbBGEQlP7IQIwk/8RD+G49bDYRlSCDR8Dp0JhIlzCWGMsiLd2BASQ8iMKPGWvFguvDgs/+OanlHwZrvWK3PhAlvbUMZrdYJmzjolWtWWVqvechFPT+TJPKLD1hIZdZgNUTSRGluFLvvWepx35kSy8xooXZh3FucYxoYzrDlHiYjOsWYB685qXYmEg2kAFID41hg+qA/215b/w/TYVjOAnTPgM/JxrjRPEe6cbLBlhjMOjm6KJ4d5WxQccfICFODF9JWB8c784t/Tkz9qljP7jzGjZcSDvxdkVBymF+uTNzhXn1uueZ6uTIpnFB8MAPapR4xy8ggPLuHKvLPcWUXf9ch7XFLFmVXBbxaozjfW9/+tXS7HUj3Wk7VlgvG5GXLeWi5D/SLl67uqDbbpDT9aLo96sTZ7grYsOp9jWm7MZd5qlrllXYf0T1ZWfPqDv21oVTTS5UCgAAAAAElFTkSuQmCC\";\r\n    string public constant gorilla = \"iVBORw0KGgoAAAANSUhEUgAAADwAAAA8BAMAAADI0sRBAAAAFVBMVEUAAAAdGhtbV1gtJihJQ0V9e3w+Njj3O8BjAAAAAXRSTlMAQObYZgAAAaVJREFUOMvt001uwyAQBWBzA/6aPaPJAZCl7kFcIJF6gKj3v0PfMwK7cRY5QOxKLv6YN0OiLJ/rc7263OIsnwb/nNX8uHvCe+ev7see2MuX+mZNS/Um6VQs6qWqNVUlVXku/5LmVchSU5PbU/FdCu7EJhH31T5nF8WGZQHWiPRztm/emtTSOd0jmeXWoJjp6cS4qzUKPLNuzHNvXF8yRzuxQcfOPHdnTGEHF3NXYudKvto42JO94GRknEsSOe3fhmgVbZ1b5eomOxeRJiKVo6lsi/guG0k0ESXziaUXO7iC6Wq5gJJ1cMDUlYGdma2Y/jGqs3h03xmdkwQ7uZJ1cCXr5EuOUv9Xq5QwwgNY0pG9gPMIX2PcuJHbxqWss3fIGc1QwRWSMEoIebJbV1dTic5yUaJXvhm8YJGjCy6T8XAlgAEjHc43Yy/XdrJzK6/cGYbL7dWh7x8/4J6V93Buxt/MYpw9MJ3aHXrky9aY2T19a/94t9phkP/MF7P418255+zu2+7Z+zn3z2H/vtdz9Roec3DuPjKX62O0fh0+ml82PVbTt+o/+lZrkj7h1iYAAAAASUVORK5CYII=\";\r\n    string public constant yeti = \"iVBORw0KGgoAAAANSUhEUgAAADwAAAA8BAMAAADI0sRBAAAAGFBMVEUAAADr3cAfHB3g5+7Mt42+zdz17Nrx9fizITOOAAAAAXRSTlMAQObYZgAAAbtJREFUOMvtkkFuwyAQRS1uMGiUNdi42RtZXYM4QSwOkCx6gPT+Uv/YAtyQRQ9QUGQ+j/9niD38j//xbozDaOSpsOip+hrvGvujvYxfpsOWPtgmo5IOD9KdmdhSYKMCkw70av+gZJkEU9CJHi/mO0VMLUUc5sW8ZkfGgWEADA7pfbZN1iiddJ9ukSx2o2CWdN1hzGAUA/aYdyz33nF4i6W1DitUPLDc+8DowhQc1Z0FHjgIvhhXsBVsCTcTjHuRFqzb2yAOxOnAKYh6UMORKBFRkNaYduH+ihVpYUQsWJ6QlmrnAVg4GxGggrngCV0HBBaMJaP7Z3EvZFG9YVTWNJmKg2AuOAjmiq+ro/DbzRS3Ej4Bkz5jS8BLCffO7TgJTjuO0dfa27KgGByikIRWpmmtOHt/Czq6Wdy36CzP3ueCB4jVzdMNBkTNyy1uMLTvAWqRnXJ2ws9UPGcvYz3wtovc3JNfN9Bsjk6whl5aOA5nn8dDjVmUNycM3tJm0DO+eonOptxT4v3zr+5xE/MZY2Os5u9c+669509TZLvn+X9o79v3br89a+Ny+oxF+mcp/T68FL8KzWd3Fi7uHyjvfMTXGo7ZAAAAAElFTkSuQmCC\";\r\n    string public constant squatch = \"iVBORw0KGgoAAAANSUhEUgAAADwAAAA8BAMAAADI0sRBAAAAGFBMVEUAAADLlms1GiB6Tyywe1FTOSTerISZakQMLHw0AAAAAXRSTlMAQObYZgAAAbtJREFUOMvtkkFuwyAQRS1uMGiUNdi42RtZXYM4QSwOkCx6gPT+Uv/YAtyQRQ9QUGQ+j/9niD38j//xbozDaOSpsOip+hrvGvujvYxfpsOWPtgmo5IOD9KdmdhSYKMCkw70av+gZJkEU9CJHi/mO0VMLUUc5sW8ZkfGgWEADA7pfbZN1iiddJ9ukSx2o2CWdN1hzGAUA/aYdyz33nF4i6W1DitUPLDc+8DowhQc1Z0FHjgIvhhXsBVsCTcTjHuRFqzb2yAOxOnAKYh6UMORKBFRkNaYduH+ihVpYUQsWJ6QlmrnAVg4GxGggrngCV0HBBaMJaP7Z3EvZFG9YVTWNJmKg2AuOAjmiq+ro/DbzRS3Ej4Bkz5jS8BLCffO7TgJTjuO0dfa27KgGByikIRWpmmtOHt/Czq6Wdy36CzP3ueCB4jVzdMNBkTNyy1uMLTvAWqRnXJ2ws9UPGcvYz3wtovc3JNfN9Bsjk6whl5aOA5nn8dDjVmUNycM3tJm0DO+eonOptxT4v3zr+5xE/MZY2Os5u9c+669509TZLvn+X9o79v3br89a+Ny+oxF+mcp/T68FL8KzWd3Fi7uHyjvfMTXGo7ZAAAAAElFTkSuQmCC\";\r\n    string public constant steve = \"iVBORw0KGgoAAAANSUhEUgAAADwAAAA8BAMAAADI0sRBAAAAMFBMVEUAAACWX0GHVTs1GiAyMiVZWVlOTk46OixOoE7/IyMTHRmlpKD8aWCGVDqQWz6FUTbUvie6AAAAAXRSTlMAQObYZgAAAYVJREFUOMtiGAWjYBQMEmBsbACimI2NUYShYoA66SelYSAKA3ghWzfvDS4CVpgvFCxUyMRVV25aXLc0uUFyAsEriCvbI7h0l3iSegPP4AV8rzMxU1sH8pg3v8yXv3dERqeOSJr8aKOsUeAwjSIS2L/MGPYXIALIkCwl5AjaZwPfEkuAYWXrDs1nFmWfsqbHTOQ4kyRriDxHl9bhoAyj8+jijno20vRMJmT3LYHyREp/en7EGXu2RcwhG/hmy3li2d4DIT1m17OJOaGeYfXWGMohvWdGRkz6YGSpgP1l9z8bz6zZmZ7uwwpNt8LajgFlN7DxK3vKpeXpNE2n03mapvPR6OJKxmwmBVbYEWO73e12W6mvsrtt24+ua9uuk/iRppAGxn+LHgQoX+PmOR4v72G84UuYMamaqqmbWovMysa3a1jPi8VmsTwpnoHJw+PmaXlS1sCBL8/zSpmFz4cLW2F7WZVVXTaHUkupy6qRdsXC8K/fEWDCrweQ8Z8JwnvPPLD1PAZ+AOHthhbQTy8VAAAAAElFTkSuQmCC\";\r\n    string public constant cosmic = \"iVBORw0KGgoAAAANSUhEUgAAADwAAAA8CAMAAAANIilAAAAANlBMVEUAAAApIEIwKEkeFCkbETclHEFMRGJDO1k2LU/7+v9FPVs7MlPw6/7WyfdNR21CO2TT0NvKxNqjSdkcAAAAAXRSTlMAQObYZgAAAjZJREFUSMft1QuymzAMBdBKlixDgLb732zvVdzHgAPJAqKJSbB1JOUzk1/f+MY3vnETpQx3H0KEWfkv+t1nBZBazbyal7x1q55b5QPbCKF7dsmXLNDK+77EDi9ln4Td2xLlrV0f1X9rlRMuGti6xyIPdFVi7e+Z2KXq/AYXkBkOlr5gB0qjuvD5Xhc6pZ2xnjh75ubHOPhMjJt5CrT9ACOHBWKZkU9MtEptm2LjDW7AvTMtddUQwmtcSlrd2g826kIkffW5SznjzBR07r9NLm55oh1n6slKx7RWrcF2bJZSqDuWcsLcLyGobmCPA3Z3A8zOmTpiLRLPDGtT8/0X5o31cBJ0+hrXWCJxTOs0H7Fu+sR1wNQhFQuRGlU6hllyIu4CD5Z42rHyRdrU8rQivfOIWbaC8auWEQc0LkwxG/AkS+CksjPigBGTZFc8frtdda5PeMbzEomtmtuIWZsquj3gmAS1zQEvMYOzb4fOJG1pVh0TI4iHubNjWyqLS+iOFfmT5cSt26G1ZeUGbAesuZ2PXDJijud5zIh1ZkrX1oPTZ9GX2hi98xG3rv1gR5zXWXfsvmO9xg+3HB7XcjhoazPn4SU2e4Dy8/EThkZBnKrIFW5/qGnP/8/+IFa9xm311DaOVqDmv7O+6ayIVxgBe4FhUVx3O+rEr3WRxLsd9SWmFb3HjTikXOF5t4O+wQoLLDd4g45pxEUSz2tc4yw+rVOU4WjLw5AbnAlTyICln+k1zuoS8oP/AbVjE0qqVsTfAAAAAElFTkSuQmCC\";\r\n    string public constant pirate = \"iVBORw0KGgoAAAANSUhEUgAAADwAAAA8BAMAAADI0sRBAAAAJFBMVEUAAABGOC4fHB08ODoyKCHb3N9iUkYrKCq1ucT39/eioaJTTlGED+Q9AAAAAXRSTlMAQObYZgAAAZNJREFUOMvt07FuwjAQBuDIb3BW5NkOAcrsIVKZjKw+AJKlrGToA8CQPVIlXiBSmdkYu/blegn4OEPhCfg9IPT5zmcssldeeZriGYpC6ScbZg00n/ohGwW44f5EzNgcjATQtyce+hCKMysDTarTvt5/hYBFBoYlE16EGnvvQ5eJBla4lObFfT30LUKthSpzk5sb7sbP6cDmjhf1+ZtAhpGB83SdRc5MiZiw6CPjaK5ELPFmgvg77tUDO2Qns5mOXFMrZOmkx5WZ5n/2OQBIAZwpJYxR5imzH1b0nB3aBllp4u7KAjm/4TVnBeBAsleZJqN/AMCM8yJ0jLF1nrBIGDAOkNmTFQnPAMM4kAt/4Ya/WdjryA5yQ0zlsVfp49Gs/MDYOyqm7owHVSnj2Xw22EjOb/suI3aDy/s/GM3mExb2aCtygbMlo01OR2tb/YDF+8laWyHT1eK9YzHylrFL2A4hFn7whnof79mDTLm6zrYqitLHq07sLc9buy3sr77wmJZ43u5stbPLH8YVsWhbdGuXWP4Hcpds+u2hojoAAAAASUVORK5CYII=\";\r\n\r\n    function getHand1() public pure returns (string memory) {\r\n        return skin_tone_1;\r\n    }\r\n\r\n    function getHand2() public pure returns (string memory) {\r\n        return skin_tone_2;\r\n    }\r\n\r\n    function getHand3() public pure returns (string memory) {\r\n        return skin_tone_3;\r\n    }\r\n\r\n    function getHand4() public pure returns (string memory) {\r\n        return skin_tone_4;\r\n    }\r\n\r\n    function getBubbleGum() public pure returns (string memory) {\r\n        return bubble_gum;\r\n    }\r\n\r\n    function getGreenSlime() public pure returns (string memory) {\r\n        return green_slime;\r\n    }\r\n\r\n    function getBlueSlime() public pure returns (string memory) {\r\n        return blue_slime;\r\n    }\r\n\r\n    function getVitiligo() public pure returns (string memory) {\r\n        return vitiligo;\r\n    }\r\n\r\n    function getGreenGoblin() public pure returns (string memory) {\r\n        return green_goblin;\r\n    }\r\n\r\n    function getRedGoblin() public pure returns (string memory) {\r\n        return red_goblin;\r\n    }\r\n\r\n    function getYellowGoblin() public pure returns (string memory) {\r\n        return yellow_goblin;\r\n    }\r\n\r\n    function getSully() public pure returns (string memory) {\r\n        return sully;\r\n    }\r\n\r\n    function getTiger() public pure returns (string memory) {\r\n        return tiger;\r\n    }\r\n\r\n    function getSnowTiger() public pure returns (string memory) {\r\n        return snow_tiger;\r\n    }\r\n\r\n    function getSkeleton() public pure returns (string memory) {\r\n        return skeleton; \r\n    }\r\n\r\n    function getPlastic() public pure returns (string memory) {\r\n        return plastic; \r\n    }\r\n\r\n    function getZombie() public pure returns (string memory) {\r\n        return zombie; \r\n    }\r\n\r\n    function getGorilla() public pure returns (string memory) {\r\n        return gorilla; \r\n    }\r\n\r\n    function getYeti() public pure returns (string memory) {\r\n        return yeti; \r\n    }\r\n\r\n    function getSquatch() public pure returns (string memory) {\r\n        return squatch; \r\n    }\r\n\r\n    function getSteve() public pure returns (string memory) {\r\n        return steve; \r\n    }\r\n\r\n    function getCosmic() public pure returns (string memory) {\r\n        return cosmic; \r\n    }\r\n\r\n    function getPirate() public pure returns (string memory) {\r\n        return pirate; \r\n    }\r\n}\r\n\r\ncontract Potato {\r\n    string public constant potato = \"iVBORw0KGgoAAAANSUhEUgAAADsAAAA7BAMAAAA3C++AAAAAJFBMVEUAAADNIScTExP9u1X/bABCFxP////2fDv/wADMLzveoVC6ICWAwLh8AAAAAXRSTlMAQObYZgAAAUNJREFUOMvtzz1Ow0AQBeCwJ2BWe4Dd2fwBnaewRLeRC9dGuQBIPoBdpAZRpE6XlnSckrckVJ5NTZGnkZtPb3Y8u+UcvqrGXkNvaDbzJQ7WkDe24NnIYop3BVjQ2GDQT9ZgifKuxwSXPL4qG2JyZHGAela+u0mE1QrDKLg2UfJGZUfU7MH2zmsMYA5Nstqf4er31SjDOhF4muB4rGI94Di1venj8lXqQIn89G1a9m99H09zjQOd+fF7aBqF3aUtQztlQ59u2UfM89e+ITvhttmwVCxSr1Vuo+ScCvwhjES0cbnC1RbpVH6iNi62ObGeTzmQu3BXz6nEzAuVzS93x+OhqxIOnzD98ZDoXuFNXv5weFF258dttWXwKuTd2nYWqeKAssp2FJGdWs7biXcirJZzHc5Q1jTXkZKinp2hJWfgLf88PzJgTBe1TCseAAAAAElFTkSuQmCC\";\r\n\r\n    function getPotato() public pure returns (string memory) {\r\n        return potato;\r\n    }\r\n}"
      },
      "@Allcontracts/InventoryManager.sol": {
        "content": "// SPDX-License-Identifier: Unlicense\r\nimport \"./Inventory.sol\";\r\npragma solidity 0.8.7;\r\n\r\ncontract InventoryManager {\r\n    address impl_;\r\n    address public manager;\r\n\r\n    enum Part {\r\n        background,\r\n        hand_type,\r\n        potato\r\n    }\r\n\r\n    mapping(uint8 => address) public backgrounds;\r\n    mapping(uint8 => address) public hand_types;\r\n    mapping(uint8 => address) public potatoes;\r\n\r\n    string public constant header =\r\n        '<svg id=\"backburner\" width=\"100%\" height=\"100%\" version=\"1.1\" viewBox=\"0 0 60 60\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">';\r\n    string public constant footer =\r\n        \"<style>#backburner{shape-rendering: crispedges; image-rendering: -webkit-crisp-edges; image-rendering: -moz-crisp-edges; image-rendering: crisp-edges; image-rendering: pixelated; -ms-interpolation-mode: nearest-neighbor;}</style></svg>\";\r\n\r\n    function getSVG(\r\n        uint8 background_,\r\n        uint8 hand_type_,\r\n        bool hasPotato_,\r\n        uint8 potato_\r\n    ) public view returns (string memory) {\r\n        return\r\n            string(\r\n                abi.encodePacked(\r\n                    header,\r\n                    get(Part.background, background_),\r\n                    get(Part.hand_type, hand_type_),\r\n                    hasPotato_ ? get(Part.potato, potato_) : \"\",\r\n                    footer\r\n                )\r\n            );\r\n    }\r\n\r\n    function getSVGInterface(\r\n        uint8 background_,\r\n        uint8 hand_type_,\r\n        bool hasPotato_,\r\n        uint8 potato_\r\n    ) external view returns (string memory) {\r\n        return\r\n            string(\r\n                abi.encodePacked(\r\n                    header,\r\n                    get(Part.background, background_),\r\n                    get(Part.hand_type, hand_type_),\r\n                    hasPotato_ ? get(Part.potato, potato_) : \"\",\r\n                    footer\r\n                )\r\n            );\r\n    }\r\n\r\n    constructor() {\r\n        manager = msg.sender;\r\n    }\r\n\r\n    function getTokenURI(\r\n        uint16 id_,\r\n        uint8 background_,\r\n        uint8 hand_type_,\r\n        bool hasPotato_,\r\n        uint32 generation_,\r\n        bool isActive_,\r\n        uint8 potato_\r\n    ) external view returns (string memory) {\r\n        string memory svg = Base64.encode(\r\n            bytes(getSVG(background_, hand_type_, hasPotato_, potato_))\r\n        );\r\n\r\n        return\r\n            string(\r\n                abi.encodePacked(\r\n                    \"data:application/json;base64,\",\r\n                    Base64.encode(\r\n                        bytes(\r\n                            abi.encodePacked(\r\n                                '{\"name\": \"Token #',\r\n                                toString(id_),\r\n                                '\", \"description\": \"A simple Token\", \"image\": \"data:image/svg+xml;base64,',\r\n                                svg,\r\n                                '\", ',\r\n                                getAttributes(\r\n                                    background_,\r\n                                    hand_type_,\r\n                                    hasPotato_,\r\n                                    generation_,\r\n                                    isActive_\r\n                                ),\r\n                                \"}\"\r\n                            )\r\n                        )\r\n                    )\r\n                )\r\n            );\r\n    }\r\n\r\n    /*///////////////////////////////////////////////////////////////\r\n                    INVENTORY MANAGEMENT\r\n    //////////////////////////////////////////////////////////////*/\r\n\r\n    function setBackgrounds(uint8 count, address source) external {\r\n        require(msg.sender == manager, \"not manager\");\r\n\r\n        for (uint8 id = 1; id <= count; id++) {\r\n            backgrounds[id] = source;\r\n        }\r\n    }\r\n\r\n    function setHands(uint8 count, address source) external {\r\n        require(msg.sender == manager, \"not manager\");\r\n\r\n        for (uint8 id = 1; id <= count; id++) {\r\n            hand_types[id] = source;\r\n        }\r\n    }\r\n\r\n    function setPotatoes(uint8 count, address source) external {\r\n        require(msg.sender == manager, \"not manager\");\r\n\r\n        for (uint8 id = 1; id <= count; id++) {\r\n            potatoes[id] = source;\r\n        }\r\n    }\r\n\r\n    /*///////////////////////////////////////////////////////////////\r\n                    INTERNAL FUNCTIONS\r\n    //////////////////////////////////////////////////////////////*/\r\n\r\n    function call(\r\n        address source,\r\n        bytes memory sig\r\n    ) internal view returns (string memory svg) {\r\n        (bool succ, bytes memory ret) = source.staticcall(sig);\r\n        require(succ, \"failed to get data\");\r\n        svg = abi.decode(ret, (string));\r\n    }\r\n\r\n    function get(Part part, uint8 id) public view returns (string memory svg) {\r\n        address source;\r\n        if (part == Part.background) {\r\n            source = backgrounds[id];\r\n        } else if (part == Part.hand_type) {\r\n            source = hand_types[id];\r\n        } else if (part == Part.potato) {\r\n            source = potatoes[id];\r\n        } else {\r\n            revert(\"invalid part\");\r\n        }\r\n        string memory sig;\r\n        if (part == Part.background) {\r\n            if (1 <= id && id <= 11) {\r\n                sig = \"getBlue()\";\r\n            } else if (11 < id && id <= 17) {\r\n                sig = \"getGreen()\";\r\n            } else if (17 < id && id <= 20) {\r\n                sig = \"getPurple()\";\r\n            } else {\r\n                revert(\"Invalid Background Id\");\r\n            }\r\n        } else if (part == Part.hand_type) {\r\n            if (1 <= id && id <= 3) {\r\n                sig = \"getHand1()\";\r\n            } else if (3 < id && id <= 6) {\r\n                sig = \"getHand2()\";\r\n            } else if (6 < id && id <= 10) {\r\n                sig = \"getHand3()\";\r\n            } else if (10 < id && id <= 14) {\r\n                sig = \"getHand4()\";\r\n            } else if (14 < id && id <= 17) {\r\n                sig = \"getVitiligo()\";\r\n            } else if (17 < id && id <= 19) {\r\n                sig = \"getBlueSlime()\";\r\n            } else if (19 < id && id <= 22) {\r\n                sig = \"getGreenSlime()\";\r\n            } else if (22 < id && id <= 25) {\r\n                sig = \"getBubbleGum()\";\r\n            } else if (25 < id && id <= 27) {\r\n                sig = \"getGreenGoblin()\";\r\n            } else if (27 < id && id <= 28) {\r\n                sig = \"getZombie()\";\r\n            } else if (28 < id && id <= 29) {\r\n                sig = \"getRedGoblin()\";\r\n            } else if (29 < id && id <= 30) {\r\n                sig = \"getYellowGoblin()\";\r\n            } else if (30 < id && id <= 31) {\r\n                sig = \"getSully()\";\r\n            } else if (31 < id && id <= 32) {\r\n                sig = \"getPlastic()\";\r\n            } else if (32 < id && id <= 33) {\r\n                sig = \"getTiger()\";\r\n            } else if (33 < id && id <= 34) {\r\n                sig = \"getSkeleton()\";\r\n            } else if (34 < id && id <= 35) {\r\n                sig = \"getSnowTiger()\";\r\n            } else if (35 < id && id <= 36) {\r\n                sig = \"getGorilla()\";\r\n            } else if (36 < id && id <= 37) {\r\n                sig = \"getYeti()\";\r\n            } else if (37 < id && id <= 38) {\r\n                sig = \"getSquatch()\";\r\n            } else if (38 < id && id <= 39) {\r\n                sig = \"getSteve()\";\r\n            } else if (39 < id && id <= 40) {\r\n                sig = \"getCosmic()\";\r\n            } else if (40 < id && id <= 41) {\r\n                sig = \"getPirate()\";\r\n            } else {\r\n                revert(\"Invalid Hand Id\");\r\n            }\r\n        } else if (part == Part.potato) {\r\n            sig = \"getPotato()\";\r\n        } else {\r\n            revert(\"invalid part\");\r\n        }\r\n        (bool succ, bytes memory data) = source.staticcall(\r\n            abi.encodeWithSignature(sig)\r\n        );\r\n        require(succ, \"failed to get data\");\r\n        return wrapTag(abi.decode(data, (string)));\r\n    }\r\n\r\n    function wrapTag(string memory uri) internal pure returns (string memory) {\r\n        return\r\n            string(\r\n                abi.encodePacked(\r\n                    '<image width=\"60\" height=\"60\" image-rendering=\"pixelated\" preserveAspectRatio=\"xMidYMid\" xlink:href=\"data:image/png;base64,',\r\n                    uri,\r\n                    '\"/>'\r\n                )\r\n            );\r\n    }\r\n\r\n    function toString(uint256 value) internal pure returns (string memory) {\r\n        // Inspired by OraclizeAPI's implementation - MIT licence\r\n        // https://github.com/oraclize/ethereum-api/blob/b42146b063c7d6ee1358846c198246239e9360e8/oraclizeAPI_0.4.25.sol\r\n\r\n        if (value == 0) {\r\n            return \"0\";\r\n        }\r\n        uint256 temp = value;\r\n        uint256 digits;\r\n        while (temp != 0) {\r\n            digits++;\r\n            temp /= 10;\r\n        }\r\n        bytes memory buffer = new bytes(digits);\r\n        while (value != 0) {\r\n            digits -= 1;\r\n            buffer[digits] = bytes1(uint8(48 + uint256(value % 10)));\r\n            value /= 10;\r\n        }\r\n        return string(buffer);\r\n    }\r\n\r\n    function getAttributes(\r\n        uint8 background_,\r\n        uint8 hand_type_,\r\n        bool hasPotato_,\r\n        uint32 generation_,\r\n        bool isActive_\r\n    ) public pure returns (string memory) {\r\n        return\r\n            string(\r\n                abi.encodePacked(\r\n                    '\"attributes\": [',\r\n                    getBackgroundAttributes(background_),\r\n                    \",\",\r\n                    getHandAttributes(hand_type_),\r\n                    ',{\"trait_type\": \"Potato\", \"value\":\"',\r\n                    hasPotato_ ? \"Yes\" : \"No\",\r\n                    '\"},{\"display_type\": \"number\",\"trait_type\": \"Generation\", \"value\":\"',\r\n                    toString(generation_),\r\n                    '\"},{\"trait_type\": \"Active\", \"value\":\"',\r\n                    isActive_ ? \"Yes\" : \"No\",\r\n                    '\"}]'\r\n                )\r\n            );\r\n    }\r\n\r\n    function getBackgroundAttributes(\r\n        uint8 background_\r\n    ) internal pure returns (string memory) {\r\n        return\r\n            string(\r\n                abi.encodePacked(\r\n                    '{\"trait_type\":\"Background\", \"value\":\"',\r\n                    getBackgroundName(background_),\r\n                    '\"}'\r\n                )\r\n            );\r\n    }\r\n\r\n    function getHandAttributes(\r\n        uint8 hand_type_\r\n    ) internal pure returns (string memory) {\r\n        return\r\n            string(\r\n                abi.encodePacked(\r\n                    '{\"trait_type\":\"Hand Type\", \"value\": \"',\r\n                    getHandName(hand_type_),\r\n                    '\"}'\r\n                )\r\n            );\r\n    }\r\n\r\n    // Here, we do sort of a Binary Search to find the correct name. Not the pritiest code I've wrote, but hey, it works!\r\n\r\n    function getBackgroundName(uint8 id) public pure returns (string memory) {\r\n        if (id <= 20) {\r\n            if (id < 10) {\r\n                if (id < 5) {\r\n                    if (id < 3) {\r\n                        return id == 1 ? \"Blue\" : \"Blue\";\r\n                    }\r\n                    return id == 3 ? \"Blue\" : \"Blue\";\r\n                }\r\n                if (id < 7) return id == 5 ? \"Blue\" : \"Blue\";\r\n                return id == 7 ? \"Blue\" : id == 8 ? \"Blue\" : \"Blue\";\r\n            }\r\n            if (id <= 15) {\r\n                if (id < 13) {\r\n                    return id == 10 ? \"Blue\" : id == 11 ? \"Blue\" : \"Green\";\r\n                }\r\n                return id == 13 ? \"Green\" : id == 14 ? \"Green\" : \"Green\";\r\n            }\r\n            if (id < 18) {\r\n                return id == 16 ? \"Green\" : \"Green\";\r\n            }\r\n            return id == 18 ? \"Purple\" : id == 19 ? \"Purple\" : \"Purple\";\r\n        }\r\n        return \"Error: Id not found\";\r\n    }\r\n\r\n    function getHandName(uint8 id) public pure returns (string memory) {\r\n        if (id <= 41) {\r\n            if (id < 10) {\r\n                if (id < 5) {\r\n                    if (id < 3) {\r\n                        return id == 1 ? \"White\" : \"White\";\r\n                    }\r\n                    return id == 3 ? \"White\" : \"Tan\";\r\n                }\r\n                if (id < 7) {\r\n                    return id == 5 ? \"Tan\" : \"Tan\";\r\n                }\r\n                return id == 7 ? \"Brown\" : id == 8 ? \"Brown\" : \"Brown\";\r\n            }\r\n            if (id <= 15) {\r\n                if (id < 13) {\r\n                    return id == 10 ? \"Brown\" : id == 11 ? \"Black\" : \"Black\";\r\n                }\r\n                return id == 13 ? \"Black\" : id == 14 ? \"Black\" : \"Vitiligio\";\r\n            }\r\n            if (id <= 20) {\r\n                if (id < 18) {\r\n                    return id == 16 ? \"Vitiligio\" : \"Vitiligio\";\r\n                }\r\n                return\r\n                    id == 18 ? \"Blue Slime\" : id == 19\r\n                        ? \"Blue Slime\"\r\n                        : \"Green Slime\";\r\n            }\r\n            if (id <= 25) {\r\n                if (id < 23) {\r\n                    return id == 21 ? \"Green Slime\" : \"Green Slime\";\r\n                }\r\n                return\r\n                    id == 23 ? \"Bubble Gum\" : id == 24\r\n                        ? \"Bubble Gum\"\r\n                        : \"Bubble Gum\";\r\n            }\r\n            if (id <= 30) {\r\n                if (id < 28) {\r\n                    return id == 26 ? \"Green Goblin\" : \"Green Goblin\";\r\n                }\r\n                return\r\n                    id == 28 ? \"Zombie\" : id == 29 ? \"Red Goblin\" : \"Yellow Goblin\";\r\n            }\r\n            if (id <= 32) {\r\n                return id == 31 ? \"Sully\" : \"Plastic\";\r\n            } \r\n            if (id <= 34) {\r\n                return id == 33 ? \"Tiger\" : \"Skeleton\";\r\n            }\r\n            if (id <= 36) {\r\n                return id == 35 ? \"Snow Tiger\" : \"Gorilla\";\r\n            }\r\n            if (id <= 38) {\r\n                return id == 37 ? \"Yeti\" : \"Squatch\";\r\n            }\r\n            if (id <= 40) {\r\n                return id == 39 ? \"Steve\" : \"Cosmic\";\r\n            }\r\n            if (id == 41) {\r\n                return \"Pirate\";\r\n            }\r\n        }\r\n        return \"Error: Id not found\";\r\n    }\r\n}\r\n\r\n/// @title Base64\r\n/// @author Brecht Devos - <brecht@loopring.org>\r\n/// @notice Provides a function for encoding some bytes in base64\r\n/// @notice NOT BUILT BY ETHERORCS TEAM. Thanks Bretch Devos!\r\nlibrary Base64 {\r\n    string internal constant TABLE =\r\n        \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\r\n\r\n    function encode(bytes memory data) internal pure returns (string memory) {\r\n        if (data.length == 0) return \"\";\r\n\r\n        // load the table into memory\r\n        string memory table = TABLE;\r\n\r\n        // multiply by 4/3 rounded up\r\n        uint256 encodedLen = 4 * ((data.length + 2) / 3);\r\n\r\n        // add some extra buffer at the end required for the writing\r\n        string memory result = new string(encodedLen + 32);\r\n\r\n        assembly {\r\n            // set the actual output length\r\n            mstore(result, encodedLen)\r\n\r\n            // prepare the lookup table\r\n            let tablePtr := add(table, 1)\r\n\r\n            // input ptr\r\n            let dataPtr := data\r\n            let endPtr := add(dataPtr, mload(data))\r\n\r\n            // result ptr, jump over length\r\n            let resultPtr := add(result, 32)\r\n\r\n            // run over the input, 3 bytes at a time\r\n            for {\r\n\r\n            } lt(dataPtr, endPtr) {\r\n\r\n            } {\r\n                dataPtr := add(dataPtr, 3)\r\n\r\n                // read 3 bytes\r\n                let input := mload(dataPtr)\r\n\r\n                // write 4 characters\r\n                mstore(\r\n                    resultPtr,\r\n                    shl(248, mload(add(tablePtr, and(shr(18, input), 0x3F))))\r\n                )\r\n                resultPtr := add(resultPtr, 1)\r\n                mstore(\r\n                    resultPtr,\r\n                    shl(248, mload(add(tablePtr, and(shr(12, input), 0x3F))))\r\n                )\r\n                resultPtr := add(resultPtr, 1)\r\n                mstore(\r\n                    resultPtr,\r\n                    shl(248, mload(add(tablePtr, and(shr(6, input), 0x3F))))\r\n                )\r\n                resultPtr := add(resultPtr, 1)\r\n                mstore(\r\n                    resultPtr,\r\n                    shl(248, mload(add(tablePtr, and(input, 0x3F))))\r\n                )\r\n                resultPtr := add(resultPtr, 1)\r\n            }\r\n\r\n            // padding with '='\r\n            switch mod(mload(data), 3)\r\n            case 1 {\r\n                mstore(sub(resultPtr, 2), shl(240, 0x3d3d))\r\n            }\r\n            case 2 {\r\n                mstore(sub(resultPtr, 1), shl(248, 0x3d))\r\n            }\r\n        }\r\n\r\n        return result;\r\n    }\r\n}\r\n"
      }
    },
    "settings": {
      "optimizer": {
        "enabled": true,
        "runs": 25
      },
      "metadata": {
        "bytecodeHash": "none"
      },
      "outputSelection": {
        "*": {
          "*": [
            "abi",
            "evm.bytecode",
            "evm.deployedBytecode",
            "evm.methodIdentifiers",
            "metadata"
          ],
          "": [
            "ast"
          ]
        }
      }
    }
  },
  "output": {
    "sources": {
      "@Allcontracts/Inventory.sol": {
        "ast": {
          "absolutePath": "@Allcontracts/Inventory.sol",
          "exportedSymbols": {
            "Backgrounds": [
              35
            ],
            "Hands": [
              289
            ],
            "Potato": [
              301
            ]
          },
          "id": 302,
          "license": "GPL-3.0",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1,
              "literals": [
                "solidity",
                ">=",
                "0.7",
                ".0",
                "<",
                "0.9",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "39:31:0"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "contract",
              "fullyImplemented": true,
              "id": 35,
              "linearizedBaseContracts": [
                35
              ],
              "name": "Backgrounds",
              "nameLocation": "83:11:0",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": true,
                  "functionSelector": "ed18f0a7",
                  "id": 4,
                  "mutability": "constant",
                  "name": "blue",
                  "nameLocation": "125:4:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 35,
                  "src": "102:540:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "102:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": {
                    "hexValue": "6956424f5277304b47676f414141414e5355684555674141414477414141413842414d4141414449307352424141414149474e49556b304141486f6d41414341684141412b6741414149446f414142314d414141366d41414144715941414158634a79365554774141414162554578555263666c7a73666c7a73666c7a73666c7a73666c7a73666c7a73666c7a73666c7a762f2f2f2f50464d4c67414141414864464a4f5539726f3466483438506348484252374141414141574a4c5230514968743656656741414141643053553146422b63474641674f4c367a76395a30414141416e5355524256446a4c5932415578414f45474d7a4c38594153686e4238306d576a307150536f394b6a307150536f394c4457426f4152536b784a724e6a597063414141416c64455659644752686447553659334a6c5958526c414449774d6a4d744d4459744d6a42554d4467364d5451364e4463724d4441364d4443766a387a46414141414a5852465748526b5958526c4f6d31765a476c6d655141794d44497a4c5441324c544977564441344f6a45304f6a51334b7a41774f6a417733744a306551414141436830525668305a4746305a5470306157316c63335268625841414d6a41794d7930774e6930794d4651774f446f784e446f304e7973774d446f774d496e4856615941414141415355564f524b35435949493d",
                    "id": 3,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "132:510:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_ce0bb9bedc04a81c642b9fecd4e3e3ef3c6109ac41b18e85c5103277ffa70c08",
                      "typeString": "literal_string \"iVBORw0KGgoAAAANSUhEUgAAADwAAAA8BAMAAADI0sRBAAAAIGNIUk0AAHomAACAhAAA+gAAAIDoAAB1MAAA6mAAADqYAAAXcJy6UTwAAAAbUExURcflzsflzsflzsflzsflzsflzsflzsflzv////PFMLgAAAAHdFJOU9ro4fH48PcHHBR7AAAAAWJLR0QIht6VegAAAAd0SU1FB+cGFAgOL6zv9Z0AAAAnSURBVDjLY2AUxAOEGMzL8YAShnB80mWj0qPSo9Kj0qPSo9LDWBoARSkxJrNjYpcAAAAldEVYdGRhdGU6Y3JlYXRlADIwMjMtMDYtMjBUMDg6MTQ6NDcrMDA6MDCvj8zFAAAAJXRFWHRkYXRlOm1vZGlmeQAyMDIzLTA2LTIwVDA4OjE0OjQ3KzAwOjAw3tJ0eQAAACh0RVh0ZGF0ZTp0aW1lc3RhbXAAMjAyMy0wNi0yMFQwODoxNDo0NyswMDowMInHVaYAAAAASUVORK5CYII=\""
                    },
                    "value": "iVBORw0KGgoAAAANSUhEUgAAADwAAAA8BAMAAADI0sRBAAAAIGNIUk0AAHomAACAhAAA+gAAAIDoAAB1MAAA6mAAADqYAAAXcJy6UTwAAAAbUExURcflzsflzsflzsflzsflzsflzsflzsflzv////PFMLgAAAAHdFJOU9ro4fH48PcHHBR7AAAAAWJLR0QIht6VegAAAAd0SU1FB+cGFAgOL6zv9Z0AAAAnSURBVDjLY2AUxAOEGMzL8YAShnB80mWj0qPSo9Kj0qPSo9LDWBoARSkxJrNjYpcAAAAldEVYdGRhdGU6Y3JlYXRlADIwMjMtMDYtMjBUMDg6MTQ6NDcrMDA6MDCvj8zFAAAAJXRFWHRkYXRlOm1vZGlmeQAyMDIzLTA2LTIwVDA4OjE0OjQ3KzAwOjAw3tJ0eQAAACh0RVh0ZGF0ZTp0aW1lc3RhbXAAMjAyMy0wNi0yMFQwODoxNDo0NyswMDowMInHVaYAAAAASUVORK5CYII="
                  },
                  "visibility": "public"
                },
                {
                  "constant": true,
                  "functionSelector": "ed44cdd4",
                  "id": 7,
                  "mutability": "constant",
                  "name": "purple",
                  "nameLocation": "672:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 35,
                  "src": "649:542:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 5,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "649:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": {
                    "hexValue": "6956424f5277304b47676f414141414e5355684555674141414477414141413842414d4141414449307352424141414149474e49556b304141486f6d41414341684141412b6741414149446f414142314d414141366d41414144715941414158634a7936555477414141416255457855526265497662654976626549766265497662654976626549766265497662654976662f2f2f7a5a41534d51414141414864464a4f5539726f3466483438506348484252374141414141574a4c5230514968743656656741414141643053553146422b63474641674f45765348755977414141416e5355524256446a4c5932415578414f45474d7a4c38594153686e4238306d576a307150536f394b6a307150536f394c4457426f4152536b784a724e6a597063414141416c64455659644752686447553659334a6c5958526c414449774d6a4d744d4459744d6a42554d4467364d5451364d5467724d4441364d4441524a374a49414141414a5852465748526b5958526c4f6d31765a476c6d655141794d44497a4c5441324c544977564441344f6a45304f6a45344b7a41774f6a417759486f4b3941414141436830525668305a4746305a5470306157316c63335268625841414d6a41794d7930774e6930794d4651774f446f784e446f784f4373774d446f774d4464764b797341414141415355564f524b35435949493d",
                    "id": 6,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "681:510:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_d67bf7cfd5898aa01f2cd48af0df7167122d374f0442a0f6c3f1ac295487a57d",
                      "typeString": "literal_string \"iVBORw0KGgoAAAANSUhEUgAAADwAAAA8BAMAAADI0sRBAAAAIGNIUk0AAHomAACAhAAA+gAAAIDoAAB1MAAA6mAAADqYAAAXcJy6UTwAAAAbUExURbeIvbeIvbeIvbeIvbeIvbeIvbeIvbeIvf///zZASMQAAAAHdFJOU9ro4fH48PcHHBR7AAAAAWJLR0QIht6VegAAAAd0SU1FB+cGFAgOEvSHuYwAAAAnSURBVDjLY2AUxAOEGMzL8YAShnB80mWj0qPSo9Kj0qPSo9LDWBoARSkxJrNjYpcAAAAldEVYdGRhdGU6Y3JlYXRlADIwMjMtMDYtMjBUMDg6MTQ6MTgrMDA6MDARJ7JIAAAAJXRFWHRkYXRlOm1vZGlmeQAyMDIzLTA2LTIwVDA4OjE0OjE4KzAwOjAwYHoK9AAAACh0RVh0ZGF0ZTp0aW1lc3RhbXAAMjAyMy0wNi0yMFQwODoxNDoxOCswMDowMDdvKysAAAAASUVORK5CYII=\""
                    },
                    "value": "iVBORw0KGgoAAAANSUhEUgAAADwAAAA8BAMAAADI0sRBAAAAIGNIUk0AAHomAACAhAAA+gAAAIDoAAB1MAAA6mAAADqYAAAXcJy6UTwAAAAbUExURbeIvbeIvbeIvbeIvbeIvbeIvbeIvbeIvf///zZASMQAAAAHdFJOU9ro4fH48PcHHBR7AAAAAWJLR0QIht6VegAAAAd0SU1FB+cGFAgOEvSHuYwAAAAnSURBVDjLY2AUxAOEGMzL8YAShnB80mWj0qPSo9Kj0qPSo9LDWBoARSkxJrNjYpcAAAAldEVYdGRhdGU6Y3JlYXRlADIwMjMtMDYtMjBUMDg6MTQ6MTgrMDA6MDARJ7JIAAAAJXRFWHRkYXRlOm1vZGlmeQAyMDIzLTA2LTIwVDA4OjE0OjE4KzAwOjAwYHoK9AAAACh0RVh0ZGF0ZTp0aW1lc3RhbXAAMjAyMy0wNi0yMFQwODoxNDoxOCswMDowMDdvKysAAAAASUVORK5CYII="
                  },
                  "visibility": "public"
                },
                {
                  "constant": true,
                  "functionSelector": "f2f1e132",
                  "id": 10,
                  "mutability": "constant",
                  "name": "green",
                  "nameLocation": "1221:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 35,
                  "src": "1198:541:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 8,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1198:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": {
                    "hexValue": "6956424f5277304b47676f414141414e5355684555674141414477414141413842414d4141414449307352424141414149474e49556b304141486f6d41414341684141412b6741414149446f414142314d414141366d41414144715941414158634a7936555477414141416255457855526344584c3844584c3844584c3844584c3844584c3844584c3844584c3844584c2f2f2f2f373962375049414141414864464a4f5539726f3466483438506348484252374141414141574a4c5230514968743656656741414141643053553146422b6347464167504257355044516f414141416e5355524256446a4c5932415578414f45474d7a4c38594153686e4238306d576a307150536f394b6a307150536f394c4457426f4152536b784a724e6a597063414141416c64455659644752686447553659334a6c5958526c414449774d6a4d744d4459744d6a42554d4467364d5455364d4455724d4441364d4442546d4c676f414141414a5852465748526b5958526c4f6d31765a476c6d655141794d44497a4c5441324c544977564441344f6a45314f6a41314b7a41774f6a4177497355416c41414141436830525668305a4746305a5470306157316c63335268625841414d6a41794d7930774e6930794d4651774f446f784e546f774e5373774d446f774d48585149557341414141415355564f524b35435949493d",
                    "id": 9,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1229:510:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_b6f04e269325506297b739221ad1371177f0e21d78aebbdb4990ccc64d34707d",
                      "typeString": "literal_string \"iVBORw0KGgoAAAANSUhEUgAAADwAAAA8BAMAAADI0sRBAAAAIGNIUk0AAHomAACAhAAA+gAAAIDoAAB1MAAA6mAAADqYAAAXcJy6UTwAAAAbUExURcDXL8DXL8DXL8DXL8DXL8DXL8DXL8DXL////79b7PIAAAAHdFJOU9ro4fH48PcHHBR7AAAAAWJLR0QIht6VegAAAAd0SU1FB+cGFAgPBW5PDQoAAAAnSURBVDjLY2AUxAOEGMzL8YAShnB80mWj0qPSo9Kj0qPSo9LDWBoARSkxJrNjYpcAAAAldEVYdGRhdGU6Y3JlYXRlADIwMjMtMDYtMjBUMDg6MTU6MDUrMDA6MDBTmLgoAAAAJXRFWHRkYXRlOm1vZGlmeQAyMDIzLTA2LTIwVDA4OjE1OjA1KzAwOjAwIsUAlAAAACh0RVh0ZGF0ZTp0aW1lc3RhbXAAMjAyMy0wNi0yMFQwODoxNTowNSswMDowMHXQIUsAAAAASUVORK5CYII=\""
                    },
                    "value": "iVBORw0KGgoAAAANSUhEUgAAADwAAAA8BAMAAADI0sRBAAAAIGNIUk0AAHomAACAhAAA+gAAAIDoAAB1MAAA6mAAADqYAAAXcJy6UTwAAAAbUExURcDXL8DXL8DXL8DXL8DXL8DXL8DXL8DXL////79b7PIAAAAHdFJOU9ro4fH48PcHHBR7AAAAAWJLR0QIht6VegAAAAd0SU1FB+cGFAgPBW5PDQoAAAAnSURBVDjLY2AUxAOEGMzL8YAShnB80mWj0qPSo9Kj0qPSo9LDWBoARSkxJrNjYpcAAAAldEVYdGRhdGU6Y3JlYXRlADIwMjMtMDYtMjBUMDg6MTU6MDUrMDA6MDBTmLgoAAAAJXRFWHRkYXRlOm1vZGlmeQAyMDIzLTA2LTIwVDA4OjE1OjA1KzAwOjAwIsUAlAAAACh0RVh0ZGF0ZTp0aW1lc3RhbXAAMjAyMy0wNi0yMFQwODoxNTowNSswMDowMHXQIUsAAAAASUVORK5CYII="
                  },
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 17,
                    "nodeType": "Block",
                    "src": "1803:30:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 15,
                          "name": "blue",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4,
                          "src": "1821:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        "functionReturnParameters": 14,
                        "id": 16,
                        "nodeType": "Return",
                        "src": "1814:11:0"
                      }
                    ]
                  },
                  "functionSelector": "5650d700",
                  "id": 18,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getBlue",
                  "nameLocation": "1757:7:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 11,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1764:2:0"
                  },
                  "returnParameters": {
                    "id": 14,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 13,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 18,
                        "src": "1788:13:0",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 12,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "1788:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1787:15:0"
                  },
                  "scope": 35,
                  "src": "1748:85:0",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 25,
                    "nodeType": "Block",
                    "src": "1898:32:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 23,
                          "name": "purple",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7,
                          "src": "1916:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        "functionReturnParameters": 22,
                        "id": 24,
                        "nodeType": "Return",
                        "src": "1909:13:0"
                      }
                    ]
                  },
                  "functionSelector": "2f1fdc3b",
                  "id": 26,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getPurple",
                  "nameLocation": "1850:9:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 19,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1859:2:0"
                  },
                  "returnParameters": {
                    "id": 22,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 21,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 26,
                        "src": "1883:13:0",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 20,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "1883:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1882:15:0"
                  },
                  "scope": 35,
                  "src": "1841:89:0",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 33,
                    "nodeType": "Block",
                    "src": "1994:31:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 31,
                          "name": "green",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10,
                          "src": "2012:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        "functionReturnParameters": 30,
                        "id": 32,
                        "nodeType": "Return",
                        "src": "2005:12:0"
                      }
                    ]
                  },
                  "functionSelector": "cffc5e38",
                  "id": 34,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getGreen",
                  "nameLocation": "1947:8:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 27,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1955:2:0"
                  },
                  "returnParameters": {
                    "id": 30,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 29,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 34,
                        "src": "1979:13:0",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 28,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "1979:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1978:15:0"
                  },
                  "scope": 35,
                  "src": "1938:87:0",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "public"
                }
              ],
              "scope": 302,
              "src": "74:1954:0",
              "usedErrors": []
            },
            {
              "abstract": false,
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "contract",
              "fullyImplemented": true,
              "id": 289,
              "linearizedBaseContracts": [
                289
              ],
              "name": "Hands",
              "nameLocation": "2041:5:0",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": true,
                  "functionSelector": "da2643bc",
                  "id": 38,
                  "mutability": "constant",
                  "name": "skin_tone_4",
                  "nameLocation": "2077:11:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 289,
                  "src": "2054:599:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 36,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2054:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": {
                    "hexValue": "6956424f5277304b47676f414141414e5355684555674141414473414141413741674d414141433453786f67414141414446424d564555414141426e526a4e554c786b3147694172377267584141414141585253546c4d41514f62595a67414141555a4a524546554b4d2f747a6a464c77314151414f43447a49322f4a6f49752f6f704c61424b665578485357726f3432503852337142307935445961705a58714336422f4959386b4d367831454663584d5442793874375359662b42412f65335833764f446a3444346f54656c38482f5036466936762b7735466232504777733677345349386257753432424763584639714449434458396378345041366733752b4e6e64584e71707a667a55506a7a567155624448744c54626c6c48552b46654b6c66474c736f666372664270626852526958533459343162524f4a646954563477626a6365354c4b5373755463342f617363536a6a694a79363346454f4d4d46376545636636324f3250427a69475059347771706f6a6645457a6c7a55786a6366795a6863592b73744b754f753834673837447a5538354532336970666f6a4a55354357636b7a303459756f51633741704c355874574e764e6a616d6a624a776d66674657346b6574423145536b564d2f6e526b2f552f6b35634e3673396336554d32306e7974546457527071503672366f56313139725358376433473255545673307a5a776c513777754b343958376a5034394176492b392b3065394141414141456c46546b5375516d4343",
                    "id": 37,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2091:562:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_ce487f7275835fb89493fb491fb7c700132bd55d2bcd5a13369264e452492709",
                      "typeString": "literal_string \"iVBORw0KGgoAAAANSUhEUgAAADsAAAA7AgMAAAC4SxogAAAADFBMVEUAAABnRjNULxk1GiAr7rgXAAAAAXRSTlMAQObYZgAAAUZJREFUKM/tzjFLw1AQAOCDzI2/JoIu/opLaBKfUxHSWro42P8R3qB0y5DYapZXqC6B/IY8kM6x1EFcXMTBy8t7SYf+BA/e3X3vODj4D4oTel8H/P6Fi6v+w5Fb2PGws6w4SI8bWu42BGcXF9qDICDX9cx4PA6g3u+NndXNqpzfzUPjzVqUbDHtLTbllHU+FeKlfGLsofcrfBpbhRRiXS4Y41bROJdiTV4wbjce5LKSsuTc4/ascSjjiJy63FEOMMF7eEcf62O2PBziGPY4wqpojfEEzlzUxjcfyZhcY+stKuOu84g87DzU85E23ipfojJU5CWckz04YuoQc7ApL5XtWNvNjamjbJwmfgFW4ketB1ESkVM/nRk/U/k5cN6s9c6UM20nytTdWRpqP6r6oV119rSX7d3G2UTVs0zZwlQ7wuK49X7jP49AvI+9+0e9AAAAAElFTkSuQmCC\""
                    },
                    "value": "iVBORw0KGgoAAAANSUhEUgAAADsAAAA7AgMAAAC4SxogAAAADFBMVEUAAABnRjNULxk1GiAr7rgXAAAAAXRSTlMAQObYZgAAAUZJREFUKM/tzjFLw1AQAOCDzI2/JoIu/opLaBKfUxHSWro42P8R3qB0y5DYapZXqC6B/IY8kM6x1EFcXMTBy8t7SYf+BA/e3X3vODj4D4oTel8H/P6Fi6v+w5Fb2PGws6w4SI8bWu42BGcXF9qDICDX9cx4PA6g3u+NndXNqpzfzUPjzVqUbDHtLTbllHU+FeKlfGLsofcrfBpbhRRiXS4Y41bROJdiTV4wbjce5LKSsuTc4/ascSjjiJy63FEOMMF7eEcf62O2PBziGPY4wqpojfEEzlzUxjcfyZhcY+stKuOu84g87DzU85E23ipfojJU5CWckz04YuoQc7ApL5XtWNvNjamjbJwmfgFW4ketB1ESkVM/nRk/U/k5cN6s9c6UM20nytTdWRpqP6r6oV119rSX7d3G2UTVs0zZwlQ7wuK49X7jP49AvI+9+0e9AAAAAElFTkSuQmCC"
                  },
                  "visibility": "public"
                },
                {
                  "constant": true,
                  "functionSelector": "7f478d38",
                  "id": 41,
                  "mutability": "constant",
                  "name": "skin_tone_3",
                  "nameLocation": "2683:11:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 289,
                  "src": "2660:603:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 39,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2660:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": {
                    "hexValue": "6956424f5277304b47676f414141414e5355684555674141414477414141413841674d41414142486b6a4868414141414446424d5645554141414369634574395343493147694270414c716c4141414141585253546c4d41514f62595a6741414155644a524546554b4d2f747a6a464c77314151414f43447a49322f4a6b4a642f42575830435447715168704c56306337503849623143365a5568734e637372564a6441666b4d65534f6459366941754c754c673565573970454e2b51672f65335833764f44673452552b633066732b347338665846353348356259775a37357255584a5144684d30374233506c6a374b46636565423635717562616b346b4831654767626131763138586966754672627a6538434a617a7a6e78627a494c573535792f46733942384e6a35446236306a56787776696d575163434d7648596d2b496138444a685a6535434a556f69434d59655a3839712b69454a79596a4e4c32734d59482b414458617a366244673477676b636349786c3368696a4b517874564d5a3346386b593332446a4855726a7676575950476f3955764f784d74354a583645306c4f5156584a41643644463169426d596c4666535a7152735a39725555645a4f596a634849336244786f4d7744736d4a6d38793158366a38486a6d72317a716e30716d7946616279376a54786c5a396b2f565175577a764b712b5a7537585171367a43564e6a4252446a4876743971762f512b50554c795053744b30546741414141424a52553545726b4a6767673d3d",
                    "id": 40,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2697:566:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_628a25b9632c166357fc1a23884d66ee72ecc568cddffddc057e3ecc80d2cdb1",
                      "typeString": "literal_string \"iVBORw0KGgoAAAANSUhEUgAAADwAAAA8AgMAAABHkjHhAAAADFBMVEUAAACicEt9SCI1GiBpALqlAAAAAXRSTlMAQObYZgAAAUdJREFUKM/tzjFLw1AQAOCDzI2/JkJd/BWX0CTGqQhpLV0c7P8Ib1C6ZUhsNcsrVJdAfkMeSOdY6iAuLuLg5eW9pEN+Qg/e3X3vODg4RU+c0fs+4s8fXF53H5bYwZ75rUXJQDhM07B3Plj7KFceeB65qubak4kH1eGgba1v18XifuFrbze8CJazznxbzILW55y/Fs9B8Nj5Db60jVxwvimWQcCMvHYm+Ia8DJhZe5CJUoiCMYeZ89q+iEJyYjNL2sMYH+ADXaz6bDg4wgkccIxl3hijKQxtVMZ3F8kY32DjHUrjvvWYPGo9UvOxMt5JX6E0lOQVXJAd6DF1iBmYlFfSZqRsZ9rUUdZOYjcHI3bDxoMwDsmJm8y1X6j8Hjmr1zqn0qmyFaby7jTxlZ9k/VQuWzvKq+Zu7XQq6zCVNjBRDjHvt9qv/Q+PULyPStK0TgAAAABJRU5ErkJggg==\""
                    },
                    "value": "iVBORw0KGgoAAAANSUhEUgAAADwAAAA8AgMAAABHkjHhAAAADFBMVEUAAACicEt9SCI1GiBpALqlAAAAAXRSTlMAQObYZgAAAUdJREFUKM/tzjFLw1AQAOCDzI2/JkJd/BWX0CTGqQhpLV0c7P8Ib1C6ZUhsNcsrVJdAfkMeSOdY6iAuLuLg5eW9pEN+Qg/e3X3vODg4RU+c0fs+4s8fXF53H5bYwZ75rUXJQDhM07B3Plj7KFceeB65qubak4kH1eGgba1v18XifuFrbze8CJazznxbzILW55y/Fs9B8Nj5Db60jVxwvimWQcCMvHYm+Ia8DJhZe5CJUoiCMYeZ89q+iEJyYjNL2sMYH+ADXaz6bDg4wgkccIxl3hijKQxtVMZ3F8kY32DjHUrjvvWYPGo9UvOxMt5JX6E0lOQVXJAd6DF1iBmYlFfSZqRsZ9rUUdZOYjcHI3bDxoMwDsmJm8y1X6j8Hjmr1zqn0qmyFaby7jTxlZ9k/VQuWzvKq+Zu7XQq6zCVNjBRDjHvt9qv/Q+PULyPStK0TgAAAABJRU5ErkJggg=="
                  },
                  "visibility": "public"
                },
                {
                  "constant": true,
                  "functionSelector": "ed6f1156",
                  "id": 44,
                  "mutability": "constant",
                  "name": "skin_tone_2",
                  "nameLocation": "3293:11:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 289,
                  "src": "3270:603:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 42,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3270:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": {
                    "hexValue": "6956424f5277304b47676f414141414e5355684555674141414477414141413841674d41414142486b6a4868414141414446424d56455541414144567049533568574d31476944396c4d79744141414141585253546c4d41514f62595a6741414155644a524546554b4d2f747a6a464c77314151414f43447a49322f4a6b4a642f42575830435447715168704c56306337503849623143365a5568734e637372564a6441666b4d65534f6459366941754c754c673565573970454e2b51672f65335833764f44673452552b633066732b347338665846353348356259775a37357255584a5144684d30374233506c6a374b46636565423635717562616b346b4831654767626131763138586966754672627a6538434a617a7a6e78627a494c573535792f46733942384e6a35446236306a56787776696d575163434d7648596d2b496138444a685a6535434a556f69434d59655a3839712b69454a79596a4e4c32734d59482b414458617a366244673477676b636349786c3368696a4b517874564d5a3346386b593332446a4855726a7676575950476f3955764f784d74354a583645306c4f5156584a41643644463169426d596c4666535a7152735a39725555645a4f596a634849336244786f4d7744736d4a6d38793158366a38486a6d72317a716e30716d7946616279376a54786c5a396b2f565175577a764b712b5a7537585171367a43564e6a4252446a4876743971762f512b50554c795053744b30546741414141424a52553545726b4a6767673d3d",
                    "id": 43,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3307:566:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_2ff6ccf077dbc8629e9f01e6c43bd17ff77bd43f53a13b90830a113468b7118a",
                      "typeString": "literal_string \"iVBORw0KGgoAAAANSUhEUgAAADwAAAA8AgMAAABHkjHhAAAADFBMVEUAAADVpIS5hWM1GiD9lMytAAAAAXRSTlMAQObYZgAAAUdJREFUKM/tzjFLw1AQAOCDzI2/JkJd/BWX0CTGqQhpLV0c7P8Ib1C6ZUhsNcsrVJdAfkMeSOdY6iAuLuLg5eW9pEN+Qg/e3X3vODg4RU+c0fs+4s8fXF53H5bYwZ75rUXJQDhM07B3Plj7KFceeB65qubak4kH1eGgba1v18XifuFrbze8CJazznxbzILW55y/Fs9B8Nj5Db60jVxwvimWQcCMvHYm+Ia8DJhZe5CJUoiCMYeZ89q+iEJyYjNL2sMYH+ADXaz6bDg4wgkccIxl3hijKQxtVMZ3F8kY32DjHUrjvvWYPGo9UvOxMt5JX6E0lOQVXJAd6DF1iBmYlFfSZqRsZ9rUUdZOYjcHI3bDxoMwDsmJm8y1X6j8Hjmr1zqn0qmyFaby7jTxlZ9k/VQuWzvKq+Zu7XQq6zCVNjBRDjHvt9qv/Q+PULyPStK0TgAAAABJRU5ErkJggg==\""
                    },
                    "value": "iVBORw0KGgoAAAANSUhEUgAAADwAAAA8AgMAAABHkjHhAAAADFBMVEUAAADVpIS5hWM1GiD9lMytAAAAAXRSTlMAQObYZgAAAUdJREFUKM/tzjFLw1AQAOCDzI2/JkJd/BWX0CTGqQhpLV0c7P8Ib1C6ZUhsNcsrVJdAfkMeSOdY6iAuLuLg5eW9pEN+Qg/e3X3vODg4RU+c0fs+4s8fXF53H5bYwZ75rUXJQDhM07B3Plj7KFceeB65qubak4kH1eGgba1v18XifuFrbze8CJazznxbzILW55y/Fs9B8Nj5Db60jVxwvimWQcCMvHYm+Ia8DJhZe5CJUoiCMYeZ89q+iEJyYjNL2sMYH+ADXaz6bDg4wgkccIxl3hijKQxtVMZ3F8kY32DjHUrjvvWYPGo9UvOxMt5JX6E0lOQVXJAd6DF1iBmYlFfSZqRsZ9rUUdZOYjcHI3bDxoMwDsmJm8y1X6j8Hjmr1zqn0qmyFaby7jTxlZ9k/VQuWzvKq+Zu7XQq6zCVNjBRDjHvt9qv/Q+PULyPStK0TgAAAABJRU5ErkJggg=="
                  },
                  "visibility": "public"
                },
                {
                  "constant": true,
                  "functionSelector": "96b678a4",
                  "id": 47,
                  "mutability": "constant",
                  "name": "skin_tone_1",
                  "nameLocation": "3903:11:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 289,
                  "src": "3880:599:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 45,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3880:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": {
                    "hexValue": "6956424f5277304b47676f414141414e5355684555674141414477414141413842414d414141444930735242414141414431424d564555414141443233626e6c76594931476944343463444a5473464a4141414141585253546c4d41514f62595a67414141554a4a524546554f4d76743039474e7779414d426d416b4a766a744c6d427a4139686b6774372b5178302b53684d4344783267524d67326e77784555644a33664d642b48434e73386342684b6555576a6c557a2f4e644c5370562f474c61776b304d34496c6834625359767a396a3855566d57646b6470547a427165336a5a753142424f377568564c6c78686a7135756d5657466c62596a597445752b566f7072726a4e693033326a41315246484c3268685674687858577a68623873356b5754707a577831634f6c4e6e365677486537436a7a5741574267667a594a6954674c537a746c5134342b51434b41434a7178482b692f6f705a334159514d45524154687334755a6b725a44516d65454378654357456d50694170774d314a56707343774d6d62734a4d344f76374c687738686472734c365930346363537a464b464c586e65766e695665354d6b63394d6e57566c4652333735636849722b796b43686f735542572b7334372f57376463336b667457452f576d544f4337563047773259756c78655a3258664d4d39764a2b6336716447565250546b2f6f54497a4b5234324b7577594538396e442f3444665a524d547635794b723041414141415355564f524b35435949493d",
                    "id": 46,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3917:562:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_ee2d88b84819b93a34e900e383dd163cdffbf0ef0b5ee3229aba4593eebd2eda",
                      "typeString": "literal_string \"iVBORw0KGgoAAAANSUhEUgAAADwAAAA8BAMAAADI0sRBAAAAD1BMVEUAAAD23bnlvYI1GiD44cDJTsFJAAAAAXRSTlMAQObYZgAAAUJJREFUOMvt09GNwyAMBmAkJvjtLmBzA9hkgt7+Qx0+ShMCDx2gRMg2nwxEUdJ3fMd+HCNs8cBhKeUWjlUz/NdLSpV/GLawk0M4Ilh4bSYvz9j8UVmWdkdpTzBqe3jZu1BBO7uhVLlxhjq5umVWFlbYjYtEu+VoprrjNi032jA1RFHL2hhVthxXWzhb8s5kWTpzWx1cOlNn6VwHe7CjzWAWBgfzYJiTgLSztlQ44+QCKACJqxH+i/opZ3AYQMERAThs4uZkrZDQmeECxeCWEmPiApwM1JVpsCwMmbsJM4Ov7Lhw8hdrsL6Y04ccSzFKFLXnevniVe5Mkc9MnWVlFR375chIr+ykChosUBW+s47/W7dc3kftWE/WmTOC7V0Gw2YulxeZ2XfMM9vJ+c6qdGVRPTk/oTIzKR42KuwYE89nD/4DfZRMTv5yKr0AAAAASUVORK5CYII=\""
                    },
                    "value": "iVBORw0KGgoAAAANSUhEUgAAADwAAAA8BAMAAADI0sRBAAAAD1BMVEUAAAD23bnlvYI1GiD44cDJTsFJAAAAAXRSTlMAQObYZgAAAUJJREFUOMvt09GNwyAMBmAkJvjtLmBzA9hkgt7+Qx0+ShMCDx2gRMg2nwxEUdJ3fMd+HCNs8cBhKeUWjlUz/NdLSpV/GLawk0M4Ilh4bSYvz9j8UVmWdkdpTzBqe3jZu1BBO7uhVLlxhjq5umVWFlbYjYtEu+VoprrjNi032jA1RFHL2hhVthxXWzhb8s5kWTpzWx1cOlNn6VwHe7CjzWAWBgfzYJiTgLSztlQ44+QCKACJqxH+i/opZ3AYQMERAThs4uZkrZDQmeECxeCWEmPiApwM1JVpsCwMmbsJM4Ov7Lhw8hdrsL6Y04ccSzFKFLXnevniVe5Mkc9MnWVlFR375chIr+ykChosUBW+s47/W7dc3kftWE/WmTOC7V0Gw2YulxeZ2XfMM9vJ+c6qdGVRPTk/oTIzKR42KuwYE89nD/4DfZRMTv5yKr0AAAAASUVORK5CYII="
                  },
                  "visibility": "public"
                },
                {
                  "constant": true,
                  "functionSelector": "c63fb76f",
                  "id": 50,
                  "mutability": "constant",
                  "name": "bubble_gum",
                  "nameLocation": "4509:10:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 289,
                  "src": "4486:694:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 48,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "4486:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": {
                    "hexValue": "6956424f5277304b47676f414141414e5355684555674141414477414141413842414d414141444930735242414141414431424d564555414141443875767236692f59314769442f3550362b76736f354141414141585253546c4d41514f62595a6741414159704a524546554f4d76743034734e7044414d424e424971574473626342324137464441346a7276365a7a344c4a386c684975306f72456a394567735a542f362f3936583331655872462f6569756c3972572f334642584a376453676f5852666e676868334170546d445a66734f5a48616d4b7a482f614d377a717959727479525268474e30494d336c7768585932585672644e4c7a72707a3359784d492b72613568515945587a6c2b725353394d69544274565a4d523873726a3058363474724963544b334b7a72726c644c4b56685163654c4d6d2b6c5a6938574845324e764c424c4f453762354d2f7a636b5265724161574c6975583835614b4f412b6e707835507753657a444a592f6347785a674143554c527134357048683131354f505653757154654f5138435a614c78516b5663515977625a2f764a32667a43664c442f4d73756f4f7a67463550683832584d77686763444d676262354c6f7a415470594a33396632733538737538387459534f35736c486b64714642575046594e7533644f5851665853773748733775575a6341547334414d337735652f6b724a71424f765974424b724f3563716b6d47325257376e7877685258746764545637584a6f64726c777655506159346d397a7863762b47364a6c7564334f4c4f7977746a4f786e4a72667937763562365a465736666c5769436a36726f584a6e556e7a4c4b3934594e395972362b532f6c4970616a4f767a372b4541414141415355564f524b35435949493d",
                    "id": 49,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "4522:658:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_a77c2009694f6e3218efeaa92af9da409fb9baa10d0c0aa1aec07fb3ab963f32",
                      "typeString": "literal_string \"iVBORw0KGgoAAAANSUhEUgAAADwAAAA8BAMAAADI0sRBAAAAD1BMVEUAAAD8uvr6i/Y1GiD/5P6+vso5AAAAAXRSTlMAQObYZgAAAYpJREFUOMvt04sNpDAMBNBIqWDsbcB2A7FDA4jrv6Zz4LJ8lhIu0orEj9EgsZT/6/96X31eXrF/eiul9rW/3FBXJ7dSgoXRfnghh3ApTmDZfsOZHamKzH/aM7zqyYrtyRRhGN0IM3lwhXY2XVrdNLzrpz3YxMI+ra5hQYEXzl+rSS9MiTBtVZMR8srj0X64trIcTK3KzrrldLKVhQceLMm+lZi8WHE2NvLBLOE7b5M/zckRerAaWLiuX85aKOA+npx5PwSezDJY/cGxZgACULRq45pHh115OPVSuqTeOQ8CZaLxQkVcQYwbZ/vJ2fzCfLD/MsuoOzgF5Ph82XMwhgcDMgbb5LozATpYJ39f2s58su88tYSO5slHkdqFBWPFYNu3dOXQfXSw7Hs7uWZcATs4AM3w5e/krJqBOvYtBKrO5cqkmG2RW7nxwhRXtgdTV7XJodrlwvUPaY4m9zxcv+G6Jlud3OLOywtjOxnJrfy7v5b6ZFW6flWiCj6roXJnUnzLK94YN9Yr6+S/lIpajOvz7+EAAAAASUVORK5CYII=\""
                    },
                    "value": "iVBORw0KGgoAAAANSUhEUgAAADwAAAA8BAMAAADI0sRBAAAAD1BMVEUAAAD8uvr6i/Y1GiD/5P6+vso5AAAAAXRSTlMAQObYZgAAAYpJREFUOMvt04sNpDAMBNBIqWDsbcB2A7FDA4jrv6Zz4LJ8lhIu0orEj9EgsZT/6/96X31eXrF/eiul9rW/3FBXJ7dSgoXRfnghh3ApTmDZfsOZHamKzH/aM7zqyYrtyRRhGN0IM3lwhXY2XVrdNLzrpz3YxMI+ra5hQYEXzl+rSS9MiTBtVZMR8srj0X64trIcTK3KzrrldLKVhQceLMm+lZi8WHE2NvLBLOE7b5M/zckRerAaWLiuX85aKOA+npx5PwSezDJY/cGxZgACULRq45pHh115OPVSuqTeOQ8CZaLxQkVcQYwbZ/vJ2fzCfLD/MsuoOzgF5Ph82XMwhgcDMgbb5LozATpYJ39f2s58su88tYSO5slHkdqFBWPFYNu3dOXQfXSw7Hs7uWZcATs4AM3w5e/krJqBOvYtBKrO5cqkmG2RW7nxwhRXtgdTV7XJodrlwvUPaY4m9zxcv+G6Jlud3OLOywtjOxnJrfy7v5b6ZFW6flWiCj6roXJnUnzLK94YN9Yr6+S/lIpajOvz7+EAAAAASUVORK5CYII="
                  },
                  "visibility": "public"
                },
                {
                  "constant": true,
                  "functionSelector": "ecc53b5e",
                  "id": 53,
                  "mutability": "constant",
                  "name": "green_slime",
                  "nameLocation": "5210:11:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 289,
                  "src": "5187:695:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 51,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "5187:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": {
                    "hexValue": "6956424f5277304b47676f414141414e5355684555674141414473414141413742414d4141414133432b2b41414141414431424d564555414141423736464261775445314769444e2f726b65634642784141414141585253546c4d41514f62595a6741414159744a524546554f4d7674303432747044414d424f424971574473626342324137464441346a7276365a7a34504c345754713446326c46346f2f52494c4755332f5866726a34767239672f765a56532b397066627169726b31737077634a6f58377951513767554a374273332b484d6a6c5246356a2f74475637315a4d58325a496f776a4736456d547934516a75624c7131754774373130783573596d4766567465776f4d414c35362f567042656d524a693271736b49656558786146396357316b4f706c5a6c5a3931794f746e4b77674d506c6d5466536b786572446762472f6c676c76436474386d66357551495056674e4c467a58483835614b4f412b6e707835507753657a444a592f6347785a674143554c527134357048683131354f505653757154654f5138435a614c78516b5663515977625a2f764a32667a43664c422f4d38756f4f7a674635506a38734f6467444138475a4179327958566e416e5377547635356154767a7962377a314249366d69636652576f58466f775667323366307056443939484273752f74354a707842657a67414454446c372b5473326f4736746933454b67366c79755459725a466275584743314e633252354d5864556d683271584339632f70446d6133504e772f5962726d6d7831636f73374c792b4d3757516b742f4c762f6c72716b3158702b6c574a4b766973687371645366465458764847754c46655753662f425a5272576f7a36764867344141414141456c46546b5375516d4343",
                    "id": 52,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "5224:658:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_d2b8d292dec702b0c8b155b3311afc2fc2cafc9aeea33104942775c9007b2571",
                      "typeString": "literal_string \"iVBORw0KGgoAAAANSUhEUgAAADsAAAA7BAMAAAA3C++AAAAAD1BMVEUAAAB76FBawTE1GiDN/rkecFBxAAAAAXRSTlMAQObYZgAAAYtJREFUOMvt042tpDAMBOBIqWDsbcB2A7FDA4jrv6Zz4PL4WTq4F2lF4o/RILGU3/Xfrj4vr9g/vZVS+9pfbqirk1spwcJoX7yQQ7gUJ7Bs3+HMjlRF5j/tGV71ZMX2ZIowjG6EmTy4QjubLq1uGt710x5sYmGfVtewoMAL56/VpBemRJi2qskIeeXxaF9cW1kOplZlZ91yOtnKwgMPlmTfSkxerDgbG/lglvCdt8mf5uQIPVgNLFzXH85aKOA+npx5PwSezDJY/cGxZgACULRq45pHh115OPVSuqTeOQ8CZaLxQkVcQYwbZ/vJ2fzCfLB/M8uoOzgF5Pj8sOdgDA8GZAy2yXVnAnSwTv55aTvzyb7z1BI6micfRWoXFowVg23f0pVD99HBsu/t5JpxBezgADTDl7+Ts2oG6ti3EKg6lyuTYrZFbuXGC1Nc2R5MXdUmh2qXC9c/pDma3PNw/Ybrmmx1cos7Ly+M7WQkt/Lv/lrqk1Xp+lWJKvishsqdSfFTXvHGuLFeWSf/BZRrWoz6vHg4AAAAAElFTkSuQmCC\""
                    },
                    "value": "iVBORw0KGgoAAAANSUhEUgAAADsAAAA7BAMAAAA3C++AAAAAD1BMVEUAAAB76FBawTE1GiDN/rkecFBxAAAAAXRSTlMAQObYZgAAAYtJREFUOMvt042tpDAMBOBIqWDsbcB2A7FDA4jrv6Zz4PL4WTq4F2lF4o/RILGU3/Xfrj4vr9g/vZVS+9pfbqirk1spwcJoX7yQQ7gUJ7Bs3+HMjlRF5j/tGV71ZMX2ZIowjG6EmTy4QjubLq1uGt710x5sYmGfVtewoMAL56/VpBemRJi2qskIeeXxaF9cW1kOplZlZ91yOtnKwgMPlmTfSkxerDgbG/lglvCdt8mf5uQIPVgNLFzXH85aKOA+npx5PwSezDJY/cGxZgACULRq45pHh115OPVSuqTeOQ8CZaLxQkVcQYwbZ/vJ2fzCfLB/M8uoOzgF5Pj8sOdgDA8GZAy2yXVnAnSwTv55aTvzyb7z1BI6micfRWoXFowVg23f0pVD99HBsu/t5JpxBezgADTDl7+Ts2oG6ti3EKg6lyuTYrZFbuXGC1Nc2R5MXdUmh2qXC9c/pDma3PNw/Ybrmmx1cos7Ly+M7WQkt/Lv/lrqk1Xp+lWJKvishsqdSfFTXvHGuLFeWSf/BZRrWoz6vHg4AAAAAElFTkSuQmCC"
                  },
                  "visibility": "public"
                },
                {
                  "constant": true,
                  "functionSelector": "233ab6b6",
                  "id": 56,
                  "mutability": "constant",
                  "name": "blue_slime",
                  "nameLocation": "5912:10:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 289,
                  "src": "5889:694:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 54,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "5889:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": {
                    "hexValue": "6956424f5277304b47676f414141414e5355684555674141414477414141413842414d414141444930735242414141414431424d564555414141434531663941707563314769446d39762f626165624e4141414141585253546c4d41514f62595a6741414159704a524546554f4d76743034734e7044414d424e424971574473626342324137464441346a7276365a7a344c4a386c684975306f72456a394567735a542f362f3936583331655872462f6569756c3972572f334642584a376453676f5852666e676868334170546d445a66734f5a48616d4b7a482f614d377a717959727479525268474e30494d336c7768585932585672644e4c7a72707a3359784d492b72613568515945587a6c2b725353394d69544274565a4d523873726a3058363474724963544b334b7a72726c644c4b56685163654c4d6d2b6c5a6938574845324e764c424c4f453762354d2f7a636b5265724161574c6975583835614b4f412b6e707835507753657a444a592f6347785a674143554c527134357048683131354f505653757154654f5138435a614c78516b5663515977625a2f764a32667a43664c442f4d73756f4f7a67463550683832584d77686763444d676262354c6f7a415470594a33396632733538737538387459534f35736c486b64714642575046594e7533644f5851665853773748733775575a6341547334414d337735652f6b724a71424f765974424b724f3563716b6d47325257376e7877685258746764545637584a6f64726c777655506159346d397a7863762b47364a6c7564334f4c4f7977746a4f786e4a72667937763562365a465736666c5769436a36726f584a6e556e7a4c4b3934594e395972362b532f6c4970616a4f767a372b4541414141415355564f524b35435949493d",
                    "id": 55,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "5925:658:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_f7428a18a35dc137e92dd4e9bedd4ea8f2b08d975a67dd65313789f93484dd7f",
                      "typeString": "literal_string \"iVBORw0KGgoAAAANSUhEUgAAADwAAAA8BAMAAADI0sRBAAAAD1BMVEUAAACE1f9Apuc1GiDm9v/baebNAAAAAXRSTlMAQObYZgAAAYpJREFUOMvt04sNpDAMBNBIqWDsbcB2A7FDA4jrv6Zz4LJ8lhIu0orEj9EgsZT/6/96X31eXrF/eiul9rW/3FBXJ7dSgoXRfnghh3ApTmDZfsOZHamKzH/aM7zqyYrtyRRhGN0IM3lwhXY2XVrdNLzrpz3YxMI+ra5hQYEXzl+rSS9MiTBtVZMR8srj0X64trIcTK3KzrrldLKVhQceLMm+lZi8WHE2NvLBLOE7b5M/zckRerAaWLiuX85aKOA+npx5PwSezDJY/cGxZgACULRq45pHh115OPVSuqTeOQ8CZaLxQkVcQYwbZ/vJ2fzCfLD/MsuoOzgF5Ph82XMwhgcDMgbb5LozATpYJ39f2s58su88tYSO5slHkdqFBWPFYNu3dOXQfXSw7Hs7uWZcATs4AM3w5e/krJqBOvYtBKrO5cqkmG2RW7nxwhRXtgdTV7XJodrlwvUPaY4m9zxcv+G6Jlud3OLOywtjOxnJrfy7v5b6ZFW6flWiCj6roXJnUnzLK94YN9Yr6+S/lIpajOvz7+EAAAAASUVORK5CYII=\""
                    },
                    "value": "iVBORw0KGgoAAAANSUhEUgAAADwAAAA8BAMAAADI0sRBAAAAD1BMVEUAAACE1f9Apuc1GiDm9v/baebNAAAAAXRSTlMAQObYZgAAAYpJREFUOMvt04sNpDAMBNBIqWDsbcB2A7FDA4jrv6Zz4LJ8lhIu0orEj9EgsZT/6/96X31eXrF/eiul9rW/3FBXJ7dSgoXRfnghh3ApTmDZfsOZHamKzH/aM7zqyYrtyRRhGN0IM3lwhXY2XVrdNLzrpz3YxMI+ra5hQYEXzl+rSS9MiTBtVZMR8srj0X64trIcTK3KzrrldLKVhQceLMm+lZi8WHE2NvLBLOE7b5M/zckRerAaWLiuX85aKOA+npx5PwSezDJY/cGxZgACULRq45pHh115OPVSuqTeOQ8CZaLxQkVcQYwbZ/vJ2fzCfLD/MsuoOzgF5Ph82XMwhgcDMgbb5LozATpYJ39f2s58su88tYSO5slHkdqFBWPFYNu3dOXQfXSw7Hs7uWZcATs4AM3w5e/krJqBOvYtBKrO5cqkmG2RW7nxwhRXtgdTV7XJodrlwvUPaY4m9zxcv+G6Jlud3OLOywtjOxnJrfy7v5b6ZFW6flWiCj6roXJnUnzLK94YN9Yr6+S/lIpajOvz7+EAAAAASUVORK5CYII="
                  },
                  "visibility": "public"
                },
                {
                  "constant": true,
                  "functionSelector": "c7c866b2",
                  "id": 59,
                  "mutability": "constant",
                  "name": "vitiligo",
                  "nameLocation": "6613:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 289,
                  "src": "6590:672:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 57,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "6590:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": {
                    "hexValue": "6956424f5277304b47676f414141414e5355684555674141414473414141413742414d4141414133432b2b4141414141456c424d5645554141414344576b52554c786b314769444e6c587176646c47484a4168454141414141585253546c4d41514f62595a6741414158644a524546554f4d7674302b46743943414d426d416b4a6e6a4e66514e676576394e376a6f4164335341543033325836563249793468515632674a596f7765624364494d58396a563837626d306134673033636337724e4e6a676b536b6e35365951412b5445696f6a425a75694763374c6d51697a512f464e36526b4a6a76593770643071556f4c30563433537337697472633837694132747268687a344d3171366545756d6163524955627a53674438556b5667384b327546496475726e64694c757a2b2b6d6354486c594d2b625a78634a734f56626350623030324e7333474733735a32357345344e495a6b696942656d5457636e7834624a3441425248733141734331546d4e2b6677433431724b78316a4544794867756f45737447644b782b6a2f52785677495052666b614e552f5674627745624378376b30414c6f324271654e715443752f495a36347846653252534230584248326e4c466a6431385a697a47586c594d3738745834576f2f736c776f627952627674566a4d3074534f3673686b6352765466314e616561346e357369746e6e5971544c7a6e544d7967786e4e686a754849335037765a636a7031516f44356f32355a77396a6553324e4954326e335966306e45663837466b32396b666d3562486e794c79785231336d6e6f6c527061307550334e56376e73332f674b4a535633424565654c705141414141424a52553545726b4a6767673d3d",
                    "id": 58,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "6624:638:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_a9ccea1369c26435c16e202670452c04c7c1e1b342b5c1346859bbc366e66f94",
                      "typeString": "literal_string \"iVBORw0KGgoAAAANSUhEUgAAADsAAAA7BAMAAAA3C++AAAAAElBMVEUAAACDWkRULxk1GiDNlXqvdlGHJAhEAAAAAXRSTlMAQObYZgAAAXdJREFUOMvt0+Ft9CAMBmAkJnjNfQNgev9N7joAd3SAT032X6V2Iy4hQV2gJYowebCdIMX9jV87bm0a4g03cc7rNNjgkSkn56YQA+TEiojBZuiGc7LmQizQ/FN6RkJjvY7pd0qUoL0V43Ss7itrc87iA2trhhz4M1q6eEumacRIUbzSgD8UkVg8K2uFIdurndiLuz++mcTHlYM+bZxcJsOVbcPb002Ns3GG3sZ25sE4NIZkiiBemTWcnx4bJ4ABRHs1AsC1TmN+fwC41rKx1jEDyHguoEstGdKx+j/RxVwIPRfkaNU/VtbwEbCx7k0ALo2BqeNqTCu/IZ64xFe2RSB0XBH2nLFjd18ZizGXlYM78tX4Wo/slwobyRbvtVjM0tSO6shkcRvTf1Naea4n5sitnnYqTLznTMygxnNhjuHI3P7vZcjp1QoD5o25Zw9jeS2NIT2n3Yf0nEf87Fk29kfm5bHnyLyxR13mnolRpa0uP3NV7ns3/gKJSV3BEeeLpQAAAABJRU5ErkJggg==\""
                    },
                    "value": "iVBORw0KGgoAAAANSUhEUgAAADsAAAA7BAMAAAA3C++AAAAAElBMVEUAAACDWkRULxk1GiDNlXqvdlGHJAhEAAAAAXRSTlMAQObYZgAAAXdJREFUOMvt0+Ft9CAMBmAkJnjNfQNgev9N7joAd3SAT032X6V2Iy4hQV2gJYowebCdIMX9jV87bm0a4g03cc7rNNjgkSkn56YQA+TEiojBZuiGc7LmQizQ/FN6RkJjvY7pd0qUoL0V43Ss7itrc87iA2trhhz4M1q6eEumacRIUbzSgD8UkVg8K2uFIdurndiLuz++mcTHlYM+bZxcJsOVbcPb002Ns3GG3sZ25sE4NIZkiiBemTWcnx4bJ4ABRHs1AsC1TmN+fwC41rKx1jEDyHguoEstGdKx+j/RxVwIPRfkaNU/VtbwEbCx7k0ALo2BqeNqTCu/IZ64xFe2RSB0XBH2nLFjd18ZizGXlYM78tX4Wo/slwobyRbvtVjM0tSO6shkcRvTf1Naea4n5sitnnYqTLznTMygxnNhjuHI3P7vZcjp1QoD5o25Zw9jeS2NIT2n3Yf0nEf87Fk29kfm5bHnyLyxR13mnolRpa0uP3NV7ns3/gKJSV3BEeeLpQAAAABJRU5ErkJggg=="
                  },
                  "visibility": "public"
                },
                {
                  "constant": true,
                  "functionSelector": "832e548a",
                  "id": 62,
                  "mutability": "constant",
                  "name": "green_goblin",
                  "nameLocation": "7292:12:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 289,
                  "src": "7269:696:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 60,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "7269:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": {
                    "hexValue": "6956424f5277304b47676f414141414e5355684555674141414477414141413842414d414141444930735242414141414431424d564555414141423736464261775445314769444e2f726b65634642784141414141585253546c4d41514f62595a6741414159704a524546554f4d76743034734e7044414d424e424971574473626342324137464441346a7276365a7a344c4a386c684975306f72456a394567735a542f362f3936583331655872462f6569756c3972572f334642584a376453676f5852666e676868334170546d445a66734f5a48616d4b7a482f614d377a717959727479525268474e30494d336c7768585932585672644e4c7a72707a3359784d492b72613568515945587a6c2b725353394d69544274565a4d523873726a3058363474724963544b334b7a72726c644c4b56685163654c4d6d2b6c5a6938574845324e764c424c4f453762354d2f7a636b5265724161574c6975583835614b4f412b6e707835507753657a444a592f6347785a674143554c527134357048683131354f505653757154654f5138435a614c78516b5663515977625a2f764a32667a43664c442f4d73756f4f7a67463550683832584d77686763444d676262354c6f7a415470594a33396632733538737538387459534f35736c486b64714642575046594e7533644f5851665853773748733775575a6341547334414d337735652f6b724a71424f765974424b724f3563716b6d47325257376e7877685258746764545637584a6f64726c777655506159346d397a7863762b47364a6c7564334f4c4f7977746a4f786e4a72667937763562365a465736666c5769436a36726f584a6e556e7a4c4b3934594e395972362b532f6c4970616a4f767a372b4541414141415355564f524b35435949493d",
                    "id": 61,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "7307:658:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_f0c88960579b117cd181b382a41b86c621fb3ac0d3fec247924c6729909c7f9b",
                      "typeString": "literal_string \"iVBORw0KGgoAAAANSUhEUgAAADwAAAA8BAMAAADI0sRBAAAAD1BMVEUAAAB76FBawTE1GiDN/rkecFBxAAAAAXRSTlMAQObYZgAAAYpJREFUOMvt04sNpDAMBNBIqWDsbcB2A7FDA4jrv6Zz4LJ8lhIu0orEj9EgsZT/6/96X31eXrF/eiul9rW/3FBXJ7dSgoXRfnghh3ApTmDZfsOZHamKzH/aM7zqyYrtyRRhGN0IM3lwhXY2XVrdNLzrpz3YxMI+ra5hQYEXzl+rSS9MiTBtVZMR8srj0X64trIcTK3KzrrldLKVhQceLMm+lZi8WHE2NvLBLOE7b5M/zckRerAaWLiuX85aKOA+npx5PwSezDJY/cGxZgACULRq45pHh115OPVSuqTeOQ8CZaLxQkVcQYwbZ/vJ2fzCfLD/MsuoOzgF5Ph82XMwhgcDMgbb5LozATpYJ39f2s58su88tYSO5slHkdqFBWPFYNu3dOXQfXSw7Hs7uWZcATs4AM3w5e/krJqBOvYtBKrO5cqkmG2RW7nxwhRXtgdTV7XJodrlwvUPaY4m9zxcv+G6Jlud3OLOywtjOxnJrfy7v5b6ZFW6flWiCj6roXJnUnzLK94YN9Yr6+S/lIpajOvz7+EAAAAASUVORK5CYII=\""
                    },
                    "value": "iVBORw0KGgoAAAANSUhEUgAAADwAAAA8BAMAAADI0sRBAAAAD1BMVEUAAAB76FBawTE1GiDN/rkecFBxAAAAAXRSTlMAQObYZgAAAYpJREFUOMvt04sNpDAMBNBIqWDsbcB2A7FDA4jrv6Zz4LJ8lhIu0orEj9EgsZT/6/96X31eXrF/eiul9rW/3FBXJ7dSgoXRfnghh3ApTmDZfsOZHamKzH/aM7zqyYrtyRRhGN0IM3lwhXY2XVrdNLzrpz3YxMI+ra5hQYEXzl+rSS9MiTBtVZMR8srj0X64trIcTK3KzrrldLKVhQceLMm+lZi8WHE2NvLBLOE7b5M/zckRerAaWLiuX85aKOA+npx5PwSezDJY/cGxZgACULRq45pHh115OPVSuqTeOQ8CZaLxQkVcQYwbZ/vJ2fzCfLD/MsuoOzgF5Ph82XMwhgcDMgbb5LozATpYJ39f2s58su88tYSO5slHkdqFBWPFYNu3dOXQfXSw7Hs7uWZcATs4AM3w5e/krJqBOvYtBKrO5cqkmG2RW7nxwhRXtgdTV7XJodrlwvUPaY4m9zxcv+G6Jlud3OLOywtjOxnJrfy7v5b6ZFW6flWiCj6roXJnUnzLK94YN9Yr6+S/lIpajOvz7+EAAAAASUVORK5CYII="
                  },
                  "visibility": "public"
                },
                {
                  "constant": true,
                  "functionSelector": "ac81d87b",
                  "id": 65,
                  "mutability": "constant",
                  "name": "red_goblin",
                  "nameLocation": "7995:10:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 289,
                  "src": "7972:662:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 63,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "7972:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": {
                    "hexValue": "6956424f5277304b47676f414141414e5355684555674141414477414141413842414d41414144493073524241414141456c424d564555414141436e61316c79514441314769444a6b6f4a4d4d445a7a4e6462734141414141585253546c4d41514f62595a6741414158424a524546554f4d7674307475746f7a41516747464c727541667034455a477243354649416f4161582f566862624a4d59734b2b33374f63354478766b794e34543750542f31544331343074314e30546b2f75615635303257663372747a797a7448642f5745784a4b7a39787a4647796347434456694a4e7953312b4d3368687a6d623135392b6f776b6944352f49436a626a53306863596c2b393071776e76307167794c544f2f72336441536a647455396b6c764b6443796f4f5649656d434650397353574946554f454f7a4c303463446c556d464b35556e6e4449505348357179706735484c71587a466859476d766d44495748592b334453757653504266596a71437978426e44476838584e71386e4d367949427253796b4552356a565457796d4178737a636f58455935563046414b69736f353572755841573073554264732f336449487a65444179685a36344d3435326c63657159776d5755632f48436e4c7743485a667a66642f6d5a393563783656586d61566e6279323570567638337656766c755061754e5575315873324e57674d4a74593469566d66626161685a3274734858737974324a757a457938736c335a726a7a664f5258654f6f364e2f5a58392b7379762b4a39734a76316f6176626847557a764c4d625a5050324c512b50373369662f4159593256433973484d6d624141414141456c46546b5375516d4343",
                    "id": 64,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "8008:626:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_eba83c929b0e9adc8eeeaaa1005b416dd39863bf2fba53e414aa5021c9f7baf0",
                      "typeString": "literal_string \"iVBORw0KGgoAAAANSUhEUgAAADwAAAA8BAMAAADI0sRBAAAAElBMVEUAAACna1lyQDA1GiDJkoJMMDZzNdbsAAAAAXRSTlMAQObYZgAAAXBJREFUOMvt0tutozAQgGFLruAfp4EZGrC5FIAoAaX/VhbbJMYsK+37Oc5DxvkyN4T7PT/1TC140t1N0Tk/uaV502Wf3rtzyztHd/WExJKz9xzFGycGCDViJNyS1+M3hhzmb159+owkiD5/ICjbjS0hcYl+90qwnv0qgyLTO/r3dASjdtU9klvKdCyoOVIemCFP9sSWIFUOEOzL04cDlUmFK5UnnDIPSH5qypg5HLqXzFhYGmvmDIWHY+3DSuvSPBfYjqCyxBnDGh8XNq8nM6yIBrSykER5jVTWymAxszcoXEY5V0FAKiso55ruXAW0sUBds/3dIHzeDAyhZ64M452lceqYwmWUc/HCnLwCHZfzfd/mZ95cx6VXmaVnby25pVv83vVvluPauNUu1Xs2NWgMJtY4iVmfbaahZ2tsHXsyt2JuzEy8sl3ZrjzfORXeOo6N/ZX9+syv+J9sJv1oavbhGUzvLMbZPP2LQ+P73if/AYY2VC9sHMmbAAAAAElFTkSuQmCC\""
                    },
                    "value": "iVBORw0KGgoAAAANSUhEUgAAADwAAAA8BAMAAADI0sRBAAAAElBMVEUAAACna1lyQDA1GiDJkoJMMDZzNdbsAAAAAXRSTlMAQObYZgAAAXBJREFUOMvt0tutozAQgGFLruAfp4EZGrC5FIAoAaX/VhbbJMYsK+37Oc5DxvkyN4T7PT/1TC140t1N0Tk/uaV502Wf3rtzyztHd/WExJKz9xzFGycGCDViJNyS1+M3hhzmb159+owkiD5/ICjbjS0hcYl+90qwnv0qgyLTO/r3dASjdtU9klvKdCyoOVIemCFP9sSWIFUOEOzL04cDlUmFK5UnnDIPSH5qypg5HLqXzFhYGmvmDIWHY+3DSuvSPBfYjqCyxBnDGh8XNq8nM6yIBrSykER5jVTWymAxszcoXEY5V0FAKiso55ruXAW0sUBds/3dIHzeDAyhZ64M452lceqYwmWUc/HCnLwCHZfzfd/mZ95cx6VXmaVnby25pVv83vVvluPauNUu1Xs2NWgMJtY4iVmfbaahZ2tsHXsyt2JuzEy8sl3ZrjzfORXeOo6N/ZX9+syv+J9sJv1oavbhGUzvLMbZPP2LQ+P73if/AYY2VC9sHMmbAAAAAElFTkSuQmCC"
                  },
                  "visibility": "public"
                },
                {
                  "constant": true,
                  "functionSelector": "5408e269",
                  "id": 68,
                  "mutability": "constant",
                  "name": "yellow_goblin",
                  "nameLocation": "8664:13:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 289,
                  "src": "8641:673:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 66,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "8641:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": {
                    "hexValue": "6956424f5277304b47676f414141414e5355684555674141414473414141413742414d4141414133432b2b4141414141456c424d564555414141436e706c6c7a636a5931476944477858784d4d4462395a4c444c4141414141585253546c4d41514f62595a67414141585a4a524546554f4d7674307547526843414d4257426e714f43466253436841534a724159346c4f4e742f4b78635145567976675a7654482f4434426f505236662f36733165716f347550756b2f4a49455733787764643976545a4a2f657849583235673163737472776f457679644651466c31646e41694b4f3646544d51386f7842696d336b643135446444464e4e7335347852754c67754a6939327a4d49377556416f50534a7935374c694c594267626c565571546d7a336e3442385977553732794b4b41466f626d346f3354795234482b384a6e3878647a7a5278416c753235624977347553577a5179784d6a65566739556664594b3974706d665838674e653058466c696d38493547496d34786d5645565951652f44424e684e67343870384d43436c6b3161336370684b42685167674134756332694a745a706c7670685244316f5a44414838456330596a4a48527545792f6d4272376b56473435764a524376764b713148504e573774543372695678795a61703576374b527476725a546a615750337978785a496f74336c6c59674a5956784e4b786b7369774f2b63627938553873454f4f59577135734239594f6862702b5633595835796a7461566e7474544f30724e6248786c627a2b695a52685968644c56424a487a794778432b4d597872636632463062474d7a4a562f414c566f5569347047306a644141414141456c46546b5375516d4343",
                    "id": 67,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "8680:634:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_2a0ced77cce2d267dede69afd17e0d8b809808273eda53209d48bc4a98d7ce9e",
                      "typeString": "literal_string \"iVBORw0KGgoAAAANSUhEUgAAADsAAAA7BAMAAAA3C++AAAAAElBMVEUAAACnpllzcjY1GiDGxXxMMDb9ZLDLAAAAAXRSTlMAQObYZgAAAXZJREFUOMvt0uGRhCAMBWBnqOCFbSChASJrAY4lONt/KxcQEVyvgZvTH/D4BoPR6f/6s1eqo4uPuk/JIEW3xwdd9vTZJ/exIX25g1cstrwoEvydFQFl1dnAiKO6FTMQ8oxBim3kd15DdDFNNs54xRuLguJi92zMI7uVAoPSJy57LiLYBgblVUqTmz3n4B8YwU72yKKAFobm4o3TyR4H+8Jn8xdzzRxAlu25bIw4uSWzQyxMjeVg9UfdYK9tpmfX8gNe0XFlim8I5GIm4xmVEVYQe/DBNhNg48p8MCClk1a3cphKBhQggA4uc2iJtZplvphRD1oZDAH8Ec0YjJHRuEy/mBr7kVG45vJRCvvKq1HPNW7tT3riVxyZap5v7KRtvrZTjaWP3yxxZIot3llYgJYVxNKxksiwO+cby8U8sEOOYWq5sB9YOhbp+V3YX5yjtaVnttTO0rNbHxlbz+iZRhYhdLVBJHzyGxC+MYxrcf2F0bGMzJV/ALVoUi4pG0jdAAAAAElFTkSuQmCC\""
                    },
                    "value": "iVBORw0KGgoAAAANSUhEUgAAADsAAAA7BAMAAAA3C++AAAAAElBMVEUAAACnpllzcjY1GiDGxXxMMDb9ZLDLAAAAAXRSTlMAQObYZgAAAXZJREFUOMvt0uGRhCAMBWBnqOCFbSChASJrAY4lONt/KxcQEVyvgZvTH/D4BoPR6f/6s1eqo4uPuk/JIEW3xwdd9vTZJ/exIX25g1cstrwoEvydFQFl1dnAiKO6FTMQ8oxBim3kd15DdDFNNs54xRuLguJi92zMI7uVAoPSJy57LiLYBgblVUqTmz3n4B8YwU72yKKAFobm4o3TyR4H+8Jn8xdzzRxAlu25bIw4uSWzQyxMjeVg9UfdYK9tpmfX8gNe0XFlim8I5GIm4xmVEVYQe/DBNhNg48p8MCClk1a3cphKBhQggA4uc2iJtZplvphRD1oZDAH8Ec0YjJHRuEy/mBr7kVG45vJRCvvKq1HPNW7tT3riVxyZap5v7KRtvrZTjaWP3yxxZIot3llYgJYVxNKxksiwO+cby8U8sEOOYWq5sB9YOhbp+V3YX5yjtaVnttTO0rNbHxlbz+iZRhYhdLVBJHzyGxC+MYxrcf2F0bGMzJV/ALVoUi4pG0jdAAAAAElFTkSuQmCC"
                  },
                  "visibility": "public"
                },
                {
                  "constant": true,
                  "functionSelector": "4e9e4cfa",
                  "id": 71,
                  "mutability": "constant",
                  "name": "sully",
                  "nameLocation": "9344:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 289,
                  "src": "9321:845:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 69,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "9321:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": {
                    "hexValue": "6956424f5277304b47676f414141414e5355684555674141414473414141413742414d4141414133432b2b41414141414746424d564555414141425632644531476941726a5966506739696b5661312f386572646d755842585950634141414141585253546c4d41514f62595a6741414166564a524546554f4d76746b6c467932794151686a5863594266486651556871382b77755941565048324f787a364164594e6d65762f70767967675266454e577653676859397659594875662f746e5731392f5432482f364633586d66375950356c674871503171657343782f6e6f7675475269556778666e372b4a684e6363687241703733754b5648462b48695062624a7053523569694c7a666d486a725a58526d466f34737538324e794b79364d3541312b377a626d63655872444f416a4d393978626f776563564d7576777a6e426837444874735844666172386e6a6a4e474b6b336d6f6266324c4d2b3863315436365544474f656c436236654c4d6a627a614577362f596e4c4457795172586a454c7774664a3049705450677352785776586e5377434f6554513841684d4265766142525077334d3645504e68366f5a6a42524b3769332b675537744170464d4b50696e396d7451586a616b654561756550617638684c7235564f78625830362b747a5944306f766964497644575074505373686157507a7348562f454476526b44463756766d447869344f6861335979654a37347276695041664c2f57375830704e4a38302b545572492b5a713438715731525a3732556c6f464c646471686b675135394b6a626a785a686663316c3777616e63682b556763306d644d56754f3144554745534970674e4a49304e5968546e55536677324b586343686e326f3756436b7461374342655976375932454d576b6542716d656a6b7957336b2f435a4a63792f5a6737786d364f766157576d316c57657333584a4470724139524f6954322b6275626173307842353438317036464a4e574f364379766d55666d5354684b625232796b48497a2b303165446d6337717439763536463233735969654a303264713377524b702f5265637732662f77735031435141414141424a52553545726b4a6767673d3d",
                    "id": 70,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "9352:814:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_cb435c13bebe878a54db65f50e330da634cbe6cafa8955f93dcd53debeb9f006",
                      "typeString": "literal_string \"iVBORw0KGgoAAAANSUhEUgAAADsAAAA7BAMAAAA3C++AAAAAGFBMVEUAAABV2dE1GiArjYfPg9ikVa1/8erdmuXBXYPcAAAAAXRSTlMAQObYZgAAAfVJREFUOMvtklFy2yAQhjXcYBfHfQUhq8+wuYAVPH2Oxz6AdYNmev/pvyggRfENWvSghY9vYYHuf/tnW19/T2H/6F3Xmf7YP5lgHqP1qesCx/novuGRiUgxfn7+JhNcchrAp73uKVHF+HiPbbJpSR5iiLzfmHjrZXRmFo4su82NyKy6M5A1+7zbmceXrDOAjM99xbowecVMuvwznBh7DHtsXDfar8njjNGKk3mobf2LM+8c1T66UDGOelCb6eLMjbzaEw6/YnLDWyQrXjELwtfJ0IpTPgsRxWvXnSwCOeTQ8AhMBevaBRPw3M6EPNh6oZjBRK7i3+gU7tApFMKPin9mtQXjakeEauePav8hLr5VOxbX06+tzYD0ovidIvDWPtPSshaWPzsHV/EDvRkDF7VvmDxi4Oha3YyeJ74rviPAfL/W7X0pNJ80+TUrI+Zq48qW1RZ72UloFLddqhkgQ59KjbjxZhfc1l7wanch+Ugc0mdMVuO1DUGESIpgNJI0NYhTnUSfw2KXcChn2o7VCkta7CBeYv7Y2EMWkeBqmejkyW3k/CZJcy/Zg7xm6OvaWWm1lWes3XJDprA9ROiT2+bubas0xB5481p6FJNWO6CyvmUfmSThKbR2ykHIz+01eDmc7qt9v56F23sYieJ02dq3wRKp/Recw2f/wsP1CQAAAABJRU5ErkJggg==\""
                    },
                    "value": "iVBORw0KGgoAAAANSUhEUgAAADsAAAA7BAMAAAA3C++AAAAAGFBMVEUAAABV2dE1GiArjYfPg9ikVa1/8erdmuXBXYPcAAAAAXRSTlMAQObYZgAAAfVJREFUOMvtklFy2yAQhjXcYBfHfQUhq8+wuYAVPH2Oxz6AdYNmev/pvyggRfENWvSghY9vYYHuf/tnW19/T2H/6F3Xmf7YP5lgHqP1qesCx/novuGRiUgxfn7+JhNcchrAp73uKVHF+HiPbbJpSR5iiLzfmHjrZXRmFo4su82NyKy6M5A1+7zbmceXrDOAjM99xbowecVMuvwznBh7DHtsXDfar8njjNGKk3mobf2LM+8c1T66UDGOelCb6eLMjbzaEw6/YnLDWyQrXjELwtfJ0IpTPgsRxWvXnSwCOeTQ8AhMBevaBRPw3M6EPNh6oZjBRK7i3+gU7tApFMKPin9mtQXjakeEauePav8hLr5VOxbX06+tzYD0ovidIvDWPtPSshaWPzsHV/EDvRkDF7VvmDxi4Oha3YyeJ74rviPAfL/W7X0pNJ80+TUrI+Zq48qW1RZ72UloFLddqhkgQ59KjbjxZhfc1l7wanch+Ugc0mdMVuO1DUGESIpgNJI0NYhTnUSfw2KXcChn2o7VCkta7CBeYv7Y2EMWkeBqmejkyW3k/CZJcy/Zg7xm6OvaWWm1lWes3XJDprA9ROiT2+bubas0xB5481p6FJNWO6CyvmUfmSThKbR2ykHIz+01eDmc7qt9v56F23sYieJ02dq3wRKp/Recw2f/wsP1CQAAAABJRU5ErkJggg=="
                  },
                  "visibility": "public"
                },
                {
                  "constant": true,
                  "functionSelector": "44d333ff",
                  "id": 74,
                  "mutability": "constant",
                  "name": "tiger",
                  "nameLocation": "10196:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 289,
                  "src": "10173:897:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 72,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "10173:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": {
                    "hexValue": "6956424f5277304b47676f414141414e5355684555674141414473414141413742414d4141414133432b2b41414141414746424d5645554141414437697773314769444b5867426a4a514e464751482f754765414d77724f3042466c4141414141585253546c4d41514f62595a6741414168354a524546554f4d76746b6b46796e44415152536c753846764b724355456543334a506742596b367944527763594b69647735663656626a466f384e6733694d55434e592b762f743274356e76397436757272363967642b314d3037546471667669682f59364b68756178704666542b5954486d6b434241506172702f456b2b6f44354843343265744865542b46464362423269576e357764737a304746535137587a72734c5052714c567656766f326e586c396c5466444133496f446c4d433159444966316f7871576e2f4444744c386469422f7a456239795974697a6153384554762f38674d39695042423764474c395967374d4e452f4b6f6b39426d6461374e4950384f332f64635769765371785a795531697a5a2b4d327a473332724c6145695333764d6b544e332f484d4c3379554846545239373675635564687a524641463636706742456e567a465477684177574b74594d44687655344c6c686e3267554942424632642f79564165426c6f6f59443974654e52543759637145547479356230744e5a786759706569646f58725555643268506e4a6f5937397042595632734a32394a4c30777a544c55683361387858414764525877434d544f2f574d4538345756415548486c7a68653552726245526944636e7a674d4169636e556951615574616d337661753047565770706c386b474f5a536f3138506436566779714c4f7475446a66526b57363046755577634c52515076362b7148474c6655572f49596c376c434c6e7a4f63683243424337794e76653162476c724f6d654b59564f3761504d6c76522f55466a6c6e5a2f59794f5141644367505579354b586d38383876486e67554e6945474d725a74394e646844615639756b3177683262474a2f54764d6439596d6564436a7432766d4e766164372f2f695068636c6350387676504f6c424358744a79614749614d7578617235726c315047756a70796363444b314c6b2b532b70376371713279662f3278624178714a7a6a2b4141414141456c46546b5375516d4343",
                    "id": 73,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "10204:866:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_a52d554f2c3f33ac3420e248f4dae1b846d1253cd750237cc7644a6b90a642a9",
                      "typeString": "literal_string \"iVBORw0KGgoAAAANSUhEUgAAADsAAAA7BAMAAAA3C++AAAAAGFBMVEUAAAD7iws1GiDKXgBjJQNFGQH/uGeAMwrO0BFlAAAAAXRSTlMAQObYZgAAAh5JREFUOMvtkkFynDAQRSlu8FvKrCUEeC3JPgBYk6yDRwcYKidw5f6VbjFo8Ng3iMUCNY+v/t2t5nv9t6urr69gd+1M07Tdqfvih/Y6KhuaxpFfT+YTHmkCBAParp/Ek+oD5HC42etHeT+FFCbB2iWn5wdsz0GFSQ7XzrsLPRqLVvVvo2nXl9lTfDA3IoDlMC1YDIf1oxqWn/DDtL8diB/zEb9yYtizaS8ETv/8gM9iPBB7dGL9Yg7MNE/Kok9Bmda7NIP8O3/dcWivSqxZyU1izZ+M2zG32rLaEiS3vMkTN3/HML3yUHFTR976ucUdhzRFAF66pgBEnVzFTwhAwWKtYMDhvU4Llhn2gUIBBF2d/yVAeBlooYD9teNRT7YcqETty5b0tNZxgYpeidoXrUUd2hPnJoY79pBYV2sJ29JL0wzTLUh3a8xXAGdRXwCMTO/WME84WVAUHHlzhe5RrbERiDcnzgMAicnUiQaUtam3vau0GVWppl8kGOZSo18Pd6VgyqLOtuDjfRkW60FuUwcLRQPv6+qHGLfUW/IYl7lCLnzOch2CBC7yNve1bGlrOmeKYVO7aPMlvR/UFjlnZ/YyOQAdCgPUy5KXm888vHngUNiEGMrZt9NdhDaV9uk1wh2bGJ/TvMd9YmedCjt2vmNvad7//iPhclcP8vvPOlBCXtJyaGIaMuxar5rl1PGujpyccDK1Lk+S+p7cqq2yf/2xbAxqJzj+AAAAAElFTkSuQmCC\""
                    },
                    "value": "iVBORw0KGgoAAAANSUhEUgAAADsAAAA7BAMAAAA3C++AAAAAGFBMVEUAAAD7iws1GiDKXgBjJQNFGQH/uGeAMwrO0BFlAAAAAXRSTlMAQObYZgAAAh5JREFUOMvtkkFynDAQRSlu8FvKrCUEeC3JPgBYk6yDRwcYKidw5f6VbjFo8Ng3iMUCNY+v/t2t5nv9t6urr69gd+1M07Tdqfvih/Y6KhuaxpFfT+YTHmkCBAParp/Ek+oD5HC42etHeT+FFCbB2iWn5wdsz0GFSQ7XzrsLPRqLVvVvo2nXl9lTfDA3IoDlMC1YDIf1oxqWn/DDtL8diB/zEb9yYtizaS8ETv/8gM9iPBB7dGL9Yg7MNE/Kok9Bmda7NIP8O3/dcWivSqxZyU1izZ+M2zG32rLaEiS3vMkTN3/HML3yUHFTR976ucUdhzRFAF66pgBEnVzFTwhAwWKtYMDhvU4Llhn2gUIBBF2d/yVAeBlooYD9teNRT7YcqETty5b0tNZxgYpeidoXrUUd2hPnJoY79pBYV2sJ29JL0wzTLUh3a8xXAGdRXwCMTO/WME84WVAUHHlzhe5RrbERiDcnzgMAicnUiQaUtam3vau0GVWppl8kGOZSo18Pd6VgyqLOtuDjfRkW60FuUwcLRQPv6+qHGLfUW/IYl7lCLnzOch2CBC7yNve1bGlrOmeKYVO7aPMlvR/UFjlnZ/YyOQAdCgPUy5KXm888vHngUNiEGMrZt9NdhDaV9uk1wh2bGJ/TvMd9YmedCjt2vmNvad7//iPhclcP8vvPOlBCXtJyaGIaMuxar5rl1PGujpyccDK1Lk+S+p7cqq2yf/2xbAxqJzj+AAAAAElFTkSuQmCC"
                  },
                  "visibility": "public"
                },
                {
                  "constant": true,
                  "functionSelector": "0e2a8038",
                  "id": 77,
                  "mutability": "constant",
                  "name": "snow_tiger",
                  "nameLocation": "11100:10:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 289,
                  "src": "11077:854:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 75,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "11077:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": {
                    "hexValue": "6956424f5277304b47676f414141414e5355684555674141414473414141413742414d4141414133432b2b41414141414746424d56455541414144653274493147694333723646776156354f53554479372b6d3373616662565137614141414141585253546c4d41514f62595a6741414166684a524546554f4d76746b6b475332794151525658636f427550737755684b32766f75594131754c49656c33304161354839704f622b6c642f4943492f474e306a51516732503139424139372f397336327676366577762f57753630792f3735394d4d4c66522b74523167654f3864392f777945536b4744382f66354d4a4c6a6b4e344e4e573935536f596e79387854625a744351504d555465626b7938395449364d7774486c73336d526d525733526e496d6e3365374d7a6a5339595a514d626e766d4a646d4c78694a6c332b4755364d505959744e7134623764666b63635a6f78636e63314c622b785a6c336a6d727658616759527a326f7a585279356b4a6537516d48587a473534533253465a2b425752432b546f596154766b6f525052783772714452534337484659384170506971477358544c6d646a434879594f31434d594f4a584d55663642547530436b55776f2b4b6632613142654e7152345271357a2f562f695175766c5537467466547230656241656c4638547446344566375345764c576c692b64336175346874364d775a4f616c387765635441373470484c57507669612b4b727767773337653676532b46356f4d6d5032646c78467874584e6d79326d49764f776b727857325861676249304b64534932353874517475617866633743346b48346c447573646b4e57357443434a455567536a6b61537055664d356954364878533768554d3530505659724c476d786733694a4f4e4a6d44316c456771746c6f704d6e3979446e4e306d6165386b65354456446232746e706456576e7476615a6f424d346645516f5776326c727533716549512b355a64632f636f4a6a55376f4c4a2b7a5434795363726e5376564a4243452f72362f42792b3577626662316642536d76627662524845365064715877524b702f5263586532694f4d794248557741414141424a52553545726b4a6767673d3d",
                    "id": 76,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "11113:818:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_2cfccb6f7cf45f6862e3fa21a7e416842218ca31c8124b9c61b4cc5b4d973eca",
                      "typeString": "literal_string \"iVBORw0KGgoAAAANSUhEUgAAADsAAAA7BAMAAAA3C++AAAAAGFBMVEUAAADe2tI1GiC3r6FwaV5OSUDy7+m3safbVQ7aAAAAAXRSTlMAQObYZgAAAfhJREFUOMvtkkGS2yAQRVXcoBuPswUhK2vouYA1uLIel30Aa5H9pOb+ld/ICI/GN0jQQg2P19BA97/9s62vv6ewv/Wu60y/759MMLfR+tR1geO8d9/wyESkGD8/f5MJLjkN4NNW95SoYny8xTbZtCQPMUTebky89TI6MwtHls3mRmRW3RnImn3e7MzjS9YZQMbnvmJdmLxiJl3+GU6MPYYtNq4b7dfkccZoxcnc1Lb+xZl3jmrvXagYRz2ozXRy5kJe7QmHXzG54S2SFZ+BWRC+ToYaTvkoRPRx7rqDRSC7HFY8ApPiqGsXTLmdjCHyYO1CMYOJXMUf6BTu0CkUwo+Kf2a1BeNqR4Rq5z/V/iQuvlU7FtfTr0ebAelF8TtF4Ef7SEvLWli+d3au4ht6MwZOal8wecTA74pHLWPvia+Krwgw37e6vS+F5oMmP2dlxFxtXNmy2mIvOwkrxW2XagbI0KdSI258tQtuaxfc7C4kH4lDusdkNW5tCCJEUgSjkaSpUfM5iT6HxS7hUM50PVYrLGmxg3iJONJmD1lEgqtlopMn9yDnN0mae8ke5DVDb2tnpdVWntvaZoBM4fEQoWv2lru3qeIQ+5Zdc/coJjU7oLJ+zT4yScrnSvVJBCE/r6/By+5wbfb1fBSmvbvbRHE6PdqXwRKp/RcXe2iOMyBHUwAAAABJRU5ErkJggg==\""
                    },
                    "value": "iVBORw0KGgoAAAANSUhEUgAAADsAAAA7BAMAAAA3C++AAAAAGFBMVEUAAADe2tI1GiC3r6FwaV5OSUDy7+m3safbVQ7aAAAAAXRSTlMAQObYZgAAAfhJREFUOMvtkkGS2yAQRVXcoBuPswUhK2vouYA1uLIel30Aa5H9pOb+ld/ICI/GN0jQQg2P19BA97/9s62vv6ewv/Wu60y/759MMLfR+tR1geO8d9/wyESkGD8/f5MJLjkN4NNW95SoYny8xTbZtCQPMUTebky89TI6MwtHls3mRmRW3RnImn3e7MzjS9YZQMbnvmJdmLxiJl3+GU6MPYYtNq4b7dfkccZoxcnc1Lb+xZl3jmrvXagYRz2ozXRy5kJe7QmHXzG54S2SFZ+BWRC+ToYaTvkoRPRx7rqDRSC7HFY8ApPiqGsXTLmdjCHyYO1CMYOJXMUf6BTu0CkUwo+Kf2a1BeNqR4Rq5z/V/iQuvlU7FtfTr0ebAelF8TtF4Ef7SEvLWli+d3au4ht6MwZOal8wecTA74pHLWPvia+Krwgw37e6vS+F5oMmP2dlxFxtXNmy2mIvOwkrxW2XagbI0KdSI258tQtuaxfc7C4kH4lDusdkNW5tCCJEUgSjkaSpUfM5iT6HxS7hUM50PVYrLGmxg3iJONJmD1lEgqtlopMn9yDnN0mae8ke5DVDb2tnpdVWntvaZoBM4fEQoWv2lru3qeIQ+5Zdc/coJjU7oLJ+zT4yScrnSvVJBCE/r6/By+5wbfb1fBSmvbvbRHE6PdqXwRKp/RcXe2iOMyBHUwAAAABJRU5ErkJggg=="
                  },
                  "visibility": "public"
                },
                {
                  "constant": true,
                  "functionSelector": "85ead00a",
                  "id": 80,
                  "mutability": "constant",
                  "name": "skeleton",
                  "nameLocation": "11961:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 289,
                  "src": "11938:668:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 78,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "11938:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": {
                    "hexValue": "6956424f5277304b47676f414141414e5355684555674141414477414141413842414d414141444930735242414141414431424d56455541414141314769446e374f2b7575384c2f2f2f386e753372774141414141585253546c4d41514f62595a67414141586c4a524546554f4d7674303875523369414d4147445267523430494f454742476b414a2f3358465067646c7366366b7674797363553359695247774d2f3657652b4c74732b4a77514d434242536b3778702b73306346344372364337397856505062416551533433707175443178366f646e7a584c68796379545655396d5a373831414342666f714a4863684b4b70494c426d537035786f4e62636a2b396e39335333396974563237797773594e75624f4b69646f62653639635467344938634e5059782b7562586477685668595a392b737057304e6a6771426b6b2b57544168664e38734f4d5246533842354a2b36466351585279613474757752344676366931646e4a4d2f47527272687548684f774e373465625a64475138654430484a372f6b3933745a424d5a44504c4750692f386a5132334f574d647a4c7250573550573175546547697673484166586738574e5055334f6f6b7470454e6930312f5a4576624b32675444645346646d61726f7749656d4e2f344b4c4b64444b38553846536f4d7a39593256373053465274522b3837577857556b2b49736e46374742623258594f643076487236676c37302b597550694d70436974694c4231456a34627936574f5943614972322b2f304b5a465253636e6669716274576e575a567169705a577a5662466c55735054396577636e306e3943772b6453704f35695378774141414141456c46546b5375516d4343",
                    "id": 79,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "11972:634:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_445621b95435d51027e840c5b394804989c160a530dd5ad2a9a1549e3163bd90",
                      "typeString": "literal_string \"iVBORw0KGgoAAAANSUhEUgAAADwAAAA8BAMAAADI0sRBAAAAD1BMVEUAAAA1GiDn7O+uu8L///8nu3rwAAAAAXRSTlMAQObYZgAAAXlJREFUOMvt08uR3iAMAGDRgR40IOEGBGkAJ/3XFPgdlsf6kvtyscU3YiRGwM/6We+Lts+JwQMCBBSk7xp+s0cF4Cr6C79xVPPbAeQS43pquD1x6odnzXLhycyTVU9mZ781ACBfoqJHchKKpILBmSp5xoNbcj+9n93S39itV27ywsYNubOKidobe69cTg4I8cNPYx+ubXdwhVhYZ9+spW0NjgqBkk+WTAhfN8sOMRFS8B5J+6FcQXRya4tuwR4Fv6i1dnJM/GRrrhuHhOwN74ebZdGQ8eD0HJ7/k93tZBMZDPLGPi/8jQ23OWMdzLrPW5PW1uTeGivsHAfXg8WNPU3OoktpENi01/ZEvbK2gTDdSFdmarowIemN/4KLKdDK8U8FSoMz9Y2V70SFRtR+87WxWUk+IsnF7GBb2XYOd0vHr6gl70+YuPiMpCitiLB1Ej4by6WOYCaIr2+/0KZFRScnfiqbtWnWZVqipZWzVbFlUsPT9ewcn0n9Cw+dSpO5iSxwAAAAAElFTkSuQmCC\""
                    },
                    "value": "iVBORw0KGgoAAAANSUhEUgAAADwAAAA8BAMAAADI0sRBAAAAD1BMVEUAAAA1GiDn7O+uu8L///8nu3rwAAAAAXRSTlMAQObYZgAAAXlJREFUOMvt08uR3iAMAGDRgR40IOEGBGkAJ/3XFPgdlsf6kvtyscU3YiRGwM/6We+Lts+JwQMCBBSk7xp+s0cF4Cr6C79xVPPbAeQS43pquD1x6odnzXLhycyTVU9mZ781ACBfoqJHchKKpILBmSp5xoNbcj+9n93S39itV27ywsYNubOKidobe69cTg4I8cNPYx+ubXdwhVhYZ9+spW0NjgqBkk+WTAhfN8sOMRFS8B5J+6FcQXRya4tuwR4Fv6i1dnJM/GRrrhuHhOwN74ebZdGQ8eD0HJ7/k93tZBMZDPLGPi/8jQ23OWMdzLrPW5PW1uTeGivsHAfXg8WNPU3OoktpENi01/ZEvbK2gTDdSFdmarowIemN/4KLKdDK8U8FSoMz9Y2V70SFRtR+87WxWUk+IsnF7GBb2XYOd0vHr6gl70+YuPiMpCitiLB1Ej4by6WOYCaIr2+/0KZFRScnfiqbtWnWZVqipZWzVbFlUsPT9ewcn0n9Cw+dSpO5iSxwAAAAAElFTkSuQmCC"
                  },
                  "visibility": "public"
                },
                {
                  "constant": true,
                  "functionSelector": "0f114e0c",
                  "id": 83,
                  "mutability": "constant",
                  "name": "plastic",
                  "nameLocation": "12636:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 289,
                  "src": "12613:543:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 81,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "12613:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": {
                    "hexValue": "6956424f5277304b47676f414141414e5355684555674141414477414141413842414d414141444930735242414141414746424d56455541414144704b536b31476944393177502f384a7a366433666376787a4f4943443652574a534141414141585253546c4d41514f62595a67414141524e4a524546554f4d76746b4c4678777a414d52585863674958504c515079504144687977415746306a684256786f4144645a5078384b76306a5a6958336e63796b3078502f7645345130624c58565675386f467834364d64436a377a4b5a3954795a35456d6258746432732b2f78306a7a486648734d546d733045535034467a3645425664504445744e4e6e794d3258704a4f626959786179557077357246704579476c5a466d3862383266414a3572466f506d427a744158423247456f78533159546b2b43467272484e68793234574c446f363678466248564b2f694350336948423377476e6d7659464871574779505137374b75594f3170756968366c71304e5a37365146446b59486658656939514c5471504132432f63675a6f576a7072314e36642f2b4c6d75773072767235513778747377564d4e6663337a426b4959706431557a66665974446e786559332b4c2f514e4d3254416634326250636238354d64554e626f397a38582f77447a535a55724657536369314141414141456c46546b5375516d4343",
                    "id": 82,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "12646:510:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_4b1230001e1a8df85d9e275df590d41b30c8588bbbab987bd7d81c0998155d35",
                      "typeString": "literal_string \"iVBORw0KGgoAAAANSUhEUgAAADwAAAA8BAMAAADI0sRBAAAAGFBMVEUAAADpKSk1GiD91wP/8Jz6d3fcvxzOICD6RWJSAAAAAXRSTlMAQObYZgAAARNJREFUOMvtkLFxwzAMRXXcgIXPLQPyPADhywAWF0jhBVxoADdZPx8Kv0jZiX3ncyk0xP/vE4Q0bLXVVu8oFx46MdCj7zKZ9TyZ5EmbXtd2s+/x0jzHfHsMTms0ESP4Fz6EBVdPDEtNNnyM2XpJObiYxayUpw5rFpEyGlZFm8b82fAJ5rFoPmBztAXB2GEoxS1YTk+CFrrHNhy24WLDo66xFbHVK/iCP3iHB3wGnmvYFHqWGyPQ77KuYO1puih6lq0NZ76QFDkYHfXei9QLTqPA2C/cgZoWjpr1N6d/+Lmuw0rvr5Q7xtswVMNfc3zBkIYpd1UzffYtDnxeY3+L/QNM2TAf42bPcb85MdUNbo9z8X/wDzSZUrFWSci1AAAAAElFTkSuQmCC\""
                    },
                    "value": "iVBORw0KGgoAAAANSUhEUgAAADwAAAA8BAMAAADI0sRBAAAAGFBMVEUAAADpKSk1GiD91wP/8Jz6d3fcvxzOICD6RWJSAAAAAXRSTlMAQObYZgAAARNJREFUOMvtkLFxwzAMRXXcgIXPLQPyPADhywAWF0jhBVxoADdZPx8Kv0jZiX3ncyk0xP/vE4Q0bLXVVu8oFx46MdCj7zKZ9TyZ5EmbXtd2s+/x0jzHfHsMTms0ESP4Fz6EBVdPDEtNNnyM2XpJObiYxayUpw5rFpEyGlZFm8b82fAJ5rFoPmBztAXB2GEoxS1YTk+CFrrHNhy24WLDo66xFbHVK/iCP3iHB3wGnmvYFHqWGyPQ77KuYO1puih6lq0NZ76QFDkYHfXei9QLTqPA2C/cgZoWjpr1N6d/+Lmuw0rvr5Q7xtswVMNfc3zBkIYpd1UzffYtDnxeY3+L/QNM2TAf42bPcb85MdUNbo9z8X/wDzSZUrFWSci1AAAAAElFTkSuQmCC"
                  },
                  "visibility": "public"
                },
                {
                  "constant": true,
                  "functionSelector": "a1b9bb53",
                  "id": 86,
                  "mutability": "constant",
                  "name": "zombie",
                  "nameLocation": "13186:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 289,
                  "src": "13163:674:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 84,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "13163:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": {
                    "hexValue": "6956424f5277304b47676f414141414e5355684555674141414477414141413842414d414141444930735242414141414656424d5645554141414335744a5131476943576a32764f79712b5151442b75626d35612b5a57554141414141585253546c4d41514f62595a67414141586c4a524546554f4d7674302b324e7044414d4275444948627a7846704477636638645677446143704232436c6a70727638537a68356d494948635662424745516c5037495149776b2f3852442b473439624459526c53434452384470304a68496c7a4357474d73694c64324241535138694d4b50475776466775764467732f2b4f616e6c48775a7276574b335068416c7662554d5a7264594a6d7a6a6f6c577457575671766563684650542b544a504b4c443168495a645a674e55545352476c75464c76765765707833356b537938786f6f585a683346756359786f597a72446c4869596a4f735759423638357158596d4567326b41464944343168672b71412f323135622f772f5459566a4f416e5450674d2f4a78726a525045653663624c426c686a4d4f6a6d364b4a3464355778516363664943464f4446394a57423863373834742f546b7a39716c6a50376a7a476a5a6353447678646b5642796d462b75544e7a68586e317575655a36755449706e4642384d4150617052347879386767504c75484b764c5063575558663963683758464c466d5658426278616f7a6a6657392f2b7458533748556a33576b37566c6776473547584c65576935442f534c6c3637757144626270445439614c6f393673545a37677259734f70396a576d374d5a6435716c726c6c5859663054315a57665071447632316f56545453355543674141414141456c46546b5375516d4343",
                    "id": 85,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "13195:642:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_6310e6308de6fc14397ac6ace67af2df16177cac6dd8d0c651a935bccb1857db",
                      "typeString": "literal_string \"iVBORw0KGgoAAAANSUhEUgAAADwAAAA8BAMAAADI0sRBAAAAFVBMVEUAAAC5tJQ1GiCWj2vOyq+QQD+ubm5a+ZWUAAAAAXRSTlMAQObYZgAAAXlJREFUOMvt0+2NpDAMBuDIHbzxFpDwcf8dVwDaCpB2Cljprv8Szh5mIIHcVbBGEQlP7IQIwk/8RD+G49bDYRlSCDR8Dp0JhIlzCWGMsiLd2BASQ8iMKPGWvFguvDgs/+OanlHwZrvWK3PhAlvbUMZrdYJmzjolWtWWVqvechFPT+TJPKLD1hIZdZgNUTSRGluFLvvWepx35kSy8xooXZh3FucYxoYzrDlHiYjOsWYB685qXYmEg2kAFID41hg+qA/215b/w/TYVjOAnTPgM/JxrjRPEe6cbLBlhjMOjm6KJ4d5WxQccfICFODF9JWB8c784t/Tkz9qljP7jzGjZcSDvxdkVBymF+uTNzhXn1uueZ6uTIpnFB8MAPapR4xy8ggPLuHKvLPcWUXf9ch7XFLFmVXBbxaozjfW9/+tXS7HUj3Wk7VlgvG5GXLeWi5D/SLl67uqDbbpDT9aLo96sTZ7grYsOp9jWm7MZd5qlrllXYf0T1ZWfPqDv21oVTTS5UCgAAAAAElFTkSuQmCC\""
                    },
                    "value": "iVBORw0KGgoAAAANSUhEUgAAADwAAAA8BAMAAADI0sRBAAAAFVBMVEUAAAC5tJQ1GiCWj2vOyq+QQD+ubm5a+ZWUAAAAAXRSTlMAQObYZgAAAXlJREFUOMvt0+2NpDAMBuDIHbzxFpDwcf8dVwDaCpB2Cljprv8Szh5mIIHcVbBGEQlP7IQIwk/8RD+G49bDYRlSCDR8Dp0JhIlzCWGMsiLd2BASQ8iMKPGWvFguvDgs/+OanlHwZrvWK3PhAlvbUMZrdYJmzjolWtWWVqvechFPT+TJPKLD1hIZdZgNUTSRGluFLvvWepx35kSy8xooXZh3FucYxoYzrDlHiYjOsWYB685qXYmEg2kAFID41hg+qA/215b/w/TYVjOAnTPgM/JxrjRPEe6cbLBlhjMOjm6KJ4d5WxQccfICFODF9JWB8c784t/Tkz9qljP7jzGjZcSDvxdkVBymF+uTNzhXn1uueZ6uTIpnFB8MAPapR4xy8ggPLuHKvLPcWUXf9ch7XFLFmVXBbxaozjfW9/+tXS7HUj3Wk7VlgvG5GXLeWi5D/SLl67uqDbbpDT9aLo96sTZ7grYsOp9jWm7MZd5qlrllXYf0T1ZWfPqDv21oVTTS5UCgAAAAAElFTkSuQmCC"
                  },
                  "visibility": "public"
                },
                {
                  "constant": true,
                  "functionSelector": "15c466a6",
                  "id": 89,
                  "mutability": "constant",
                  "name": "gorilla",
                  "nameLocation": "13867:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 289,
                  "src": "13844:735:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 87,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "13844:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": {
                    "hexValue": "6956424f5277304b47676f414141414e5355684555674141414477414141413842414d414141444930735242414141414656424d564555414141416447687462563167744a69684a513056396533772b4e6a6a334f38426a4141414141585253546c4d41514f62595a6741414161564a524546554f4d767430303175777941514257427a412f36615061504a415a436c376b4663494a4636674b6a33763050664d774b3763525935514f784b4c7636594e304f694c4a2f7263373236334f49736e77622f6e4e583875487643652b657637736565324d75582b6d5a4e532f556d36565173367157714e56556c56586b752f354c6d5663685355355062552f4664437537454a6848333154356e463857475a5148576950527a746d2f656d7454534f64306a6d6558576f4a6a7036635334717a554b504c4e757a484e7658463879527a75785163664f5048646e5447454846334e585975644b76746f34324a4f393447526b6e4573534f653366686d6756625a316235656f6d4f7865524a694b566f366c73692f677547306b304553587a696155584f37694336577135674a4a31634d44556c5947646d6132592f6a47717333683033786d646b775137755a4a31634358723545754f557639587135517777674e593070473967504d4958325063754a4862787157737333664947633151775257534d456f4965624a62563164546963357955614a5876686d38594a476a437936543858416c6741456a4863343359792f5864724a7a4b362f634759624c376457683778382f344a36563933427578742f4d597077394d4a33614858726b7939615932543139612f3934743970686b502f4d4637503431383235352b7a75322b375a2b7a6e337a32482f7674647a39526f6563334475506a4b5836324f306668302b6d6c383250566254742b6f2f2b6c5a726b6a376831695941414141415355564f524b35435949493d",
                    "id": 88,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "13877:702:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_6231b33eea3a791fa0dfaac8ee95346dd25f94ddfa5e1077cbb59f089da855d2",
                      "typeString": "literal_string \"iVBORw0KGgoAAAANSUhEUgAAADwAAAA8BAMAAADI0sRBAAAAFVBMVEUAAAAdGhtbV1gtJihJQ0V9e3w+Njj3O8BjAAAAAXRSTlMAQObYZgAAAaVJREFUOMvt001uwyAQBWBzA/6aPaPJAZCl7kFcIJF6gKj3v0PfMwK7cRY5QOxKLv6YN0OiLJ/rc7263OIsnwb/nNX8uHvCe+ev7see2MuX+mZNS/Um6VQs6qWqNVUlVXku/5LmVchSU5PbU/FdCu7EJhH31T5nF8WGZQHWiPRztm/emtTSOd0jmeXWoJjp6cS4qzUKPLNuzHNvXF8yRzuxQcfOPHdnTGEHF3NXYudKvto42JO94GRknEsSOe3fhmgVbZ1b5eomOxeRJiKVo6lsi/guG0k0ESXziaUXO7iC6Wq5gJJ1cMDUlYGdma2Y/jGqs3h03xmdkwQ7uZJ1cCXr5EuOUv9Xq5QwwgNY0pG9gPMIX2PcuJHbxqWss3fIGc1QwRWSMEoIebJbV1dTic5yUaJXvhm8YJGjCy6T8XAlgAEjHc43Yy/XdrJzK6/cGYbL7dWh7x8/4J6V93Buxt/MYpw9MJ3aHXrky9aY2T19a/94t9phkP/MF7P418255+zu2+7Z+zn3z2H/vtdz9Roec3DuPjKX62O0fh0+ml82PVbTt+o/+lZrkj7h1iYAAAAASUVORK5CYII=\""
                    },
                    "value": "iVBORw0KGgoAAAANSUhEUgAAADwAAAA8BAMAAADI0sRBAAAAFVBMVEUAAAAdGhtbV1gtJihJQ0V9e3w+Njj3O8BjAAAAAXRSTlMAQObYZgAAAaVJREFUOMvt001uwyAQBWBzA/6aPaPJAZCl7kFcIJF6gKj3v0PfMwK7cRY5QOxKLv6YN0OiLJ/rc7263OIsnwb/nNX8uHvCe+ev7see2MuX+mZNS/Um6VQs6qWqNVUlVXku/5LmVchSU5PbU/FdCu7EJhH31T5nF8WGZQHWiPRztm/emtTSOd0jmeXWoJjp6cS4qzUKPLNuzHNvXF8yRzuxQcfOPHdnTGEHF3NXYudKvto42JO94GRknEsSOe3fhmgVbZ1b5eomOxeRJiKVo6lsi/guG0k0ESXziaUXO7iC6Wq5gJJ1cMDUlYGdma2Y/jGqs3h03xmdkwQ7uZJ1cCXr5EuOUv9Xq5QwwgNY0pG9gPMIX2PcuJHbxqWss3fIGc1QwRWSMEoIebJbV1dTic5yUaJXvhm8YJGjCy6T8XAlgAEjHc43Yy/XdrJzK6/cGYbL7dWh7x8/4J6V93Buxt/MYpw9MJ3aHXrky9aY2T19a/94t9phkP/MF7P418255+zu2+7Z+zn3z2H/vtdz9Roec3DuPjKX62O0fh0+ml82PVbTt+o/+lZrkj7h1iYAAAAASUVORK5CYII="
                  },
                  "visibility": "public"
                },
                {
                  "constant": true,
                  "functionSelector": "343e613a",
                  "id": 92,
                  "mutability": "constant",
                  "name": "yeti",
                  "nameLocation": "14609:4:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 289,
                  "src": "14586:764:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 90,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "14586:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": {
                    "hexValue": "6956424f5277304b47676f414141414e5355684555674141414477414141413842414d414141444930735242414141414746424d56455541414144723363416648423367352b374d7434322b7a647a31374e72783966697a49544f4f4141414141585253546c4d41514f62595a6741414162744a524546554f4d76746b6b467577794151525331754d4769554e6469343252745a58594d345153774f6b4378366750542b55762f5941747951525139515547512b6a2f396e694433386a2f2f78626f7a44614f5370734f69702b6872764776756a7659786670734f575074676d6f35494f44394b646d646853594b4d436b77373061762b675a4a6b455539434a48692f6d4f30564d4c555563357357385a6b6647675745414441377066625a4e31696964644a39756b5378326f324357644e31687a474155412f615964797a33336e46346936573144697455504c44632b38446f77685163315a3046486a67497668685873425673435463546a48755246717a623279414f784f6e414b596836554d4f524b4246526b4e61596475482b6968567059555173574a36516c6d726e415667344778476767726e67435630484242614d4a6150375a3345765a464739595654574e4a6d4b673241754f416a6d69712b726f2f44627a525333456a34426b7a356a5338424c4366664f3754674a546a754f3064666132374b67474279696b495257706d6d744f48742f437a71365764793336437a503375654342346a567a644d4e426b544e797931754d4c5476415771526e584a327773395550476376597a3377746f7663334a4e664e3942736a6b3677686c35614f41356e6e3864446a566d554e79634d33744a6d30444f2b656f6e4f707478543476337a722b3578452f4d5a59324f73357539632b363639353039545a4c766e2b58396f3739763362723839612b4e792b6f78462b6d63702f543638464c384b7a5764334669377548796a76664d5458476f375a4141414141456c46546b5375516d4343",
                    "id": 91,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "14616:734:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_18dbe8fed9f71f04443261c37b6c2cd28de1fcc6b2b6ad7501265f73956a403f",
                      "typeString": "literal_string \"iVBORw0KGgoAAAANSUhEUgAAADwAAAA8BAMAAADI0sRBAAAAGFBMVEUAAADr3cAfHB3g5+7Mt42+zdz17Nrx9fizITOOAAAAAXRSTlMAQObYZgAAAbtJREFUOMvtkkFuwyAQRS1uMGiUNdi42RtZXYM4QSwOkCx6gPT+Uv/YAtyQRQ9QUGQ+j/9niD38j//xbozDaOSpsOip+hrvGvujvYxfpsOWPtgmo5IOD9KdmdhSYKMCkw70av+gZJkEU9CJHi/mO0VMLUUc5sW8ZkfGgWEADA7pfbZN1iiddJ9ukSx2o2CWdN1hzGAUA/aYdyz33nF4i6W1DitUPLDc+8DowhQc1Z0FHjgIvhhXsBVsCTcTjHuRFqzb2yAOxOnAKYh6UMORKBFRkNaYduH+ihVpYUQsWJ6QlmrnAVg4GxGggrngCV0HBBaMJaP7Z3EvZFG9YVTWNJmKg2AuOAjmiq+ro/DbzRS3Ej4Bkz5jS8BLCffO7TgJTjuO0dfa27KgGByikIRWpmmtOHt/Czq6Wdy36CzP3ueCB4jVzdMNBkTNyy1uMLTvAWqRnXJ2ws9UPGcvYz3wtovc3JNfN9Bsjk6whl5aOA5nn8dDjVmUNycM3tJm0DO+eonOptxT4v3zr+5xE/MZY2Os5u9c+669509TZLvn+X9o79v3br89a+Ny+oxF+mcp/T68FL8KzWd3Fi7uHyjvfMTXGo7ZAAAAAElFTkSuQmCC\""
                    },
                    "value": "iVBORw0KGgoAAAANSUhEUgAAADwAAAA8BAMAAADI0sRBAAAAGFBMVEUAAADr3cAfHB3g5+7Mt42+zdz17Nrx9fizITOOAAAAAXRSTlMAQObYZgAAAbtJREFUOMvtkkFuwyAQRS1uMGiUNdi42RtZXYM4QSwOkCx6gPT+Uv/YAtyQRQ9QUGQ+j/9niD38j//xbozDaOSpsOip+hrvGvujvYxfpsOWPtgmo5IOD9KdmdhSYKMCkw70av+gZJkEU9CJHi/mO0VMLUUc5sW8ZkfGgWEADA7pfbZN1iiddJ9ukSx2o2CWdN1hzGAUA/aYdyz33nF4i6W1DitUPLDc+8DowhQc1Z0FHjgIvhhXsBVsCTcTjHuRFqzb2yAOxOnAKYh6UMORKBFRkNaYduH+ihVpYUQsWJ6QlmrnAVg4GxGggrngCV0HBBaMJaP7Z3EvZFG9YVTWNJmKg2AuOAjmiq+ro/DbzRS3Ej4Bkz5jS8BLCffO7TgJTjuO0dfa27KgGByikIRWpmmtOHt/Czq6Wdy36CzP3ueCB4jVzdMNBkTNyy1uMLTvAWqRnXJ2ws9UPGcvYz3wtovc3JNfN9Bsjk6whl5aOA5nn8dDjVmUNycM3tJm0DO+eonOptxT4v3zr+5xE/MZY2Os5u9c+669509TZLvn+X9o79v3br89a+Ny+oxF+mcp/T68FL8KzWd3Fi7uHyjvfMTXGo7ZAAAAAElFTkSuQmCC"
                  },
                  "visibility": "public"
                },
                {
                  "constant": true,
                  "functionSelector": "43cf51ff",
                  "id": 95,
                  "mutability": "constant",
                  "name": "squatch",
                  "nameLocation": "15380:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 289,
                  "src": "15357:767:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 93,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "15357:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": {
                    "hexValue": "6956424f5277304b47676f414141414e5355684555674141414477414141413842414d414141444930735242414141414746424d564555414141444c6c6d73314769423654797977653146544f5354657249535a616b514d4c4877304141414141585253546c4d41514f62595a6741414162744a524546554f4d76746b6b467577794151525331754d4769554e6469343252745a58594d345153774f6b4378366750542b55762f5941747951525139515547512b6a2f396e694433386a2f2f78626f7a44614f5370734f69702b6872764776756a7659786670734f575074676d6f35494f44394b646d646853594b4d436b77373061762b675a4a6b455539434a48692f6d4f30564d4c555563357357385a6b6647675745414441377066625a4e31696964644a39756b5378326f324357644e31687a474155412f615964797a33336e46346936573144697455504c44632b38446f77685163315a3046486a67497668685873425673435463546a48755246717a623279414f784f6e414b596836554d4f524b4246526b4e61596475482b6968567059555173574a36516c6d726e415667344778476767726e67435630484242614d4a6150375a3345765a464739595654574e4a6d4b673241754f416a6d69712b726f2f44627a525333456a34426b7a356a5338424c4366664f3754674a546a754f3064666132374b67474279696b495257706d6d744f48742f437a71365764793336437a503375654342346a567a644d4e426b544e797931754d4c5476415771526e584a327773395550476376597a3377746f7663334a4e664e3942736a6b3677686c35614f41356e6e3864446a566d554e79634d33744a6d30444f2b656f6e4f707478543476337a722b3578452f4d5a59324f73357539632b363639353039545a4c766e2b58396f3739763362723839612b4e792b6f78462b6d63702f543638464c384b7a5764334669377548796a76664d5458476f375a4141414141456c46546b5375516d4343",
                    "id": 94,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "15390:734:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_94c63e63a26e2258c5d67081dfbf6291ab7d9cb257f06b69b3605c21b937fb9e",
                      "typeString": "literal_string \"iVBORw0KGgoAAAANSUhEUgAAADwAAAA8BAMAAADI0sRBAAAAGFBMVEUAAADLlms1GiB6Tyywe1FTOSTerISZakQMLHw0AAAAAXRSTlMAQObYZgAAAbtJREFUOMvtkkFuwyAQRS1uMGiUNdi42RtZXYM4QSwOkCx6gPT+Uv/YAtyQRQ9QUGQ+j/9niD38j//xbozDaOSpsOip+hrvGvujvYxfpsOWPtgmo5IOD9KdmdhSYKMCkw70av+gZJkEU9CJHi/mO0VMLUUc5sW8ZkfGgWEADA7pfbZN1iiddJ9ukSx2o2CWdN1hzGAUA/aYdyz33nF4i6W1DitUPLDc+8DowhQc1Z0FHjgIvhhXsBVsCTcTjHuRFqzb2yAOxOnAKYh6UMORKBFRkNaYduH+ihVpYUQsWJ6QlmrnAVg4GxGggrngCV0HBBaMJaP7Z3EvZFG9YVTWNJmKg2AuOAjmiq+ro/DbzRS3Ej4Bkz5jS8BLCffO7TgJTjuO0dfa27KgGByikIRWpmmtOHt/Czq6Wdy36CzP3ueCB4jVzdMNBkTNyy1uMLTvAWqRnXJ2ws9UPGcvYz3wtovc3JNfN9Bsjk6whl5aOA5nn8dDjVmUNycM3tJm0DO+eonOptxT4v3zr+5xE/MZY2Os5u9c+669509TZLvn+X9o79v3br89a+Ny+oxF+mcp/T68FL8KzWd3Fi7uHyjvfMTXGo7ZAAAAAElFTkSuQmCC\""
                    },
                    "value": "iVBORw0KGgoAAAANSUhEUgAAADwAAAA8BAMAAADI0sRBAAAAGFBMVEUAAADLlms1GiB6Tyywe1FTOSTerISZakQMLHw0AAAAAXRSTlMAQObYZgAAAbtJREFUOMvtkkFuwyAQRS1uMGiUNdi42RtZXYM4QSwOkCx6gPT+Uv/YAtyQRQ9QUGQ+j/9niD38j//xbozDaOSpsOip+hrvGvujvYxfpsOWPtgmo5IOD9KdmdhSYKMCkw70av+gZJkEU9CJHi/mO0VMLUUc5sW8ZkfGgWEADA7pfbZN1iiddJ9ukSx2o2CWdN1hzGAUA/aYdyz33nF4i6W1DitUPLDc+8DowhQc1Z0FHjgIvhhXsBVsCTcTjHuRFqzb2yAOxOnAKYh6UMORKBFRkNaYduH+ihVpYUQsWJ6QlmrnAVg4GxGggrngCV0HBBaMJaP7Z3EvZFG9YVTWNJmKg2AuOAjmiq+ro/DbzRS3Ej4Bkz5jS8BLCffO7TgJTjuO0dfa27KgGByikIRWpmmtOHt/Czq6Wdy36CzP3ueCB4jVzdMNBkTNyy1uMLTvAWqRnXJ2ws9UPGcvYz3wtovc3JNfN9Bsjk6whl5aOA5nn8dDjVmUNycM3tJm0DO+eonOptxT4v3zr+5xE/MZY2Os5u9c+669509TZLvn+X9o79v3br89a+Ny+oxF+mcp/T68FL8KzWd3Fi7uHyjvfMTXGo7ZAAAAAElFTkSuQmCC"
                  },
                  "visibility": "public"
                },
                {
                  "constant": true,
                  "functionSelector": "697e9262",
                  "id": 98,
                  "mutability": "constant",
                  "name": "steve",
                  "nameLocation": "16154:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 289,
                  "src": "16131:725:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 96,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "16131:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": {
                    "hexValue": "6956424f5277304b47676f414141414e5355684555674141414477414141413842414d414141444930735242414141414d46424d56455541414143575830474856547331476941794d69565a57566c4f546b34364f69784f6f45372f49794d5448526d6c704b44386157434756447151577a364655546255766965364141414141585253546c4d41514f62595a6741414159564a524546554f4d74694741576a5942514d456d4273624143696d49324e55595368596f41363653656c5953414b41336768577a6676445334435670677646437855794d525656323561584c6330755546794173457269437662493768306c3369536567505034415638727a4d78553173483870673376387958763364455271654f534a7238614b4f73556541776a534953324c2f4d4750595849414c496b43776c35416a615a775066456b7541595758724473316e466d576673716248544f51346b795272694478486c3962686f41796a382b6a696a6e6f323076524d4a6d54334c5948795245702f656e37454758753252637768472f686d79336c69326434444954316d31374f4a4f61476559665857474d6f6876576447526b7a36594753706750316c397a38627a367a5a6d5a37757777704e74384c616a67466c4e3744784b33764b706558704e45326e30336d6170765052364f4a4b786d776d4256625945574f373365313257366d767372747432342b75613975756b2f695270704147786e2b4c4867516f582b506d4f52347637324738345575594d616d6171716d62576f764d7973613361316a506938566d735477706e6f484a772b506d61586c53317343424c382f7a53706d467a34634c57324637575a565658546148556b75707936715264735843384b2f664557444372776551385a384a776e7650504c443150415a2b414f487468686251547938564141414141456c46546b5375516d4343",
                    "id": 97,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "16162:694:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_d204d92d139a4f2d2f1c90e3adea2fe10cc3bd044bdf2c59402d99c492fe21c9",
                      "typeString": "literal_string \"iVBORw0KGgoAAAANSUhEUgAAADwAAAA8BAMAAADI0sRBAAAAMFBMVEUAAACWX0GHVTs1GiAyMiVZWVlOTk46OixOoE7/IyMTHRmlpKD8aWCGVDqQWz6FUTbUvie6AAAAAXRSTlMAQObYZgAAAYVJREFUOMtiGAWjYBQMEmBsbACimI2NUYShYoA66SelYSAKA3ghWzfvDS4CVpgvFCxUyMRVV25aXLc0uUFyAsEriCvbI7h0l3iSegPP4AV8rzMxU1sH8pg3v8yXv3dERqeOSJr8aKOsUeAwjSIS2L/MGPYXIALIkCwl5AjaZwPfEkuAYWXrDs1nFmWfsqbHTOQ4kyRriDxHl9bhoAyj8+jijno20vRMJmT3LYHyREp/en7EGXu2RcwhG/hmy3li2d4DIT1m17OJOaGeYfXWGMohvWdGRkz6YGSpgP1l9z8bz6zZmZ7uwwpNt8LajgFlN7DxK3vKpeXpNE2n03mapvPR6OJKxmwmBVbYEWO73e12W6mvsrtt24+ua9uuk/iRppAGxn+LHgQoX+PmOR4v72G84UuYMamaqqmbWovMysa3a1jPi8VmsTwpnoHJw+PmaXlS1sCBL8/zSpmFz4cLW2F7WZVVXTaHUkupy6qRdsXC8K/fEWDCrweQ8Z8JwnvPPLD1PAZ+AOHthhbQTy8VAAAAAElFTkSuQmCC\""
                    },
                    "value": "iVBORw0KGgoAAAANSUhEUgAAADwAAAA8BAMAAADI0sRBAAAAMFBMVEUAAACWX0GHVTs1GiAyMiVZWVlOTk46OixOoE7/IyMTHRmlpKD8aWCGVDqQWz6FUTbUvie6AAAAAXRSTlMAQObYZgAAAYVJREFUOMtiGAWjYBQMEmBsbACimI2NUYShYoA66SelYSAKA3ghWzfvDS4CVpgvFCxUyMRVV25aXLc0uUFyAsEriCvbI7h0l3iSegPP4AV8rzMxU1sH8pg3v8yXv3dERqeOSJr8aKOsUeAwjSIS2L/MGPYXIALIkCwl5AjaZwPfEkuAYWXrDs1nFmWfsqbHTOQ4kyRriDxHl9bhoAyj8+jijno20vRMJmT3LYHyREp/en7EGXu2RcwhG/hmy3li2d4DIT1m17OJOaGeYfXWGMohvWdGRkz6YGSpgP1l9z8bz6zZmZ7uwwpNt8LajgFlN7DxK3vKpeXpNE2n03mapvPR6OJKxmwmBVbYEWO73e12W6mvsrtt24+ua9uuk/iRppAGxn+LHgQoX+PmOR4v72G84UuYMamaqqmbWovMysa3a1jPi8VmsTwpnoHJw+PmaXlS1sCBL8/zSpmFz4cLW2F7WZVVXTaHUkupy6qRdsXC8K/fEWDCrweQ8Z8JwnvPPLD1PAZ+AOHthhbQTy8VAAAAAElFTkSuQmCC"
                  },
                  "visibility": "public"
                },
                {
                  "constant": true,
                  "functionSelector": "d54807e7",
                  "id": 101,
                  "mutability": "constant",
                  "name": "cosmic",
                  "nameLocation": "16886:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 289,
                  "src": "16863:970:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 99,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "16863:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": {
                    "hexValue": "6956424f5277304b47676f414141414e5355684555674141414477414141413843414d414141414e49696c41414141414e6c424d5645554141414170494549774b456b6546436b624554636c4845464d52474a444f316b324c552f372b763946505673374d6c5077362f37577966644e523231434f325454304e764b784e716a53646b634141414141585253546c4d41514f62595a674141416a5a4a52454655534d6674315175796d7a414d4264424b6c697844674c623733327a7656647a486741504a41714b4a536242314a4f557a6b312f662b4d5933766e45547051783348304b4557666b762b74316e425a42617a6279616c3778317135356235515062434b463764736d584c4e444b2b3737454469396c6e34546432784c6c72563066315839726c524d7547746936787949506446566937652b5a324b58712f4159586b426b4f6c7235674230716a7576443558686336705a32786e6a6837357562484f50684d6a4a74354372543941434f4842574b5a6b55394d744570746d324c6a4457374176544d7464645551776d7463536c726432673832366b496b66665735537a6e6a7a4252303772394e4c6d35356f68316e36736c4b7837525772634632624a5a537144755763734c634c79476f626d435041335a3341387a4f6d5470694c524c5044477454382f3058356f333163424a302b68725857434a78544f7330483746752b735231774e516846517552476c5536686c6c794975344344355a3432724879526472553872516976664f495762614338617557455163304c6b7778472f416b532b436b736a5069674247545a4663386672746464613550654d627a456f6d746d747549575a7371756a33676d4153317a5145764d594f7a6234664f4a473170566830544934694875624e6a5779714c532b694f46666d5435635374323647315a65554762416573755a325058444a696a7564357a4968315a6b7258316f50545a39475832686939387847337276316752357a5857586673766d4f3978672b3348423758636a686f617a506e3453553265344479382f4554686b5a426e4b72494657352f71476e502f382f2b49466139786d33313144614f5671446d76374f2b366179495678674265344668555678334f2b724572335752784c73643953576d466233486a54696b584f463574344f2b77516f4c4c44643467343570784555537a3274633479772b72564f5534576a4c773541626e416c547949436c6e2b6b317a756f53386f502f4162566a45307171567354664141414141456c46546b5375516d4343",
                    "id": 100,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "16895:938:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_956d05f9fdc3156a37ec8a1d0511978d38fc02321aa0700f8cac401a758a6186",
                      "typeString": "literal_string \"iVBORw0KGgoAAAANSUhEUgAAADwAAAA8CAMAAAANIilAAAAANlBMVEUAAAApIEIwKEkeFCkbETclHEFMRGJDO1k2LU/7+v9FPVs7MlPw6/7WyfdNR21CO2TT0NvKxNqjSdkcAAAAAXRSTlMAQObYZgAAAjZJREFUSMft1QuymzAMBdBKlixDgLb732zvVdzHgAPJAqKJSbB1JOUzk1/f+MY3vnETpQx3H0KEWfkv+t1nBZBazbyal7x1q55b5QPbCKF7dsmXLNDK+77EDi9ln4Td2xLlrV0f1X9rlRMuGti6xyIPdFVi7e+Z2KXq/AYXkBkOlr5gB0qjuvD5Xhc6pZ2xnjh75ubHOPhMjJt5CrT9ACOHBWKZkU9MtEptm2LjDW7AvTMtddUQwmtcSlrd2g826kIkffW5SznjzBR07r9NLm55oh1n6slKx7RWrcF2bJZSqDuWcsLcLyGobmCPA3Z3A8zOmTpiLRLPDGtT8/0X5o31cBJ0+hrXWCJxTOs0H7Fu+sR1wNQhFQuRGlU6hllyIu4CD5Z42rHyRdrU8rQivfOIWbaC8auWEQc0LkwxG/AkS+CksjPigBGTZFc8frtdda5PeMbzEomtmtuIWZsquj3gmAS1zQEvMYOzb4fOJG1pVh0TI4iHubNjWyqLS+iOFfmT5cSt26G1ZeUGbAesuZ2PXDJijud5zIh1ZkrX1oPTZ9GX2hi98xG3rv1gR5zXWXfsvmO9xg+3HB7XcjhoazPn4SU2e4Dy8/EThkZBnKrIFW5/qGnP/8/+IFa9xm311DaOVqDmv7O+6ayIVxgBe4FhUVx3O+rEr3WRxLsd9SWmFb3HjTikXOF5t4O+wQoLLDd4g45pxEUSz2tc4yw+rVOU4WjLw5AbnAlTyICln+k1zuoS8oP/AbVjE0qqVsTfAAAAAElFTkSuQmCC\""
                    },
                    "value": "iVBORw0KGgoAAAANSUhEUgAAADwAAAA8CAMAAAANIilAAAAANlBMVEUAAAApIEIwKEkeFCkbETclHEFMRGJDO1k2LU/7+v9FPVs7MlPw6/7WyfdNR21CO2TT0NvKxNqjSdkcAAAAAXRSTlMAQObYZgAAAjZJREFUSMft1QuymzAMBdBKlixDgLb732zvVdzHgAPJAqKJSbB1JOUzk1/f+MY3vnETpQx3H0KEWfkv+t1nBZBazbyal7x1q55b5QPbCKF7dsmXLNDK+77EDi9ln4Td2xLlrV0f1X9rlRMuGti6xyIPdFVi7e+Z2KXq/AYXkBkOlr5gB0qjuvD5Xhc6pZ2xnjh75ubHOPhMjJt5CrT9ACOHBWKZkU9MtEptm2LjDW7AvTMtddUQwmtcSlrd2g826kIkffW5SznjzBR07r9NLm55oh1n6slKx7RWrcF2bJZSqDuWcsLcLyGobmCPA3Z3A8zOmTpiLRLPDGtT8/0X5o31cBJ0+hrXWCJxTOs0H7Fu+sR1wNQhFQuRGlU6hllyIu4CD5Z42rHyRdrU8rQivfOIWbaC8auWEQc0LkwxG/AkS+CksjPigBGTZFc8frtdda5PeMbzEomtmtuIWZsquj3gmAS1zQEvMYOzb4fOJG1pVh0TI4iHubNjWyqLS+iOFfmT5cSt26G1ZeUGbAesuZ2PXDJijud5zIh1ZkrX1oPTZ9GX2hi98xG3rv1gR5zXWXfsvmO9xg+3HB7XcjhoazPn4SU2e4Dy8/EThkZBnKrIFW5/qGnP/8/+IFa9xm311DaOVqDmv7O+6ayIVxgBe4FhUVx3O+rEr3WRxLsd9SWmFb3HjTikXOF5t4O+wQoLLDd4g45pxEUSz2tc4yw+rVOU4WjLw5AbnAlTyICln+k1zuoS8oP/AbVjE0qqVsTfAAAAAElFTkSuQmCC"
                  },
                  "visibility": "public"
                },
                {
                  "constant": true,
                  "functionSelector": "45aad66d",
                  "id": 104,
                  "mutability": "constant",
                  "name": "pirate",
                  "nameLocation": "17863:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 289,
                  "src": "17840:730:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 102,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "17840:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": {
                    "hexValue": "6956424f5277304b47676f414141414e5355684555674141414477414141413842414d414141444930735242414141414a46424d56455541414142474f433466484230384f446f794b434862334e3969556b59724b43713175635433392f65696f614a54546c4745442b51394141414141585253546c4d41514f62595a674141415a4e4a524546554f4d767430374675776a41514275444962334257354e6b4f4163727349564b5a6a4b772b414a4b6c7247546f413843515056496c586942536d646b59752f626c65676e344f45506843666739495054357a6d6373736c6465655a726947597043365363625a6730306e2f6f6847775734346635457a4e67636a415451747963652b68434b4d797344546172547674352f68594246426f596c45313645476e76765135654a426c61346c4f6246665433304c554b746853707a6b357362377362503663446d6a6866312b5a744168704742383353645263354d695a69773643506a614b35454c50466d67766737377455444f32516e73356d4f58464d725a4f6d6b7835575a356e2f324f514249415a77704a59785235696d7a483162306e423361426c6c703475374b416a6d2f3454566e42654241736c655a4a714e2f414d434d38794a306a4c46316e7242494744414f6b4e6d5446516e50414d4d346b41742f3459612f57646a727941357951307a6c73566670343947732f4d44594f79716d376f774856536e6a3258773232456a4f622f737549336144792f732f474d336d457862326143747967624d6c6f30314f523274622f5944462b386c615779485431654b39597a48796c72464c32413468466e3777686e6f6637396d44544c6d367a72597169744c48713037734c63396275793373723737776d4a5a34337535737462504c48385956735768626447755857503448637064732b7532686f6a6f41414141415355564f524b35435949493d",
                    "id": 103,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "17872:698:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_4ef449e0c431f1199e3e277636f54c224a50b79ec0bafaad221d293a01c5c773",
                      "typeString": "literal_string \"iVBORw0KGgoAAAANSUhEUgAAADwAAAA8BAMAAADI0sRBAAAAJFBMVEUAAABGOC4fHB08ODoyKCHb3N9iUkYrKCq1ucT39/eioaJTTlGED+Q9AAAAAXRSTlMAQObYZgAAAZNJREFUOMvt07FuwjAQBuDIb3BW5NkOAcrsIVKZjKw+AJKlrGToA8CQPVIlXiBSmdkYu/blegn4OEPhCfg9IPT5zmcssldeeZriGYpC6ScbZg00n/ohGwW44f5EzNgcjATQtyce+hCKMysDTarTvt5/hYBFBoYlE16EGnvvQ5eJBla4lObFfT30LUKthSpzk5sb7sbP6cDmjhf1+ZtAhpGB83SdRc5MiZiw6CPjaK5ELPFmgvg77tUDO2Qns5mOXFMrZOmkx5WZ5n/2OQBIAZwpJYxR5imzH1b0nB3aBllp4u7KAjm/4TVnBeBAsleZJqN/AMCM8yJ0jLF1nrBIGDAOkNmTFQnPAMM4kAt/4Ya/WdjryA5yQ0zlsVfp49Gs/MDYOyqm7owHVSnj2Xw22EjOb/suI3aDy/s/GM3mExb2aCtygbMlo01OR2tb/YDF+8laWyHT1eK9YzHylrFL2A4hFn7whnof79mDTLm6zrYqitLHq07sLc9buy3sr77wmJZ43u5stbPLH8YVsWhbdGuXWP4Hcpds+u2hojoAAAAASUVORK5CYII=\""
                    },
                    "value": "iVBORw0KGgoAAAANSUhEUgAAADwAAAA8BAMAAADI0sRBAAAAJFBMVEUAAABGOC4fHB08ODoyKCHb3N9iUkYrKCq1ucT39/eioaJTTlGED+Q9AAAAAXRSTlMAQObYZgAAAZNJREFUOMvt07FuwjAQBuDIb3BW5NkOAcrsIVKZjKw+AJKlrGToA8CQPVIlXiBSmdkYu/blegn4OEPhCfg9IPT5zmcssldeeZriGYpC6ScbZg00n/ohGwW44f5EzNgcjATQtyce+hCKMysDTarTvt5/hYBFBoYlE16EGnvvQ5eJBla4lObFfT30LUKthSpzk5sb7sbP6cDmjhf1+ZtAhpGB83SdRc5MiZiw6CPjaK5ELPFmgvg77tUDO2Qns5mOXFMrZOmkx5WZ5n/2OQBIAZwpJYxR5imzH1b0nB3aBllp4u7KAjm/4TVnBeBAsleZJqN/AMCM8yJ0jLF1nrBIGDAOkNmTFQnPAMM4kAt/4Ya/WdjryA5yQ0zlsVfp49Gs/MDYOyqm7owHVSnj2Xw22EjOb/suI3aDy/s/GM3mExb2aCtygbMlo01OR2tb/YDF+8laWyHT1eK9YzHylrFL2A4hFn7whnof79mDTLm6zrYqitLHq07sLc9buy3sr77wmJZ43u5stbPLH8YVsWhbdGuXWP4Hcpds+u2hojoAAAAASUVORK5CYII="
                  },
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 111,
                    "nodeType": "Block",
                    "src": "18635:37:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 109,
                          "name": "skin_tone_1",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 47,
                          "src": "18653:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        "functionReturnParameters": 108,
                        "id": 110,
                        "nodeType": "Return",
                        "src": "18646:18:0"
                      }
                    ]
                  },
                  "functionSelector": "9b45d56d",
                  "id": 112,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getHand1",
                  "nameLocation": "18588:8:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 105,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "18596:2:0"
                  },
                  "returnParameters": {
                    "id": 108,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 107,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 112,
                        "src": "18620:13:0",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 106,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "18620:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "18619:15:0"
                  },
                  "scope": 289,
                  "src": "18579:93:0",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 119,
                    "nodeType": "Block",
                    "src": "18736:37:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 117,
                          "name": "skin_tone_2",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 44,
                          "src": "18754:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        "functionReturnParameters": 116,
                        "id": 118,
                        "nodeType": "Return",
                        "src": "18747:18:0"
                      }
                    ]
                  },
                  "functionSelector": "8a99b7fb",
                  "id": 120,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getHand2",
                  "nameLocation": "18689:8:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 113,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "18697:2:0"
                  },
                  "returnParameters": {
                    "id": 116,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 115,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 120,
                        "src": "18721:13:0",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 114,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "18721:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "18720:15:0"
                  },
                  "scope": 289,
                  "src": "18680:93:0",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 127,
                    "nodeType": "Block",
                    "src": "18837:37:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 125,
                          "name": "skin_tone_3",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 41,
                          "src": "18855:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        "functionReturnParameters": 124,
                        "id": 126,
                        "nodeType": "Return",
                        "src": "18848:18:0"
                      }
                    ]
                  },
                  "functionSelector": "888a0b77",
                  "id": 128,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getHand3",
                  "nameLocation": "18790:8:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 121,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "18798:2:0"
                  },
                  "returnParameters": {
                    "id": 124,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 123,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 128,
                        "src": "18822:13:0",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 122,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "18822:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "18821:15:0"
                  },
                  "scope": 289,
                  "src": "18781:93:0",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 135,
                    "nodeType": "Block",
                    "src": "18938:37:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 133,
                          "name": "skin_tone_4",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 38,
                          "src": "18956:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        "functionReturnParameters": 132,
                        "id": 134,
                        "nodeType": "Return",
                        "src": "18949:18:0"
                      }
                    ]
                  },
                  "functionSelector": "06756729",
                  "id": 136,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getHand4",
                  "nameLocation": "18891:8:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 129,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "18899:2:0"
                  },
                  "returnParameters": {
                    "id": 132,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 131,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 136,
                        "src": "18923:13:0",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 130,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "18923:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "18922:15:0"
                  },
                  "scope": 289,
                  "src": "18882:93:0",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 143,
                    "nodeType": "Block",
                    "src": "19043:36:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 141,
                          "name": "bubble_gum",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 50,
                          "src": "19061:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        "functionReturnParameters": 140,
                        "id": 142,
                        "nodeType": "Return",
                        "src": "19054:17:0"
                      }
                    ]
                  },
                  "functionSelector": "e7d01d7a",
                  "id": 144,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getBubbleGum",
                  "nameLocation": "18992:12:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 137,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "19004:2:0"
                  },
                  "returnParameters": {
                    "id": 140,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 139,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 144,
                        "src": "19028:13:0",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 138,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "19028:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "19027:15:0"
                  },
                  "scope": 289,
                  "src": "18983:96:0",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 151,
                    "nodeType": "Block",
                    "src": "19148:37:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 149,
                          "name": "green_slime",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 53,
                          "src": "19166:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        "functionReturnParameters": 148,
                        "id": 150,
                        "nodeType": "Return",
                        "src": "19159:18:0"
                      }
                    ]
                  },
                  "functionSelector": "557dd064",
                  "id": 152,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getGreenSlime",
                  "nameLocation": "19096:13:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 145,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "19109:2:0"
                  },
                  "returnParameters": {
                    "id": 148,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 147,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 152,
                        "src": "19133:13:0",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 146,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "19133:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "19132:15:0"
                  },
                  "scope": 289,
                  "src": "19087:98:0",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 159,
                    "nodeType": "Block",
                    "src": "19253:36:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 157,
                          "name": "blue_slime",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 56,
                          "src": "19271:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        "functionReturnParameters": 156,
                        "id": 158,
                        "nodeType": "Return",
                        "src": "19264:17:0"
                      }
                    ]
                  },
                  "functionSelector": "020a41be",
                  "id": 160,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getBlueSlime",
                  "nameLocation": "19202:12:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 153,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "19214:2:0"
                  },
                  "returnParameters": {
                    "id": 156,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 155,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 160,
                        "src": "19238:13:0",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 154,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "19238:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "19237:15:0"
                  },
                  "scope": 289,
                  "src": "19193:96:0",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 167,
                    "nodeType": "Block",
                    "src": "19356:34:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 165,
                          "name": "vitiligo",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 59,
                          "src": "19374:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        "functionReturnParameters": 164,
                        "id": 166,
                        "nodeType": "Return",
                        "src": "19367:15:0"
                      }
                    ]
                  },
                  "functionSelector": "c305b2b2",
                  "id": 168,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getVitiligo",
                  "nameLocation": "19306:11:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 161,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "19317:2:0"
                  },
                  "returnParameters": {
                    "id": 164,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 163,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 168,
                        "src": "19341:13:0",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 162,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "19341:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "19340:15:0"
                  },
                  "scope": 289,
                  "src": "19297:93:0",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 175,
                    "nodeType": "Block",
                    "src": "19460:38:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 173,
                          "name": "green_goblin",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 62,
                          "src": "19478:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        "functionReturnParameters": 172,
                        "id": 174,
                        "nodeType": "Return",
                        "src": "19471:19:0"
                      }
                    ]
                  },
                  "functionSelector": "34739b2a",
                  "id": 176,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getGreenGoblin",
                  "nameLocation": "19407:14:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 169,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "19421:2:0"
                  },
                  "returnParameters": {
                    "id": 172,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 171,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 176,
                        "src": "19445:13:0",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 170,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "19445:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "19444:15:0"
                  },
                  "scope": 289,
                  "src": "19398:100:0",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 183,
                    "nodeType": "Block",
                    "src": "19566:36:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 181,
                          "name": "red_goblin",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 65,
                          "src": "19584:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        "functionReturnParameters": 180,
                        "id": 182,
                        "nodeType": "Return",
                        "src": "19577:17:0"
                      }
                    ]
                  },
                  "functionSelector": "1e7b565b",
                  "id": 184,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getRedGoblin",
                  "nameLocation": "19515:12:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 177,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "19527:2:0"
                  },
                  "returnParameters": {
                    "id": 180,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 179,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 184,
                        "src": "19551:13:0",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 178,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "19551:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "19550:15:0"
                  },
                  "scope": 289,
                  "src": "19506:96:0",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 191,
                    "nodeType": "Block",
                    "src": "19673:39:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 189,
                          "name": "yellow_goblin",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 68,
                          "src": "19691:13:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        "functionReturnParameters": 188,
                        "id": 190,
                        "nodeType": "Return",
                        "src": "19684:20:0"
                      }
                    ]
                  },
                  "functionSelector": "8e4f449b",
                  "id": 192,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getYellowGoblin",
                  "nameLocation": "19619:15:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 185,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "19634:2:0"
                  },
                  "returnParameters": {
                    "id": 188,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 187,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 192,
                        "src": "19658:13:0",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 186,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "19658:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "19657:15:0"
                  },
                  "scope": 289,
                  "src": "19610:102:0",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 199,
                    "nodeType": "Block",
                    "src": "19776:31:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 197,
                          "name": "sully",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 71,
                          "src": "19794:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        "functionReturnParameters": 196,
                        "id": 198,
                        "nodeType": "Return",
                        "src": "19787:12:0"
                      }
                    ]
                  },
                  "functionSelector": "2817e5be",
                  "id": 200,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getSully",
                  "nameLocation": "19729:8:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 193,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "19737:2:0"
                  },
                  "returnParameters": {
                    "id": 196,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 195,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 200,
                        "src": "19761:13:0",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 194,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "19761:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "19760:15:0"
                  },
                  "scope": 289,
                  "src": "19720:87:0",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 207,
                    "nodeType": "Block",
                    "src": "19871:31:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 205,
                          "name": "tiger",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 74,
                          "src": "19889:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        "functionReturnParameters": 204,
                        "id": 206,
                        "nodeType": "Return",
                        "src": "19882:12:0"
                      }
                    ]
                  },
                  "functionSelector": "ecde9067",
                  "id": 208,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getTiger",
                  "nameLocation": "19824:8:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 201,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "19832:2:0"
                  },
                  "returnParameters": {
                    "id": 204,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 203,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 208,
                        "src": "19856:13:0",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 202,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "19856:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "19855:15:0"
                  },
                  "scope": 289,
                  "src": "19815:87:0",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 215,
                    "nodeType": "Block",
                    "src": "19970:36:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 213,
                          "name": "snow_tiger",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 77,
                          "src": "19988:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        "functionReturnParameters": 212,
                        "id": 214,
                        "nodeType": "Return",
                        "src": "19981:17:0"
                      }
                    ]
                  },
                  "functionSelector": "32e8e544",
                  "id": 216,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getSnowTiger",
                  "nameLocation": "19919:12:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 209,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "19931:2:0"
                  },
                  "returnParameters": {
                    "id": 212,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 211,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 216,
                        "src": "19955:13:0",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 210,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "19955:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "19954:15:0"
                  },
                  "scope": 289,
                  "src": "19910:96:0",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 223,
                    "nodeType": "Block",
                    "src": "20073:35:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 221,
                          "name": "skeleton",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 80,
                          "src": "20091:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        "functionReturnParameters": 220,
                        "id": 222,
                        "nodeType": "Return",
                        "src": "20084:15:0"
                      }
                    ]
                  },
                  "functionSelector": "080576e1",
                  "id": 224,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getSkeleton",
                  "nameLocation": "20023:11:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 217,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "20034:2:0"
                  },
                  "returnParameters": {
                    "id": 220,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 219,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 224,
                        "src": "20058:13:0",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 218,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "20058:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "20057:15:0"
                  },
                  "scope": 289,
                  "src": "20014:94:0",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 231,
                    "nodeType": "Block",
                    "src": "20174:34:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 229,
                          "name": "plastic",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 83,
                          "src": "20192:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        "functionReturnParameters": 228,
                        "id": 230,
                        "nodeType": "Return",
                        "src": "20185:14:0"
                      }
                    ]
                  },
                  "functionSelector": "240cf269",
                  "id": 232,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getPlastic",
                  "nameLocation": "20125:10:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 225,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "20135:2:0"
                  },
                  "returnParameters": {
                    "id": 228,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 227,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 232,
                        "src": "20159:13:0",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 226,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "20159:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "20158:15:0"
                  },
                  "scope": 289,
                  "src": "20116:92:0",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 239,
                    "nodeType": "Block",
                    "src": "20273:33:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 237,
                          "name": "zombie",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 86,
                          "src": "20291:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        "functionReturnParameters": 236,
                        "id": 238,
                        "nodeType": "Return",
                        "src": "20284:13:0"
                      }
                    ]
                  },
                  "functionSelector": "a592a451",
                  "id": 240,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getZombie",
                  "nameLocation": "20225:9:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 233,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "20234:2:0"
                  },
                  "returnParameters": {
                    "id": 236,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 235,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 240,
                        "src": "20258:13:0",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 234,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "20258:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "20257:15:0"
                  },
                  "scope": 289,
                  "src": "20216:90:0",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 247,
                    "nodeType": "Block",
                    "src": "20372:34:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 245,
                          "name": "gorilla",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 89,
                          "src": "20390:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        "functionReturnParameters": 244,
                        "id": 246,
                        "nodeType": "Return",
                        "src": "20383:14:0"
                      }
                    ]
                  },
                  "functionSelector": "99726ec2",
                  "id": 248,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getGorilla",
                  "nameLocation": "20323:10:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 241,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "20333:2:0"
                  },
                  "returnParameters": {
                    "id": 244,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 243,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 248,
                        "src": "20357:13:0",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 242,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "20357:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "20356:15:0"
                  },
                  "scope": 289,
                  "src": "20314:92:0",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 255,
                    "nodeType": "Block",
                    "src": "20469:31:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 253,
                          "name": "yeti",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 92,
                          "src": "20487:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        "functionReturnParameters": 252,
                        "id": 254,
                        "nodeType": "Return",
                        "src": "20480:11:0"
                      }
                    ]
                  },
                  "functionSelector": "6941464f",
                  "id": 256,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getYeti",
                  "nameLocation": "20423:7:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 249,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "20430:2:0"
                  },
                  "returnParameters": {
                    "id": 252,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 251,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 256,
                        "src": "20454:13:0",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 250,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "20454:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "20453:15:0"
                  },
                  "scope": 289,
                  "src": "20414:86:0",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 263,
                    "nodeType": "Block",
                    "src": "20566:34:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 261,
                          "name": "squatch",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 95,
                          "src": "20584:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        "functionReturnParameters": 260,
                        "id": 262,
                        "nodeType": "Return",
                        "src": "20577:14:0"
                      }
                    ]
                  },
                  "functionSelector": "9e15f495",
                  "id": 264,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getSquatch",
                  "nameLocation": "20517:10:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 257,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "20527:2:0"
                  },
                  "returnParameters": {
                    "id": 260,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 259,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 264,
                        "src": "20551:13:0",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 258,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "20551:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "20550:15:0"
                  },
                  "scope": 289,
                  "src": "20508:92:0",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 271,
                    "nodeType": "Block",
                    "src": "20664:32:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 269,
                          "name": "steve",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 98,
                          "src": "20682:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        "functionReturnParameters": 268,
                        "id": 270,
                        "nodeType": "Return",
                        "src": "20675:12:0"
                      }
                    ]
                  },
                  "functionSelector": "fbe154bb",
                  "id": 272,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getSteve",
                  "nameLocation": "20617:8:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 265,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "20625:2:0"
                  },
                  "returnParameters": {
                    "id": 268,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 267,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 272,
                        "src": "20649:13:0",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 266,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "20649:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "20648:15:0"
                  },
                  "scope": 289,
                  "src": "20608:88:0",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 279,
                    "nodeType": "Block",
                    "src": "20761:33:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 277,
                          "name": "cosmic",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 101,
                          "src": "20779:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        "functionReturnParameters": 276,
                        "id": 278,
                        "nodeType": "Return",
                        "src": "20772:13:0"
                      }
                    ]
                  },
                  "functionSelector": "e6595f42",
                  "id": 280,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getCosmic",
                  "nameLocation": "20713:9:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 273,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "20722:2:0"
                  },
                  "returnParameters": {
                    "id": 276,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 275,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 280,
                        "src": "20746:13:0",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 274,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "20746:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "20745:15:0"
                  },
                  "scope": 289,
                  "src": "20704:90:0",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 287,
                    "nodeType": "Block",
                    "src": "20859:33:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 285,
                          "name": "pirate",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 104,
                          "src": "20877:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        "functionReturnParameters": 284,
                        "id": 286,
                        "nodeType": "Return",
                        "src": "20870:13:0"
                      }
                    ]
                  },
                  "functionSelector": "b3f22af2",
                  "id": 288,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getPirate",
                  "nameLocation": "20811:9:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 281,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "20820:2:0"
                  },
                  "returnParameters": {
                    "id": 284,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 283,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 288,
                        "src": "20844:13:0",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 282,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "20844:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "20843:15:0"
                  },
                  "scope": 289,
                  "src": "20802:90:0",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "public"
                }
              ],
              "scope": 302,
              "src": "2032:18863:0",
              "usedErrors": []
            },
            {
              "abstract": false,
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "contract",
              "fullyImplemented": true,
              "id": 301,
              "linearizedBaseContracts": [
                301
              ],
              "name": "Potato",
              "nameLocation": "20908:6:0",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": true,
                  "functionSelector": "f8dcc9a9",
                  "id": 292,
                  "mutability": "constant",
                  "name": "potato",
                  "nameLocation": "20945:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 301,
                  "src": "20922:622:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 290,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "20922:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": {
                    "hexValue": "6956424f5277304b47676f414141414e5355684555674141414473414141413742414d4141414133432b2b41414141414a46424d564555414141444e49536354457850397531582f624142434678502f2f2f2f326644762f7741444d4c7a76656f56433649435741774c68384141414141585253546c4d41514f62595a67414141554e4a524546554f4d76747a7a314f77304151426543774a32425765344464326677426e616577524c65524339644775514249506f426470415a52704536586c6e53636b72636b564a354e545a476e6b5a745062335938752b556376717247586b4e766144627a4a5137576b446532344e6e49596f703342566a513247445154395a6769664b7578775358504c347147324a795a484741656c612b75306d45315172444b4c673255664a475a556655374d48327a6d734d5941354e737471663465723331536a444f6846346d754234724749393444693176656e6a386c587151496e3839473161396d39394830397a6a514f642b6646376142714633615574517a746c513539753255664d3839652b4954766874746d7756437853723156756f2b5363437677686a45533063626e4331526270564836694e6936324f624765547a6d51753342587a366e457a4175567a533933782b4f687178494f6e7a4439385a446f5875464e587635776546463235386474745758774b755464326e595771654b4173737032464a47645773376269586369724a5a7a48633551316a54586b5a4b696e7032684a5766674c663838507a4a6754426531544373654141414141456c46546b5375516d4343",
                    "id": 291,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "20954:590:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_6786b44a8edf1a058e0d93e2184df9a80c2b78d919aa56775bd0082f7663ba0a",
                      "typeString": "literal_string \"iVBORw0KGgoAAAANSUhEUgAAADsAAAA7BAMAAAA3C++AAAAAJFBMVEUAAADNIScTExP9u1X/bABCFxP////2fDv/wADMLzveoVC6ICWAwLh8AAAAAXRSTlMAQObYZgAAAUNJREFUOMvtzz1Ow0AQBeCwJ2BWe4Dd2fwBnaewRLeRC9dGuQBIPoBdpAZRpE6XlnSckrckVJ5NTZGnkZtPb3Y8u+UcvqrGXkNvaDbzJQ7WkDe24NnIYop3BVjQ2GDQT9ZgifKuxwSXPL4qG2JyZHGAela+u0mE1QrDKLg2UfJGZUfU7MH2zmsMYA5Nstqf4er31SjDOhF4muB4rGI94Di1venj8lXqQIn89G1a9m99H09zjQOd+fF7aBqF3aUtQztlQ59u2UfM89e+ITvhttmwVCxSr1Vuo+ScCvwhjES0cbnC1RbpVH6iNi62ObGeTzmQu3BXz6nEzAuVzS93x+OhqxIOnzD98ZDoXuFNXv5weFF258dttWXwKuTd2nYWqeKAssp2FJGdWs7biXcirJZzHc5Q1jTXkZKinp2hJWfgLf88PzJgTBe1TCseAAAAAElFTkSuQmCC\""
                    },
                    "value": "iVBORw0KGgoAAAANSUhEUgAAADsAAAA7BAMAAAA3C++AAAAAJFBMVEUAAADNIScTExP9u1X/bABCFxP////2fDv/wADMLzveoVC6ICWAwLh8AAAAAXRSTlMAQObYZgAAAUNJREFUOMvtzz1Ow0AQBeCwJ2BWe4Dd2fwBnaewRLeRC9dGuQBIPoBdpAZRpE6XlnSckrckVJ5NTZGnkZtPb3Y8u+UcvqrGXkNvaDbzJQ7WkDe24NnIYop3BVjQ2GDQT9ZgifKuxwSXPL4qG2JyZHGAela+u0mE1QrDKLg2UfJGZUfU7MH2zmsMYA5Nstqf4er31SjDOhF4muB4rGI94Di1venj8lXqQIn89G1a9m99H09zjQOd+fF7aBqF3aUtQztlQ59u2UfM89e+ITvhttmwVCxSr1Vuo+ScCvwhjES0cbnC1RbpVH6iNi62ObGeTzmQu3BXz6nEzAuVzS93x+OhqxIOnzD98ZDoXuFNXv5weFF258dttWXwKuTd2nYWqeKAssp2FJGdWs7biXcirJZzHc5Q1jTXkZKinp2hJWfgLf88PzJgTBe1TCseAAAAAElFTkSuQmCC"
                  },
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 299,
                    "nodeType": "Block",
                    "src": "21610:32:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 297,
                          "name": "potato",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 292,
                          "src": "21628:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        "functionReturnParameters": 296,
                        "id": 298,
                        "nodeType": "Return",
                        "src": "21621:13:0"
                      }
                    ]
                  },
                  "functionSelector": "6e329aa9",
                  "id": 300,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getPotato",
                  "nameLocation": "21562:9:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 293,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "21571:2:0"
                  },
                  "returnParameters": {
                    "id": 296,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 295,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 300,
                        "src": "21595:13:0",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 294,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "21595:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "21594:15:0"
                  },
                  "scope": 301,
                  "src": "21553:89:0",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "public"
                }
              ],
              "scope": 302,
              "src": "20899:746:0",
              "usedErrors": []
            }
          ],
          "src": "39:21606:0"
        },
        "id": 0
      },
      "@Allcontracts/InventoryManager.sol": {
        "ast": {
          "absolutePath": "@Allcontracts/InventoryManager.sol",
          "exportedSymbols": {
            "Backgrounds": [
              35
            ],
            "Base64": [
              1697
            ],
            "Hands": [
              289
            ],
            "InventoryManager": [
              1648
            ],
            "Potato": [
              301
            ]
          },
          "id": 1698,
          "license": "Unlicense",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "absolutePath": "@Allcontracts/Inventory.sol",
              "file": "./Inventory.sol",
              "id": 303,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1698,
              "sourceUnit": 302,
              "src": "39:25:1",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "id": 304,
              "literals": [
                "solidity",
                "0.8",
                ".7"
              ],
              "nodeType": "PragmaDirective",
              "src": "66:22:1"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "contract",
              "fullyImplemented": true,
              "id": 1648,
              "linearizedBaseContracts": [
                1648
              ],
              "name": "InventoryManager",
              "nameLocation": "101:16:1",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": false,
                  "id": 306,
                  "mutability": "mutable",
                  "name": "impl_",
                  "nameLocation": "133:5:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1648,
                  "src": "125:13:1",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 305,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "125:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "functionSelector": "481c6a75",
                  "id": 308,
                  "mutability": "mutable",
                  "name": "manager",
                  "nameLocation": "160:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1648,
                  "src": "145:22:1",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 307,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "145:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "canonicalName": "InventoryManager.Part",
                  "id": 312,
                  "members": [
                    {
                      "id": 309,
                      "name": "background",
                      "nameLocation": "197:10:1",
                      "nodeType": "EnumValue",
                      "src": "197:10:1"
                    },
                    {
                      "id": 310,
                      "name": "hand_type",
                      "nameLocation": "218:9:1",
                      "nodeType": "EnumValue",
                      "src": "218:9:1"
                    },
                    {
                      "id": 311,
                      "name": "potato",
                      "nameLocation": "238:6:1",
                      "nodeType": "EnumValue",
                      "src": "238:6:1"
                    }
                  ],
                  "name": "Part",
                  "nameLocation": "181:4:1",
                  "nodeType": "EnumDefinition",
                  "src": "176:75:1"
                },
                {
                  "constant": false,
                  "functionSelector": "c3495567",
                  "id": 316,
                  "mutability": "mutable",
                  "name": "backgrounds",
                  "nameLocation": "292:11:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1648,
                  "src": "259:44:1",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_uint8_$_t_address_$",
                    "typeString": "mapping(uint8 => address)"
                  },
                  "typeName": {
                    "id": 315,
                    "keyType": {
                      "id": 313,
                      "name": "uint8",
                      "nodeType": "ElementaryTypeName",
                      "src": "267:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "259:25:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_uint8_$_t_address_$",
                      "typeString": "mapping(uint8 => address)"
                    },
                    "valueType": {
                      "id": 314,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "276:7:1",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "95fb756a",
                  "id": 320,
                  "mutability": "mutable",
                  "name": "hand_types",
                  "nameLocation": "343:10:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1648,
                  "src": "310:43:1",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_uint8_$_t_address_$",
                    "typeString": "mapping(uint8 => address)"
                  },
                  "typeName": {
                    "id": 319,
                    "keyType": {
                      "id": 317,
                      "name": "uint8",
                      "nodeType": "ElementaryTypeName",
                      "src": "318:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "310:25:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_uint8_$_t_address_$",
                      "typeString": "mapping(uint8 => address)"
                    },
                    "valueType": {
                      "id": 318,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "327:7:1",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "52b76522",
                  "id": 324,
                  "mutability": "mutable",
                  "name": "potatoes",
                  "nameLocation": "393:8:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1648,
                  "src": "360:41:1",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_uint8_$_t_address_$",
                    "typeString": "mapping(uint8 => address)"
                  },
                  "typeName": {
                    "id": 323,
                    "keyType": {
                      "id": 321,
                      "name": "uint8",
                      "nodeType": "ElementaryTypeName",
                      "src": "368:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "360:25:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_uint8_$_t_address_$",
                      "typeString": "mapping(uint8 => address)"
                    },
                    "valueType": {
                      "id": 322,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "377:7:1",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": true,
                  "functionSelector": "0d7163c6",
                  "id": 327,
                  "mutability": "constant",
                  "name": "header",
                  "nameLocation": "433:6:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1648,
                  "src": "410:203:1",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 325,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "410:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": {
                    "hexValue": "3c7376672069643d226261636b6275726e6572222077696474683d223130302522206865696768743d2231303025222076657273696f6e3d22312e31222076696577426f783d223020302036302036302220786d6c6e733d22687474703a2f2f7777772e77332e6f72672f323030302f7376672220786d6c6e733a786c696e6b3d22687474703a2f2f7777772e77332e6f72672f313939392f786c696e6b223e",
                    "id": 326,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "451:162:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_62121a15499047d084b47e0c4c092becaea4a0073ee263ff563210c151bc5632",
                      "typeString": "literal_string \"<svg id=\"backburner\" width=\"100%\" height=\"100%\" version=\"1.1\" viewBox=\"0 0 60 60\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\""
                    },
                    "value": "<svg id=\"backburner\" width=\"100%\" height=\"100%\" version=\"1.1\" viewBox=\"0 0 60 60\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">"
                  },
                  "visibility": "public"
                },
                {
                  "constant": true,
                  "functionSelector": "3ce30185",
                  "id": 330,
                  "mutability": "constant",
                  "name": "footer",
                  "nameLocation": "643:6:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1648,
                  "src": "620:278:1",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 328,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "620:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": {
                    "hexValue": "3c7374796c653e236261636b6275726e65727b73686170652d72656e646572696e673a20637269737065646765733b20696d6167652d72656e646572696e673a202d7765626b69742d63726973702d65646765733b20696d6167652d72656e646572696e673a202d6d6f7a2d63726973702d65646765733b20696d6167652d72656e646572696e673a2063726973702d65646765733b20696d6167652d72656e646572696e673a20706978656c617465643b202d6d732d696e746572706f6c6174696f6e2d6d6f64653a206e6561726573742d6e65696768626f723b7d3c2f7374796c653e3c2f7376673e",
                    "id": 329,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "661:237:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_d8bb8f0559e01cca07ae7fd9501388cca7ae46a5744617cb61ea8f5c2256fc61",
                      "typeString": "literal_string \"<style>#backburner{shape-rendering: crispedges; image-rendering: -webkit-crisp-edges; image-rendering: -moz-crisp-edges; image-rendering: crisp-edges; image-rendering: pixelated; -ms-interpolation-mode: nearest-neighbor;}</style></svg>\""
                    },
                    "value": "<style>#backburner{shape-rendering: crispedges; image-rendering: -webkit-crisp-edges; image-rendering: -moz-crisp-edges; image-rendering: crisp-edges; image-rendering: pixelated; -ms-interpolation-mode: nearest-neighbor;}</style></svg>"
                  },
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 370,
                    "nodeType": "Block",
                    "src": "1071:348:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 347,
                                  "name": "header",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 327,
                                  "src": "1166:6:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                },
                                {
                                  "arguments": [
                                    {
                                      "expression": {
                                        "id": 349,
                                        "name": "Part",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 312,
                                        "src": "1199:4:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_enum$_Part_$312_$",
                                          "typeString": "type(enum InventoryManager.Part)"
                                        }
                                      },
                                      "id": 350,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "memberName": "background",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 309,
                                      "src": "1199:15:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_enum$_Part_$312",
                                        "typeString": "enum InventoryManager.Part"
                                      }
                                    },
                                    {
                                      "id": 351,
                                      "name": "background_",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 332,
                                      "src": "1216:11:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint8",
                                        "typeString": "uint8"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_enum$_Part_$312",
                                        "typeString": "enum InventoryManager.Part"
                                      },
                                      {
                                        "typeIdentifier": "t_uint8",
                                        "typeString": "uint8"
                                      }
                                    ],
                                    "id": 348,
                                    "name": "get",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1084,
                                    "src": "1195:3:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_view$_t_enum$_Part_$312_$_t_uint8_$returns$_t_string_memory_ptr_$",
                                      "typeString": "function (enum InventoryManager.Part,uint8) view returns (string memory)"
                                    }
                                  },
                                  "id": 352,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "1195:33:1",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                },
                                {
                                  "arguments": [
                                    {
                                      "expression": {
                                        "id": 354,
                                        "name": "Part",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 312,
                                        "src": "1255:4:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_enum$_Part_$312_$",
                                          "typeString": "type(enum InventoryManager.Part)"
                                        }
                                      },
                                      "id": 355,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "memberName": "hand_type",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 310,
                                      "src": "1255:14:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_enum$_Part_$312",
                                        "typeString": "enum InventoryManager.Part"
                                      }
                                    },
                                    {
                                      "id": 356,
                                      "name": "hand_type_",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 334,
                                      "src": "1271:10:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint8",
                                        "typeString": "uint8"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_enum$_Part_$312",
                                        "typeString": "enum InventoryManager.Part"
                                      },
                                      {
                                        "typeIdentifier": "t_uint8",
                                        "typeString": "uint8"
                                      }
                                    ],
                                    "id": 353,
                                    "name": "get",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1084,
                                    "src": "1251:3:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_view$_t_enum$_Part_$312_$_t_uint8_$returns$_t_string_memory_ptr_$",
                                      "typeString": "function (enum InventoryManager.Part,uint8) view returns (string memory)"
                                    }
                                  },
                                  "id": 357,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "1251:31:1",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                },
                                {
                                  "condition": {
                                    "id": 358,
                                    "name": "hasPotato_",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 336,
                                    "src": "1305:10:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "falseExpression": {
                                    "hexValue": "",
                                    "id": 364,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "1346:2:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                      "typeString": "literal_string \"\""
                                    },
                                    "value": ""
                                  },
                                  "id": 365,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "Conditional",
                                  "src": "1305:43:1",
                                  "trueExpression": {
                                    "arguments": [
                                      {
                                        "expression": {
                                          "id": 360,
                                          "name": "Part",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 312,
                                          "src": "1322:4:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_enum$_Part_$312_$",
                                            "typeString": "type(enum InventoryManager.Part)"
                                          }
                                        },
                                        "id": 361,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "memberName": "potato",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 311,
                                        "src": "1322:11:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_enum$_Part_$312",
                                          "typeString": "enum InventoryManager.Part"
                                        }
                                      },
                                      {
                                        "id": 362,
                                        "name": "potato_",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 338,
                                        "src": "1335:7:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint8",
                                          "typeString": "uint8"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_enum$_Part_$312",
                                          "typeString": "enum InventoryManager.Part"
                                        },
                                        {
                                          "typeIdentifier": "t_uint8",
                                          "typeString": "uint8"
                                        }
                                      ],
                                      "id": 359,
                                      "name": "get",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1084,
                                      "src": "1318:3:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_view$_t_enum$_Part_$312_$_t_uint8_$returns$_t_string_memory_ptr_$",
                                        "typeString": "function (enum InventoryManager.Part,uint8) view returns (string memory)"
                                      }
                                    },
                                    "id": 363,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "1318:25:1",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  },
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                },
                                {
                                  "id": 366,
                                  "name": "footer",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 330,
                                  "src": "1371:6:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  },
                                  {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  },
                                  {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  },
                                  {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  },
                                  {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                ],
                                "expression": {
                                  "id": 345,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "1127:3:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 346,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encodePacked",
                                "nodeType": "MemberAccess",
                                "src": "1127:16:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 367,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1127:269:1",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 344,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1102:6:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                              "typeString": "type(string storage pointer)"
                            },
                            "typeName": {
                              "id": 343,
                              "name": "string",
                              "nodeType": "ElementaryTypeName",
                              "src": "1102:6:1",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 368,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1102:309:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        "functionReturnParameters": 342,
                        "id": 369,
                        "nodeType": "Return",
                        "src": "1082:329:1"
                      }
                    ]
                  },
                  "functionSelector": "2544c815",
                  "id": 371,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getSVG",
                  "nameLocation": "916:6:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 339,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 332,
                        "mutability": "mutable",
                        "name": "background_",
                        "nameLocation": "939:11:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 371,
                        "src": "933:17:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 331,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "933:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 334,
                        "mutability": "mutable",
                        "name": "hand_type_",
                        "nameLocation": "967:10:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 371,
                        "src": "961:16:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 333,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "961:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 336,
                        "mutability": "mutable",
                        "name": "hasPotato_",
                        "nameLocation": "993:10:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 371,
                        "src": "988:15:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 335,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "988:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 338,
                        "mutability": "mutable",
                        "name": "potato_",
                        "nameLocation": "1020:7:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 371,
                        "src": "1014:13:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 337,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "1014:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "922:112:1"
                  },
                  "returnParameters": {
                    "id": 342,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 341,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 371,
                        "src": "1056:13:1",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 340,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "1056:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1055:15:1"
                  },
                  "scope": 1648,
                  "src": "907:512:1",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 411,
                    "nodeType": "Block",
                    "src": "1602:348:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 388,
                                  "name": "header",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 327,
                                  "src": "1697:6:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                },
                                {
                                  "arguments": [
                                    {
                                      "expression": {
                                        "id": 390,
                                        "name": "Part",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 312,
                                        "src": "1730:4:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_enum$_Part_$312_$",
                                          "typeString": "type(enum InventoryManager.Part)"
                                        }
                                      },
                                      "id": 391,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "memberName": "background",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 309,
                                      "src": "1730:15:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_enum$_Part_$312",
                                        "typeString": "enum InventoryManager.Part"
                                      }
                                    },
                                    {
                                      "id": 392,
                                      "name": "background_",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 373,
                                      "src": "1747:11:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint8",
                                        "typeString": "uint8"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_enum$_Part_$312",
                                        "typeString": "enum InventoryManager.Part"
                                      },
                                      {
                                        "typeIdentifier": "t_uint8",
                                        "typeString": "uint8"
                                      }
                                    ],
                                    "id": 389,
                                    "name": "get",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1084,
                                    "src": "1726:3:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_view$_t_enum$_Part_$312_$_t_uint8_$returns$_t_string_memory_ptr_$",
                                      "typeString": "function (enum InventoryManager.Part,uint8) view returns (string memory)"
                                    }
                                  },
                                  "id": 393,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "1726:33:1",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                },
                                {
                                  "arguments": [
                                    {
                                      "expression": {
                                        "id": 395,
                                        "name": "Part",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 312,
                                        "src": "1786:4:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_enum$_Part_$312_$",
                                          "typeString": "type(enum InventoryManager.Part)"
                                        }
                                      },
                                      "id": 396,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "memberName": "hand_type",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 310,
                                      "src": "1786:14:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_enum$_Part_$312",
                                        "typeString": "enum InventoryManager.Part"
                                      }
                                    },
                                    {
                                      "id": 397,
                                      "name": "hand_type_",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 375,
                                      "src": "1802:10:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint8",
                                        "typeString": "uint8"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_enum$_Part_$312",
                                        "typeString": "enum InventoryManager.Part"
                                      },
                                      {
                                        "typeIdentifier": "t_uint8",
                                        "typeString": "uint8"
                                      }
                                    ],
                                    "id": 394,
                                    "name": "get",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1084,
                                    "src": "1782:3:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_view$_t_enum$_Part_$312_$_t_uint8_$returns$_t_string_memory_ptr_$",
                                      "typeString": "function (enum InventoryManager.Part,uint8) view returns (string memory)"
                                    }
                                  },
                                  "id": 398,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "1782:31:1",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                },
                                {
                                  "condition": {
                                    "id": 399,
                                    "name": "hasPotato_",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 377,
                                    "src": "1836:10:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "falseExpression": {
                                    "hexValue": "",
                                    "id": 405,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "1877:2:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                      "typeString": "literal_string \"\""
                                    },
                                    "value": ""
                                  },
                                  "id": 406,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "Conditional",
                                  "src": "1836:43:1",
                                  "trueExpression": {
                                    "arguments": [
                                      {
                                        "expression": {
                                          "id": 401,
                                          "name": "Part",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 312,
                                          "src": "1853:4:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_enum$_Part_$312_$",
                                            "typeString": "type(enum InventoryManager.Part)"
                                          }
                                        },
                                        "id": 402,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "memberName": "potato",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 311,
                                        "src": "1853:11:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_enum$_Part_$312",
                                          "typeString": "enum InventoryManager.Part"
                                        }
                                      },
                                      {
                                        "id": 403,
                                        "name": "potato_",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 379,
                                        "src": "1866:7:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint8",
                                          "typeString": "uint8"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_enum$_Part_$312",
                                          "typeString": "enum InventoryManager.Part"
                                        },
                                        {
                                          "typeIdentifier": "t_uint8",
                                          "typeString": "uint8"
                                        }
                                      ],
                                      "id": 400,
                                      "name": "get",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1084,
                                      "src": "1849:3:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_view$_t_enum$_Part_$312_$_t_uint8_$returns$_t_string_memory_ptr_$",
                                        "typeString": "function (enum InventoryManager.Part,uint8) view returns (string memory)"
                                      }
                                    },
                                    "id": 404,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "1849:25:1",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  },
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                },
                                {
                                  "id": 407,
                                  "name": "footer",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 330,
                                  "src": "1902:6:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  },
                                  {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  },
                                  {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  },
                                  {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  },
                                  {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                ],
                                "expression": {
                                  "id": 386,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "1658:3:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 387,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encodePacked",
                                "nodeType": "MemberAccess",
                                "src": "1658:16:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 408,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1658:269:1",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 385,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1633:6:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                              "typeString": "type(string storage pointer)"
                            },
                            "typeName": {
                              "id": 384,
                              "name": "string",
                              "nodeType": "ElementaryTypeName",
                              "src": "1633:6:1",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 409,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1633:309:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        "functionReturnParameters": 383,
                        "id": 410,
                        "nodeType": "Return",
                        "src": "1613:329:1"
                      }
                    ]
                  },
                  "functionSelector": "915bb129",
                  "id": 412,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getSVGInterface",
                  "nameLocation": "1436:15:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 380,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 373,
                        "mutability": "mutable",
                        "name": "background_",
                        "nameLocation": "1468:11:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 412,
                        "src": "1462:17:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 372,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "1462:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 375,
                        "mutability": "mutable",
                        "name": "hand_type_",
                        "nameLocation": "1496:10:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 412,
                        "src": "1490:16:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 374,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "1490:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 377,
                        "mutability": "mutable",
                        "name": "hasPotato_",
                        "nameLocation": "1522:10:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 412,
                        "src": "1517:15:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 376,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "1517:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 379,
                        "mutability": "mutable",
                        "name": "potato_",
                        "nameLocation": "1549:7:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 412,
                        "src": "1543:13:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 378,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "1543:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1451:112:1"
                  },
                  "returnParameters": {
                    "id": 383,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 382,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 412,
                        "src": "1587:13:1",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 381,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "1587:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1586:15:1"
                  },
                  "scope": 1648,
                  "src": "1427:523:1",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 420,
                    "nodeType": "Block",
                    "src": "1972:39:1",
                    "statements": [
                      {
                        "expression": {
                          "id": 418,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 415,
                            "name": "manager",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 308,
                            "src": "1983:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 416,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "1993:3:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 417,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "1993:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "1983:20:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 419,
                        "nodeType": "ExpressionStatement",
                        "src": "1983:20:1"
                      }
                    ]
                  },
                  "id": 421,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 413,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1969:2:1"
                  },
                  "returnParameters": {
                    "id": 414,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1972:0:1"
                  },
                  "scope": 1648,
                  "src": "1958:53:1",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 487,
                    "nodeType": "Block",
                    "src": "2265:1151:1",
                    "statements": [
                      {
                        "assignments": [
                          441
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 441,
                            "mutability": "mutable",
                            "name": "svg",
                            "nameLocation": "2290:3:1",
                            "nodeType": "VariableDeclaration",
                            "scope": 487,
                            "src": "2276:17:1",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string"
                            },
                            "typeName": {
                              "id": 440,
                              "name": "string",
                              "nodeType": "ElementaryTypeName",
                              "src": "2276:6:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_storage_ptr",
                                "typeString": "string"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 454,
                        "initialValue": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "id": 447,
                                      "name": "background_",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 425,
                                      "src": "2337:11:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint8",
                                        "typeString": "uint8"
                                      }
                                    },
                                    {
                                      "id": 448,
                                      "name": "hand_type_",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 427,
                                      "src": "2350:10:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint8",
                                        "typeString": "uint8"
                                      }
                                    },
                                    {
                                      "id": 449,
                                      "name": "hasPotato_",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 429,
                                      "src": "2362:10:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    {
                                      "id": 450,
                                      "name": "potato_",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 435,
                                      "src": "2374:7:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint8",
                                        "typeString": "uint8"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint8",
                                        "typeString": "uint8"
                                      },
                                      {
                                        "typeIdentifier": "t_uint8",
                                        "typeString": "uint8"
                                      },
                                      {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      },
                                      {
                                        "typeIdentifier": "t_uint8",
                                        "typeString": "uint8"
                                      }
                                    ],
                                    "id": 446,
                                    "name": "getSVG",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 371,
                                    "src": "2330:6:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_view$_t_uint8_$_t_uint8_$_t_bool_$_t_uint8_$returns$_t_string_memory_ptr_$",
                                      "typeString": "function (uint8,uint8,bool,uint8) view returns (string memory)"
                                    }
                                  },
                                  "id": 451,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "2330:52:1",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                ],
                                "id": 445,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2324:5:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                  "typeString": "type(bytes storage pointer)"
                                },
                                "typeName": {
                                  "id": 444,
                                  "name": "bytes",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2324:5:1",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 452,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2324:59:1",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "expression": {
                              "id": 442,
                              "name": "Base64",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1697,
                              "src": "2296:6:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_Base64_$1697_$",
                                "typeString": "type(library Base64)"
                              }
                            },
                            "id": 443,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "encode",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1696,
                            "src": "2296:13:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_string_memory_ptr_$",
                              "typeString": "function (bytes memory) pure returns (string memory)"
                            }
                          },
                          "id": 453,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2296:98:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2276:118:1"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "hexValue": "646174613a6170706c69636174696f6e2f6a736f6e3b6261736536342c",
                                  "id": 459,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "string",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "2491:31:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_stringliteral_bccab2d885f86fda81bfd84dd4248d31f8073b473d187111d36536db073076fa",
                                    "typeString": "literal_string \"data:application/json;base64,\""
                                  },
                                  "value": "data:application/json;base64,"
                                },
                                {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "hexValue": "7b226e616d65223a2022546f6b656e2023",
                                              "id": 466,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "kind": "string",
                                              "lValueRequested": false,
                                              "nodeType": "Literal",
                                              "src": "2672:19:1",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_stringliteral_59f4548e9770730d5f9b79d3485266abe95856eb8b22f4d5d7dc65d7d7b412d6",
                                                "typeString": "literal_string \"{\"name\": \"Token #\""
                                              },
                                              "value": "{\"name\": \"Token #"
                                            },
                                            {
                                              "arguments": [
                                                {
                                                  "id": 468,
                                                  "name": "id_",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 423,
                                                  "src": "2735:3:1",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_uint16",
                                                    "typeString": "uint16"
                                                  }
                                                }
                                              ],
                                              "expression": {
                                                "argumentTypes": [
                                                  {
                                                    "typeIdentifier": "t_uint16",
                                                    "typeString": "uint16"
                                                  }
                                                ],
                                                "id": 467,
                                                "name": "toString",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 1180,
                                                "src": "2726:8:1",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
                                                  "typeString": "function (uint256) pure returns (string memory)"
                                                }
                                              },
                                              "id": 469,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "kind": "functionCall",
                                              "lValueRequested": false,
                                              "names": [],
                                              "nodeType": "FunctionCall",
                                              "src": "2726:13:1",
                                              "tryCall": false,
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_string_memory_ptr",
                                                "typeString": "string memory"
                                              }
                                            },
                                            {
                                              "hexValue": "222c20226465736372697074696f6e223a2022412073696d706c6520546f6b656e222c2022696d616765223a2022646174613a696d6167652f7376672b786d6c3b6261736536342c",
                                              "id": 470,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "kind": "string",
                                              "lValueRequested": false,
                                              "nodeType": "Literal",
                                              "src": "2774:74:1",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_stringliteral_1b282456f8601862e95af181204e9d3f663b67381ffb5ef69256c5794fe4214d",
                                                "typeString": "literal_string \"\", \"description\": \"A simple Token\", \"image\": \"data:image/svg+xml;base64,\""
                                              },
                                              "value": "\", \"description\": \"A simple Token\", \"image\": \"data:image/svg+xml;base64,"
                                            },
                                            {
                                              "id": 471,
                                              "name": "svg",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 441,
                                              "src": "2883:3:1",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_string_memory_ptr",
                                                "typeString": "string memory"
                                              }
                                            },
                                            {
                                              "hexValue": "222c20",
                                              "id": 472,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "kind": "string",
                                              "lValueRequested": false,
                                              "nodeType": "Literal",
                                              "src": "2921:5:1",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_stringliteral_d31db5fa4cccdf0b2a7c8fa1b54fac1497461aa344c190614087e30f1494e3a3",
                                                "typeString": "literal_string \"\", \""
                                              },
                                              "value": "\", "
                                            },
                                            {
                                              "arguments": [
                                                {
                                                  "id": 474,
                                                  "name": "background_",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 425,
                                                  "src": "3013:11:1",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_uint8",
                                                    "typeString": "uint8"
                                                  }
                                                },
                                                {
                                                  "id": 475,
                                                  "name": "hand_type_",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 427,
                                                  "src": "3063:10:1",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_uint8",
                                                    "typeString": "uint8"
                                                  }
                                                },
                                                {
                                                  "id": 476,
                                                  "name": "hasPotato_",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 429,
                                                  "src": "3112:10:1",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                  }
                                                },
                                                {
                                                  "id": 477,
                                                  "name": "generation_",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 431,
                                                  "src": "3161:11:1",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_uint32",
                                                    "typeString": "uint32"
                                                  }
                                                },
                                                {
                                                  "id": 478,
                                                  "name": "isActive_",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 433,
                                                  "src": "3211:9:1",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                  }
                                                }
                                              ],
                                              "expression": {
                                                "argumentTypes": [
                                                  {
                                                    "typeIdentifier": "t_uint8",
                                                    "typeString": "uint8"
                                                  },
                                                  {
                                                    "typeIdentifier": "t_uint8",
                                                    "typeString": "uint8"
                                                  },
                                                  {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                  },
                                                  {
                                                    "typeIdentifier": "t_uint32",
                                                    "typeString": "uint32"
                                                  },
                                                  {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                  }
                                                ],
                                                "id": 473,
                                                "name": "getAttributes",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 1226,
                                                "src": "2961:13:1",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_function_internal_pure$_t_uint8_$_t_uint8_$_t_bool_$_t_uint32_$_t_bool_$returns$_t_string_memory_ptr_$",
                                                  "typeString": "function (uint8,uint8,bool,uint32,bool) pure returns (string memory)"
                                                }
                                              },
                                              "id": 479,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "kind": "functionCall",
                                              "lValueRequested": false,
                                              "names": [],
                                              "nodeType": "FunctionCall",
                                              "src": "2961:294:1",
                                              "tryCall": false,
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_string_memory_ptr",
                                                "typeString": "string memory"
                                              }
                                            },
                                            {
                                              "hexValue": "7d",
                                              "id": 480,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "kind": "string",
                                              "lValueRequested": false,
                                              "nodeType": "Literal",
                                              "src": "3290:3:1",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_stringliteral_8e2ffa389f3a6ded42d759b3377ac0d928e6a268d143bcc9517093d10c843bff",
                                                "typeString": "literal_string \"}\""
                                              },
                                              "value": "}"
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_stringliteral_59f4548e9770730d5f9b79d3485266abe95856eb8b22f4d5d7dc65d7d7b412d6",
                                                "typeString": "literal_string \"{\"name\": \"Token #\""
                                              },
                                              {
                                                "typeIdentifier": "t_string_memory_ptr",
                                                "typeString": "string memory"
                                              },
                                              {
                                                "typeIdentifier": "t_stringliteral_1b282456f8601862e95af181204e9d3f663b67381ffb5ef69256c5794fe4214d",
                                                "typeString": "literal_string \"\", \"description\": \"A simple Token\", \"image\": \"data:image/svg+xml;base64,\""
                                              },
                                              {
                                                "typeIdentifier": "t_string_memory_ptr",
                                                "typeString": "string memory"
                                              },
                                              {
                                                "typeIdentifier": "t_stringliteral_d31db5fa4cccdf0b2a7c8fa1b54fac1497461aa344c190614087e30f1494e3a3",
                                                "typeString": "literal_string \"\", \""
                                              },
                                              {
                                                "typeIdentifier": "t_string_memory_ptr",
                                                "typeString": "string memory"
                                              },
                                              {
                                                "typeIdentifier": "t_stringliteral_8e2ffa389f3a6ded42d759b3377ac0d928e6a268d143bcc9517093d10c843bff",
                                                "typeString": "literal_string \"}\""
                                              }
                                            ],
                                            "expression": {
                                              "id": 464,
                                              "name": "abi",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": -1,
                                              "src": "2621:3:1",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_magic_abi",
                                                "typeString": "abi"
                                              }
                                            },
                                            "id": 465,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "lValueRequested": false,
                                            "memberName": "encodePacked",
                                            "nodeType": "MemberAccess",
                                            "src": "2621:16:1",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                              "typeString": "function () pure returns (bytes memory)"
                                            }
                                          },
                                          "id": 481,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "functionCall",
                                          "lValueRequested": false,
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "2621:703:1",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bytes_memory_ptr",
                                            "typeString": "bytes memory"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_bytes_memory_ptr",
                                            "typeString": "bytes memory"
                                          }
                                        ],
                                        "id": 463,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "nodeType": "ElementaryTypeNameExpression",
                                        "src": "2585:5:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                          "typeString": "type(bytes storage pointer)"
                                        },
                                        "typeName": {
                                          "id": 462,
                                          "name": "bytes",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "2585:5:1",
                                          "typeDescriptions": {}
                                        }
                                      },
                                      "id": 482,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "typeConversion",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "2585:766:1",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes_memory_ptr",
                                        "typeString": "bytes memory"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_bytes_memory_ptr",
                                        "typeString": "bytes memory"
                                      }
                                    ],
                                    "expression": {
                                      "id": 460,
                                      "name": "Base64",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1697,
                                      "src": "2545:6:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_Base64_$1697_$",
                                        "typeString": "type(library Base64)"
                                      }
                                    },
                                    "id": 461,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "encode",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 1696,
                                    "src": "2545:13:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_string_memory_ptr_$",
                                      "typeString": "function (bytes memory) pure returns (string memory)"
                                    }
                                  },
                                  "id": 483,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "2545:829:1",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_stringliteral_bccab2d885f86fda81bfd84dd4248d31f8073b473d187111d36536db073076fa",
                                    "typeString": "literal_string \"data:application/json;base64,\""
                                  },
                                  {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                ],
                                "expression": {
                                  "id": 457,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "2452:3:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 458,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encodePacked",
                                "nodeType": "MemberAccess",
                                "src": "2452:16:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 484,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2452:941:1",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 456,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2427:6:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                              "typeString": "type(string storage pointer)"
                            },
                            "typeName": {
                              "id": 455,
                              "name": "string",
                              "nodeType": "ElementaryTypeName",
                              "src": "2427:6:1",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 485,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2427:981:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        "functionReturnParameters": 439,
                        "id": 486,
                        "nodeType": "Return",
                        "src": "2407:1001:1"
                      }
                    ]
                  },
                  "functionSelector": "b6046d7c",
                  "id": 488,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getTokenURI",
                  "nameLocation": "2028:11:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 436,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 423,
                        "mutability": "mutable",
                        "name": "id_",
                        "nameLocation": "2057:3:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 488,
                        "src": "2050:10:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        },
                        "typeName": {
                          "id": 422,
                          "name": "uint16",
                          "nodeType": "ElementaryTypeName",
                          "src": "2050:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 425,
                        "mutability": "mutable",
                        "name": "background_",
                        "nameLocation": "2077:11:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 488,
                        "src": "2071:17:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 424,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "2071:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 427,
                        "mutability": "mutable",
                        "name": "hand_type_",
                        "nameLocation": "2105:10:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 488,
                        "src": "2099:16:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 426,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "2099:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 429,
                        "mutability": "mutable",
                        "name": "hasPotato_",
                        "nameLocation": "2131:10:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 488,
                        "src": "2126:15:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 428,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "2126:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 431,
                        "mutability": "mutable",
                        "name": "generation_",
                        "nameLocation": "2159:11:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 488,
                        "src": "2152:18:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        "typeName": {
                          "id": 430,
                          "name": "uint32",
                          "nodeType": "ElementaryTypeName",
                          "src": "2152:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 433,
                        "mutability": "mutable",
                        "name": "isActive_",
                        "nameLocation": "2186:9:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 488,
                        "src": "2181:14:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 432,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "2181:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 435,
                        "mutability": "mutable",
                        "name": "potato_",
                        "nameLocation": "2212:7:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 488,
                        "src": "2206:13:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 434,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "2206:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2039:187:1"
                  },
                  "returnParameters": {
                    "id": 439,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 438,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 488,
                        "src": "2250:13:1",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 437,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "2250:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2249:15:1"
                  },
                  "scope": 1648,
                  "src": "2019:1397:1",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 521,
                    "nodeType": "Block",
                    "src": "3671:165:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 499,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 496,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "3690:3:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 497,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "3690:10:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "id": 498,
                                "name": "manager",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 308,
                                "src": "3704:7:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "3690:21:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "6e6f74206d616e61676572",
                              "id": 500,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3713:13:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_ee7b04b266f275ae66a2fddcbfef24d4ec3a503d9843c534a382f12477498d38",
                                "typeString": "literal_string \"not manager\""
                              },
                              "value": "not manager"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_ee7b04b266f275ae66a2fddcbfef24d4ec3a503d9843c534a382f12477498d38",
                                "typeString": "literal_string \"not manager\""
                              }
                            ],
                            "id": 495,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "3682:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 501,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3682:45:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 502,
                        "nodeType": "ExpressionStatement",
                        "src": "3682:45:1"
                      },
                      {
                        "body": {
                          "id": 519,
                          "nodeType": "Block",
                          "src": "3778:51:1",
                          "statements": [
                            {
                              "expression": {
                                "id": 517,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 513,
                                    "name": "backgrounds",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 316,
                                    "src": "3793:11:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint8_$_t_address_$",
                                      "typeString": "mapping(uint8 => address)"
                                    }
                                  },
                                  "id": 515,
                                  "indexExpression": {
                                    "id": 514,
                                    "name": "id",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 504,
                                    "src": "3805:2:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint8",
                                      "typeString": "uint8"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "3793:15:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "id": 516,
                                  "name": "source",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 492,
                                  "src": "3811:6:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "src": "3793:24:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 518,
                              "nodeType": "ExpressionStatement",
                              "src": "3793:24:1"
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          },
                          "id": 509,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 507,
                            "name": "id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 504,
                            "src": "3759:2:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<=",
                          "rightExpression": {
                            "id": 508,
                            "name": "count",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 490,
                            "src": "3765:5:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "src": "3759:11:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 520,
                        "initializationExpression": {
                          "assignments": [
                            504
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 504,
                              "mutability": "mutable",
                              "name": "id",
                              "nameLocation": "3751:2:1",
                              "nodeType": "VariableDeclaration",
                              "scope": 520,
                              "src": "3745:8:1",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              },
                              "typeName": {
                                "id": 503,
                                "name": "uint8",
                                "nodeType": "ElementaryTypeName",
                                "src": "3745:5:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 506,
                          "initialValue": {
                            "hexValue": "31",
                            "id": 505,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3756:1:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "3745:12:1"
                        },
                        "loopExpression": {
                          "expression": {
                            "id": 511,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": false,
                            "src": "3772:4:1",
                            "subExpression": {
                              "id": 510,
                              "name": "id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 504,
                              "src": "3772:2:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "id": 512,
                          "nodeType": "ExpressionStatement",
                          "src": "3772:4:1"
                        },
                        "nodeType": "ForStatement",
                        "src": "3740:89:1"
                      }
                    ]
                  },
                  "functionSelector": "428bff6b",
                  "id": 522,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "setBackgrounds",
                  "nameLocation": "3618:14:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 493,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 490,
                        "mutability": "mutable",
                        "name": "count",
                        "nameLocation": "3639:5:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 522,
                        "src": "3633:11:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 489,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "3633:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 492,
                        "mutability": "mutable",
                        "name": "source",
                        "nameLocation": "3654:6:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 522,
                        "src": "3646:14:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 491,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3646:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3632:29:1"
                  },
                  "returnParameters": {
                    "id": 494,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3671:0:1"
                  },
                  "scope": 1648,
                  "src": "3609:227:1",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 555,
                    "nodeType": "Block",
                    "src": "3900:164:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 533,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 530,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "3919:3:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 531,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "3919:10:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "id": 532,
                                "name": "manager",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 308,
                                "src": "3933:7:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "3919:21:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "6e6f74206d616e61676572",
                              "id": 534,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3942:13:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_ee7b04b266f275ae66a2fddcbfef24d4ec3a503d9843c534a382f12477498d38",
                                "typeString": "literal_string \"not manager\""
                              },
                              "value": "not manager"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_ee7b04b266f275ae66a2fddcbfef24d4ec3a503d9843c534a382f12477498d38",
                                "typeString": "literal_string \"not manager\""
                              }
                            ],
                            "id": 529,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "3911:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 535,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3911:45:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 536,
                        "nodeType": "ExpressionStatement",
                        "src": "3911:45:1"
                      },
                      {
                        "body": {
                          "id": 553,
                          "nodeType": "Block",
                          "src": "4007:50:1",
                          "statements": [
                            {
                              "expression": {
                                "id": 551,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 547,
                                    "name": "hand_types",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 320,
                                    "src": "4022:10:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint8_$_t_address_$",
                                      "typeString": "mapping(uint8 => address)"
                                    }
                                  },
                                  "id": 549,
                                  "indexExpression": {
                                    "id": 548,
                                    "name": "id",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 538,
                                    "src": "4033:2:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint8",
                                      "typeString": "uint8"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "4022:14:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "id": 550,
                                  "name": "source",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 526,
                                  "src": "4039:6:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "src": "4022:23:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 552,
                              "nodeType": "ExpressionStatement",
                              "src": "4022:23:1"
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          },
                          "id": 543,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 541,
                            "name": "id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 538,
                            "src": "3988:2:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<=",
                          "rightExpression": {
                            "id": 542,
                            "name": "count",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 524,
                            "src": "3994:5:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "src": "3988:11:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 554,
                        "initializationExpression": {
                          "assignments": [
                            538
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 538,
                              "mutability": "mutable",
                              "name": "id",
                              "nameLocation": "3980:2:1",
                              "nodeType": "VariableDeclaration",
                              "scope": 554,
                              "src": "3974:8:1",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              },
                              "typeName": {
                                "id": 537,
                                "name": "uint8",
                                "nodeType": "ElementaryTypeName",
                                "src": "3974:5:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 540,
                          "initialValue": {
                            "hexValue": "31",
                            "id": 539,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3985:1:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "3974:12:1"
                        },
                        "loopExpression": {
                          "expression": {
                            "id": 545,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": false,
                            "src": "4001:4:1",
                            "subExpression": {
                              "id": 544,
                              "name": "id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 538,
                              "src": "4001:2:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "id": 546,
                          "nodeType": "ExpressionStatement",
                          "src": "4001:4:1"
                        },
                        "nodeType": "ForStatement",
                        "src": "3969:88:1"
                      }
                    ]
                  },
                  "functionSelector": "158eb4e5",
                  "id": 556,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "setHands",
                  "nameLocation": "3853:8:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 527,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 524,
                        "mutability": "mutable",
                        "name": "count",
                        "nameLocation": "3868:5:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 556,
                        "src": "3862:11:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 523,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "3862:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 526,
                        "mutability": "mutable",
                        "name": "source",
                        "nameLocation": "3883:6:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 556,
                        "src": "3875:14:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 525,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3875:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3861:29:1"
                  },
                  "returnParameters": {
                    "id": 528,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3900:0:1"
                  },
                  "scope": 1648,
                  "src": "3844:220:1",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 589,
                    "nodeType": "Block",
                    "src": "4131:162:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 567,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 564,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "4150:3:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 565,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "4150:10:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "id": 566,
                                "name": "manager",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 308,
                                "src": "4164:7:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "4150:21:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "6e6f74206d616e61676572",
                              "id": 568,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4173:13:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_ee7b04b266f275ae66a2fddcbfef24d4ec3a503d9843c534a382f12477498d38",
                                "typeString": "literal_string \"not manager\""
                              },
                              "value": "not manager"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_ee7b04b266f275ae66a2fddcbfef24d4ec3a503d9843c534a382f12477498d38",
                                "typeString": "literal_string \"not manager\""
                              }
                            ],
                            "id": 563,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "4142:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 569,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4142:45:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 570,
                        "nodeType": "ExpressionStatement",
                        "src": "4142:45:1"
                      },
                      {
                        "body": {
                          "id": 587,
                          "nodeType": "Block",
                          "src": "4238:48:1",
                          "statements": [
                            {
                              "expression": {
                                "id": 585,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 581,
                                    "name": "potatoes",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 324,
                                    "src": "4253:8:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint8_$_t_address_$",
                                      "typeString": "mapping(uint8 => address)"
                                    }
                                  },
                                  "id": 583,
                                  "indexExpression": {
                                    "id": 582,
                                    "name": "id",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 572,
                                    "src": "4262:2:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint8",
                                      "typeString": "uint8"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "4253:12:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "id": 584,
                                  "name": "source",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 560,
                                  "src": "4268:6:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "src": "4253:21:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 586,
                              "nodeType": "ExpressionStatement",
                              "src": "4253:21:1"
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          },
                          "id": 577,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 575,
                            "name": "id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 572,
                            "src": "4219:2:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<=",
                          "rightExpression": {
                            "id": 576,
                            "name": "count",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 558,
                            "src": "4225:5:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "src": "4219:11:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 588,
                        "initializationExpression": {
                          "assignments": [
                            572
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 572,
                              "mutability": "mutable",
                              "name": "id",
                              "nameLocation": "4211:2:1",
                              "nodeType": "VariableDeclaration",
                              "scope": 588,
                              "src": "4205:8:1",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              },
                              "typeName": {
                                "id": 571,
                                "name": "uint8",
                                "nodeType": "ElementaryTypeName",
                                "src": "4205:5:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 574,
                          "initialValue": {
                            "hexValue": "31",
                            "id": 573,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4216:1:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "4205:12:1"
                        },
                        "loopExpression": {
                          "expression": {
                            "id": 579,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": false,
                            "src": "4232:4:1",
                            "subExpression": {
                              "id": 578,
                              "name": "id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 572,
                              "src": "4232:2:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "id": 580,
                          "nodeType": "ExpressionStatement",
                          "src": "4232:4:1"
                        },
                        "nodeType": "ForStatement",
                        "src": "4200:86:1"
                      }
                    ]
                  },
                  "functionSelector": "b6934925",
                  "id": 590,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "setPotatoes",
                  "nameLocation": "4081:11:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 561,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 558,
                        "mutability": "mutable",
                        "name": "count",
                        "nameLocation": "4099:5:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 590,
                        "src": "4093:11:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 557,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "4093:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 560,
                        "mutability": "mutable",
                        "name": "source",
                        "nameLocation": "4114:6:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 590,
                        "src": "4106:14:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 559,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4106:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4092:29:1"
                  },
                  "returnParameters": {
                    "id": 562,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "4131:0:1"
                  },
                  "scope": 1648,
                  "src": "4072:221:1",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 623,
                    "nodeType": "Block",
                    "src": "4599:161:1",
                    "statements": [
                      {
                        "assignments": [
                          600,
                          602
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 600,
                            "mutability": "mutable",
                            "name": "succ",
                            "nameLocation": "4616:4:1",
                            "nodeType": "VariableDeclaration",
                            "scope": 623,
                            "src": "4611:9:1",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 599,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "4611:4:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 602,
                            "mutability": "mutable",
                            "name": "ret",
                            "nameLocation": "4635:3:1",
                            "nodeType": "VariableDeclaration",
                            "scope": 623,
                            "src": "4622:16:1",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes"
                            },
                            "typeName": {
                              "id": 601,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "4622:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_storage_ptr",
                                "typeString": "bytes"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 607,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 605,
                              "name": "sig",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 594,
                              "src": "4660:3:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "expression": {
                              "id": 603,
                              "name": "source",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 592,
                              "src": "4642:6:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "id": 604,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "staticcall",
                            "nodeType": "MemberAccess",
                            "src": "4642:17:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                              "typeString": "function (bytes memory) view returns (bool,bytes memory)"
                            }
                          },
                          "id": 606,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4642:22:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                            "typeString": "tuple(bool,bytes memory)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4610:54:1"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 609,
                              "name": "succ",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 600,
                              "src": "4683:4:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "6661696c656420746f206765742064617461",
                              "id": 610,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4689:20:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_88a57f4f3e712e2c61ce3233637c29aee4812a27dbd1d386e5dba84931d76764",
                                "typeString": "literal_string \"failed to get data\""
                              },
                              "value": "failed to get data"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_88a57f4f3e712e2c61ce3233637c29aee4812a27dbd1d386e5dba84931d76764",
                                "typeString": "literal_string \"failed to get data\""
                              }
                            ],
                            "id": 608,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "4675:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 611,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4675:35:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 612,
                        "nodeType": "ExpressionStatement",
                        "src": "4675:35:1"
                      },
                      {
                        "expression": {
                          "id": 621,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 613,
                            "name": "svg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 597,
                            "src": "4721:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 616,
                                "name": "ret",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 602,
                                "src": "4738:3:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              },
                              {
                                "components": [
                                  {
                                    "id": 618,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "4744:6:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                                      "typeString": "type(string storage pointer)"
                                    },
                                    "typeName": {
                                      "id": 617,
                                      "name": "string",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "4744:6:1",
                                      "typeDescriptions": {}
                                    }
                                  }
                                ],
                                "id": 619,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "4743:8:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                                  "typeString": "type(string storage pointer)"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                },
                                {
                                  "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                                  "typeString": "type(string storage pointer)"
                                }
                              ],
                              "expression": {
                                "id": 614,
                                "name": "abi",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -1,
                                "src": "4727:3:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_abi",
                                  "typeString": "abi"
                                }
                              },
                              "id": 615,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "decode",
                              "nodeType": "MemberAccess",
                              "src": "4727:10:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                                "typeString": "function () pure"
                              }
                            },
                            "id": 620,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4727:25:1",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "src": "4721:31:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        "id": 622,
                        "nodeType": "ExpressionStatement",
                        "src": "4721:31:1"
                      }
                    ]
                  },
                  "id": 624,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "call",
                  "nameLocation": "4493:4:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 595,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 592,
                        "mutability": "mutable",
                        "name": "source",
                        "nameLocation": "4516:6:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 624,
                        "src": "4508:14:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 591,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4508:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 594,
                        "mutability": "mutable",
                        "name": "sig",
                        "nameLocation": "4546:3:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 624,
                        "src": "4533:16:1",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 593,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "4533:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4497:59:1"
                  },
                  "returnParameters": {
                    "id": 598,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 597,
                        "mutability": "mutable",
                        "name": "svg",
                        "nameLocation": "4594:3:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 624,
                        "src": "4580:17:1",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 596,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "4580:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4579:19:1"
                  },
                  "scope": 1648,
                  "src": "4484:276:1",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1083,
                    "nodeType": "Block",
                    "src": "4842:3194:1",
                    "statements": [
                      {
                        "assignments": [
                          635
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 635,
                            "mutability": "mutable",
                            "name": "source",
                            "nameLocation": "4861:6:1",
                            "nodeType": "VariableDeclaration",
                            "scope": 1083,
                            "src": "4853:14:1",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 634,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4853:7:1",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 636,
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4853:14:1"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_enum$_Part_$312",
                            "typeString": "enum InventoryManager.Part"
                          },
                          "id": 640,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 637,
                            "name": "part",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 627,
                            "src": "4882:4:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Part_$312",
                              "typeString": "enum InventoryManager.Part"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "id": 638,
                              "name": "Part",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 312,
                              "src": "4890:4:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Part_$312_$",
                                "typeString": "type(enum InventoryManager.Part)"
                              }
                            },
                            "id": 639,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "background",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 309,
                            "src": "4890:15:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Part_$312",
                              "typeString": "enum InventoryManager.Part"
                            }
                          },
                          "src": "4882:23:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "condition": {
                            "commonType": {
                              "typeIdentifier": "t_enum$_Part_$312",
                              "typeString": "enum InventoryManager.Part"
                            },
                            "id": 651,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 648,
                              "name": "part",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 627,
                              "src": "4968:4:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_Part_$312",
                                "typeString": "enum InventoryManager.Part"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "expression": {
                                "id": 649,
                                "name": "Part",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 312,
                                "src": "4976:4:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_enum$_Part_$312_$",
                                  "typeString": "type(enum InventoryManager.Part)"
                                }
                              },
                              "id": 650,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "hand_type",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 310,
                              "src": "4976:14:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_Part_$312",
                                "typeString": "enum InventoryManager.Part"
                              }
                            },
                            "src": "4968:22:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "falseBody": {
                            "condition": {
                              "commonType": {
                                "typeIdentifier": "t_enum$_Part_$312",
                                "typeString": "enum InventoryManager.Part"
                              },
                              "id": 662,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 659,
                                "name": "part",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 627,
                                "src": "5052:4:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_Part_$312",
                                  "typeString": "enum InventoryManager.Part"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "expression": {
                                  "id": 660,
                                  "name": "Part",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 312,
                                  "src": "5060:4:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_enum$_Part_$312_$",
                                    "typeString": "type(enum InventoryManager.Part)"
                                  }
                                },
                                "id": 661,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "potato",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 311,
                                "src": "5060:11:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_Part_$312",
                                  "typeString": "enum InventoryManager.Part"
                                }
                              },
                              "src": "5052:19:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "falseBody": {
                              "id": 674,
                              "nodeType": "Block",
                              "src": "5127:49:1",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "hexValue": "696e76616c69642070617274",
                                        "id": 671,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "string",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "5149:14:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_stringliteral_c08d24782450105650bac1579f41a5bbfca5a1ee79af052c31863122951f0e7f",
                                          "typeString": "literal_string \"invalid part\""
                                        },
                                        "value": "invalid part"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_stringliteral_c08d24782450105650bac1579f41a5bbfca5a1ee79af052c31863122951f0e7f",
                                          "typeString": "literal_string \"invalid part\""
                                        }
                                      ],
                                      "id": 670,
                                      "name": "revert",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [
                                        -19,
                                        -19
                                      ],
                                      "referencedDeclaration": -19,
                                      "src": "5142:6:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                                        "typeString": "function (string memory) pure"
                                      }
                                    },
                                    "id": 672,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "5142:22:1",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_tuple$__$",
                                      "typeString": "tuple()"
                                    }
                                  },
                                  "id": 673,
                                  "nodeType": "ExpressionStatement",
                                  "src": "5142:22:1"
                                }
                              ]
                            },
                            "id": 675,
                            "nodeType": "IfStatement",
                            "src": "5048:128:1",
                            "trueBody": {
                              "id": 669,
                              "nodeType": "Block",
                              "src": "5073:48:1",
                              "statements": [
                                {
                                  "expression": {
                                    "id": 667,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftHandSide": {
                                      "id": 663,
                                      "name": "source",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 635,
                                      "src": "5088:6:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "nodeType": "Assignment",
                                    "operator": "=",
                                    "rightHandSide": {
                                      "baseExpression": {
                                        "id": 664,
                                        "name": "potatoes",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 324,
                                        "src": "5097:8:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_uint8_$_t_address_$",
                                          "typeString": "mapping(uint8 => address)"
                                        }
                                      },
                                      "id": 666,
                                      "indexExpression": {
                                        "id": 665,
                                        "name": "id",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 629,
                                        "src": "5106:2:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint8",
                                          "typeString": "uint8"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "5097:12:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "src": "5088:21:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "id": 668,
                                  "nodeType": "ExpressionStatement",
                                  "src": "5088:21:1"
                                }
                              ]
                            }
                          },
                          "id": 676,
                          "nodeType": "IfStatement",
                          "src": "4964:212:1",
                          "trueBody": {
                            "id": 658,
                            "nodeType": "Block",
                            "src": "4992:50:1",
                            "statements": [
                              {
                                "expression": {
                                  "id": 656,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftHandSide": {
                                    "id": 652,
                                    "name": "source",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 635,
                                    "src": "5007:6:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "nodeType": "Assignment",
                                  "operator": "=",
                                  "rightHandSide": {
                                    "baseExpression": {
                                      "id": 653,
                                      "name": "hand_types",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 320,
                                      "src": "5016:10:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_uint8_$_t_address_$",
                                        "typeString": "mapping(uint8 => address)"
                                      }
                                    },
                                    "id": 655,
                                    "indexExpression": {
                                      "id": 654,
                                      "name": "id",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 629,
                                      "src": "5027:2:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint8",
                                        "typeString": "uint8"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "5016:14:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "src": "5007:23:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "id": 657,
                                "nodeType": "ExpressionStatement",
                                "src": "5007:23:1"
                              }
                            ]
                          }
                        },
                        "id": 677,
                        "nodeType": "IfStatement",
                        "src": "4878:298:1",
                        "trueBody": {
                          "id": 647,
                          "nodeType": "Block",
                          "src": "4907:51:1",
                          "statements": [
                            {
                              "expression": {
                                "id": 645,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 641,
                                  "name": "source",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 635,
                                  "src": "4922:6:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "baseExpression": {
                                    "id": 642,
                                    "name": "backgrounds",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 316,
                                    "src": "4931:11:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint8_$_t_address_$",
                                      "typeString": "mapping(uint8 => address)"
                                    }
                                  },
                                  "id": 644,
                                  "indexExpression": {
                                    "id": 643,
                                    "name": "id",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 629,
                                    "src": "4943:2:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint8",
                                      "typeString": "uint8"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "4931:15:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "src": "4922:24:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 646,
                              "nodeType": "ExpressionStatement",
                              "src": "4922:24:1"
                            }
                          ]
                        }
                      },
                      {
                        "assignments": [
                          679
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 679,
                            "mutability": "mutable",
                            "name": "sig",
                            "nameLocation": "5200:3:1",
                            "nodeType": "VariableDeclaration",
                            "scope": 1083,
                            "src": "5186:17:1",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string"
                            },
                            "typeName": {
                              "id": 678,
                              "name": "string",
                              "nodeType": "ElementaryTypeName",
                              "src": "5186:6:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_storage_ptr",
                                "typeString": "string"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 680,
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5186:17:1"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_enum$_Part_$312",
                            "typeString": "enum InventoryManager.Part"
                          },
                          "id": 684,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 681,
                            "name": "part",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 627,
                            "src": "5218:4:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Part_$312",
                              "typeString": "enum InventoryManager.Part"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "id": 682,
                              "name": "Part",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 312,
                              "src": "5226:4:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Part_$312_$",
                                "typeString": "type(enum InventoryManager.Part)"
                              }
                            },
                            "id": 683,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "background",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 309,
                            "src": "5226:15:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Part_$312",
                              "typeString": "enum InventoryManager.Part"
                            }
                          },
                          "src": "5218:23:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "condition": {
                            "commonType": {
                              "typeIdentifier": "t_enum$_Part_$312",
                              "typeString": "enum InventoryManager.Part"
                            },
                            "id": 733,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 730,
                              "name": "part",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 627,
                              "src": "5597:4:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_Part_$312",
                                "typeString": "enum InventoryManager.Part"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "expression": {
                                "id": 731,
                                "name": "Part",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 312,
                                "src": "5605:4:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_enum$_Part_$312_$",
                                  "typeString": "type(enum InventoryManager.Part)"
                                }
                              },
                              "id": 732,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "hand_type",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 310,
                              "src": "5605:14:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_Part_$312",
                                "typeString": "enum InventoryManager.Part"
                              }
                            },
                            "src": "5597:22:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "falseBody": {
                            "condition": {
                              "commonType": {
                                "typeIdentifier": "t_enum$_Part_$312",
                                "typeString": "enum InventoryManager.Part"
                              },
                              "id": 1042,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1039,
                                "name": "part",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 627,
                                "src": "7693:4:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_Part_$312",
                                  "typeString": "enum InventoryManager.Part"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "expression": {
                                  "id": 1040,
                                  "name": "Part",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 312,
                                  "src": "7701:4:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_enum$_Part_$312_$",
                                    "typeString": "type(enum InventoryManager.Part)"
                                  }
                                },
                                "id": 1041,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "potato",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 311,
                                "src": "7701:11:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_Part_$312",
                                  "typeString": "enum InventoryManager.Part"
                                }
                              },
                              "src": "7693:19:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "falseBody": {
                              "id": 1052,
                              "nodeType": "Block",
                              "src": "7766:49:1",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "hexValue": "696e76616c69642070617274",
                                        "id": 1049,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "string",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "7788:14:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_stringliteral_c08d24782450105650bac1579f41a5bbfca5a1ee79af052c31863122951f0e7f",
                                          "typeString": "literal_string \"invalid part\""
                                        },
                                        "value": "invalid part"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_stringliteral_c08d24782450105650bac1579f41a5bbfca5a1ee79af052c31863122951f0e7f",
                                          "typeString": "literal_string \"invalid part\""
                                        }
                                      ],
                                      "id": 1048,
                                      "name": "revert",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [
                                        -19,
                                        -19
                                      ],
                                      "referencedDeclaration": -19,
                                      "src": "7781:6:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                                        "typeString": "function (string memory) pure"
                                      }
                                    },
                                    "id": 1050,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "7781:22:1",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_tuple$__$",
                                      "typeString": "tuple()"
                                    }
                                  },
                                  "id": 1051,
                                  "nodeType": "ExpressionStatement",
                                  "src": "7781:22:1"
                                }
                              ]
                            },
                            "id": 1053,
                            "nodeType": "IfStatement",
                            "src": "7689:126:1",
                            "trueBody": {
                              "id": 1047,
                              "nodeType": "Block",
                              "src": "7714:46:1",
                              "statements": [
                                {
                                  "expression": {
                                    "id": 1045,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftHandSide": {
                                      "id": 1043,
                                      "name": "sig",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 679,
                                      "src": "7729:3:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_string_memory_ptr",
                                        "typeString": "string memory"
                                      }
                                    },
                                    "nodeType": "Assignment",
                                    "operator": "=",
                                    "rightHandSide": {
                                      "hexValue": "676574506f7461746f2829",
                                      "id": 1044,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "string",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "7735:13:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_stringliteral_6e329aa99daa12542f5b3fb4c6390252d2fe32f15c39b91ee58836f047bfa5e6",
                                        "typeString": "literal_string \"getPotato()\""
                                      },
                                      "value": "getPotato()"
                                    },
                                    "src": "7729:19:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  },
                                  "id": 1046,
                                  "nodeType": "ExpressionStatement",
                                  "src": "7729:19:1"
                                }
                              ]
                            }
                          },
                          "id": 1054,
                          "nodeType": "IfStatement",
                          "src": "5593:2222:1",
                          "trueBody": {
                            "id": 1038,
                            "nodeType": "Block",
                            "src": "5621:2062:1",
                            "statements": [
                              {
                                "condition": {
                                  "commonType": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "id": 740,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "commonType": {
                                      "typeIdentifier": "t_uint8",
                                      "typeString": "uint8"
                                    },
                                    "id": 736,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "hexValue": "31",
                                      "id": 734,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "5640:1:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_1_by_1",
                                        "typeString": "int_const 1"
                                      },
                                      "value": "1"
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "<=",
                                    "rightExpression": {
                                      "id": 735,
                                      "name": "id",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 629,
                                      "src": "5645:2:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint8",
                                        "typeString": "uint8"
                                      }
                                    },
                                    "src": "5640:7:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "&&",
                                  "rightExpression": {
                                    "commonType": {
                                      "typeIdentifier": "t_uint8",
                                      "typeString": "uint8"
                                    },
                                    "id": 739,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 737,
                                      "name": "id",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 629,
                                      "src": "5651:2:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint8",
                                        "typeString": "uint8"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "<=",
                                    "rightExpression": {
                                      "hexValue": "33",
                                      "id": 738,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "5657:1:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_3_by_1",
                                        "typeString": "int_const 3"
                                      },
                                      "value": "3"
                                    },
                                    "src": "5651:7:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "src": "5640:18:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "falseBody": {
                                  "condition": {
                                    "commonType": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    "id": 752,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "commonType": {
                                        "typeIdentifier": "t_uint8",
                                        "typeString": "uint8"
                                      },
                                      "id": 748,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "hexValue": "33",
                                        "id": 746,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "5723:1:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_3_by_1",
                                          "typeString": "int_const 3"
                                        },
                                        "value": "3"
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "<",
                                      "rightExpression": {
                                        "id": 747,
                                        "name": "id",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 629,
                                        "src": "5727:2:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint8",
                                          "typeString": "uint8"
                                        }
                                      },
                                      "src": "5723:6:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "&&",
                                    "rightExpression": {
                                      "commonType": {
                                        "typeIdentifier": "t_uint8",
                                        "typeString": "uint8"
                                      },
                                      "id": 751,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "id": 749,
                                        "name": "id",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 629,
                                        "src": "5733:2:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint8",
                                          "typeString": "uint8"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "<=",
                                      "rightExpression": {
                                        "hexValue": "36",
                                        "id": 750,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "5739:1:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_6_by_1",
                                          "typeString": "int_const 6"
                                        },
                                        "value": "6"
                                      },
                                      "src": "5733:7:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "src": "5723:17:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "falseBody": {
                                    "condition": {
                                      "commonType": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      },
                                      "id": 764,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "commonType": {
                                          "typeIdentifier": "t_uint8",
                                          "typeString": "uint8"
                                        },
                                        "id": 760,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "hexValue": "36",
                                          "id": 758,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "number",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "5805:1:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_rational_6_by_1",
                                            "typeString": "int_const 6"
                                          },
                                          "value": "6"
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "<",
                                        "rightExpression": {
                                          "id": 759,
                                          "name": "id",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 629,
                                          "src": "5809:2:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint8",
                                            "typeString": "uint8"
                                          }
                                        },
                                        "src": "5805:6:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "&&",
                                      "rightExpression": {
                                        "commonType": {
                                          "typeIdentifier": "t_uint8",
                                          "typeString": "uint8"
                                        },
                                        "id": 763,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "id": 761,
                                          "name": "id",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 629,
                                          "src": "5815:2:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint8",
                                            "typeString": "uint8"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "<=",
                                        "rightExpression": {
                                          "hexValue": "3130",
                                          "id": 762,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "number",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "5821:2:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_rational_10_by_1",
                                            "typeString": "int_const 10"
                                          },
                                          "value": "10"
                                        },
                                        "src": "5815:8:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        }
                                      },
                                      "src": "5805:18:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "falseBody": {
                                      "condition": {
                                        "commonType": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        },
                                        "id": 776,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "commonType": {
                                            "typeIdentifier": "t_uint8",
                                            "typeString": "uint8"
                                          },
                                          "id": 772,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftExpression": {
                                            "hexValue": "3130",
                                            "id": 770,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "5888:2:1",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_rational_10_by_1",
                                              "typeString": "int_const 10"
                                            },
                                            "value": "10"
                                          },
                                          "nodeType": "BinaryOperation",
                                          "operator": "<",
                                          "rightExpression": {
                                            "id": 771,
                                            "name": "id",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 629,
                                            "src": "5893:2:1",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint8",
                                              "typeString": "uint8"
                                            }
                                          },
                                          "src": "5888:7:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "&&",
                                        "rightExpression": {
                                          "commonType": {
                                            "typeIdentifier": "t_uint8",
                                            "typeString": "uint8"
                                          },
                                          "id": 775,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftExpression": {
                                            "id": 773,
                                            "name": "id",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 629,
                                            "src": "5899:2:1",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint8",
                                              "typeString": "uint8"
                                            }
                                          },
                                          "nodeType": "BinaryOperation",
                                          "operator": "<=",
                                          "rightExpression": {
                                            "hexValue": "3134",
                                            "id": 774,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "5905:2:1",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_rational_14_by_1",
                                              "typeString": "int_const 14"
                                            },
                                            "value": "14"
                                          },
                                          "src": "5899:8:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                          }
                                        },
                                        "src": "5888:19:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        }
                                      },
                                      "falseBody": {
                                        "condition": {
                                          "commonType": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                          },
                                          "id": 788,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftExpression": {
                                            "commonType": {
                                              "typeIdentifier": "t_uint8",
                                              "typeString": "uint8"
                                            },
                                            "id": 784,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftExpression": {
                                              "hexValue": "3134",
                                              "id": 782,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "kind": "number",
                                              "lValueRequested": false,
                                              "nodeType": "Literal",
                                              "src": "5972:2:1",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_rational_14_by_1",
                                                "typeString": "int_const 14"
                                              },
                                              "value": "14"
                                            },
                                            "nodeType": "BinaryOperation",
                                            "operator": "<",
                                            "rightExpression": {
                                              "id": 783,
                                              "name": "id",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 629,
                                              "src": "5977:2:1",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint8",
                                                "typeString": "uint8"
                                              }
                                            },
                                            "src": "5972:7:1",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_bool",
                                              "typeString": "bool"
                                            }
                                          },
                                          "nodeType": "BinaryOperation",
                                          "operator": "&&",
                                          "rightExpression": {
                                            "commonType": {
                                              "typeIdentifier": "t_uint8",
                                              "typeString": "uint8"
                                            },
                                            "id": 787,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftExpression": {
                                              "id": 785,
                                              "name": "id",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 629,
                                              "src": "5983:2:1",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint8",
                                                "typeString": "uint8"
                                              }
                                            },
                                            "nodeType": "BinaryOperation",
                                            "operator": "<=",
                                            "rightExpression": {
                                              "hexValue": "3137",
                                              "id": 786,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "kind": "number",
                                              "lValueRequested": false,
                                              "nodeType": "Literal",
                                              "src": "5989:2:1",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_rational_17_by_1",
                                                "typeString": "int_const 17"
                                              },
                                              "value": "17"
                                            },
                                            "src": "5983:8:1",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_bool",
                                              "typeString": "bool"
                                            }
                                          },
                                          "src": "5972:19:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                          }
                                        },
                                        "falseBody": {
                                          "condition": {
                                            "commonType": {
                                              "typeIdentifier": "t_bool",
                                              "typeString": "bool"
                                            },
                                            "id": 800,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftExpression": {
                                              "commonType": {
                                                "typeIdentifier": "t_uint8",
                                                "typeString": "uint8"
                                              },
                                              "id": 796,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "leftExpression": {
                                                "hexValue": "3137",
                                                "id": 794,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "number",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "6059:2:1",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_rational_17_by_1",
                                                  "typeString": "int_const 17"
                                                },
                                                "value": "17"
                                              },
                                              "nodeType": "BinaryOperation",
                                              "operator": "<",
                                              "rightExpression": {
                                                "id": 795,
                                                "name": "id",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 629,
                                                "src": "6064:2:1",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint8",
                                                  "typeString": "uint8"
                                                }
                                              },
                                              "src": "6059:7:1",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_bool",
                                                "typeString": "bool"
                                              }
                                            },
                                            "nodeType": "BinaryOperation",
                                            "operator": "&&",
                                            "rightExpression": {
                                              "commonType": {
                                                "typeIdentifier": "t_uint8",
                                                "typeString": "uint8"
                                              },
                                              "id": 799,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "leftExpression": {
                                                "id": 797,
                                                "name": "id",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 629,
                                                "src": "6070:2:1",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint8",
                                                  "typeString": "uint8"
                                                }
                                              },
                                              "nodeType": "BinaryOperation",
                                              "operator": "<=",
                                              "rightExpression": {
                                                "hexValue": "3139",
                                                "id": 798,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "number",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "6076:2:1",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_rational_19_by_1",
                                                  "typeString": "int_const 19"
                                                },
                                                "value": "19"
                                              },
                                              "src": "6070:8:1",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_bool",
                                                "typeString": "bool"
                                              }
                                            },
                                            "src": "6059:19:1",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_bool",
                                              "typeString": "bool"
                                            }
                                          },
                                          "falseBody": {
                                            "condition": {
                                              "commonType": {
                                                "typeIdentifier": "t_bool",
                                                "typeString": "bool"
                                              },
                                              "id": 812,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "leftExpression": {
                                                "commonType": {
                                                  "typeIdentifier": "t_uint8",
                                                  "typeString": "uint8"
                                                },
                                                "id": 808,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftExpression": {
                                                  "hexValue": "3139",
                                                  "id": 806,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": true,
                                                  "kind": "number",
                                                  "lValueRequested": false,
                                                  "nodeType": "Literal",
                                                  "src": "6147:2:1",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_rational_19_by_1",
                                                    "typeString": "int_const 19"
                                                  },
                                                  "value": "19"
                                                },
                                                "nodeType": "BinaryOperation",
                                                "operator": "<",
                                                "rightExpression": {
                                                  "id": 807,
                                                  "name": "id",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 629,
                                                  "src": "6152:2:1",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_uint8",
                                                    "typeString": "uint8"
                                                  }
                                                },
                                                "src": "6147:7:1",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_bool",
                                                  "typeString": "bool"
                                                }
                                              },
                                              "nodeType": "BinaryOperation",
                                              "operator": "&&",
                                              "rightExpression": {
                                                "commonType": {
                                                  "typeIdentifier": "t_uint8",
                                                  "typeString": "uint8"
                                                },
                                                "id": 811,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftExpression": {
                                                  "id": 809,
                                                  "name": "id",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 629,
                                                  "src": "6158:2:1",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_uint8",
                                                    "typeString": "uint8"
                                                  }
                                                },
                                                "nodeType": "BinaryOperation",
                                                "operator": "<=",
                                                "rightExpression": {
                                                  "hexValue": "3232",
                                                  "id": 810,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": true,
                                                  "kind": "number",
                                                  "lValueRequested": false,
                                                  "nodeType": "Literal",
                                                  "src": "6164:2:1",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_rational_22_by_1",
                                                    "typeString": "int_const 22"
                                                  },
                                                  "value": "22"
                                                },
                                                "src": "6158:8:1",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_bool",
                                                  "typeString": "bool"
                                                }
                                              },
                                              "src": "6147:19:1",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_bool",
                                                "typeString": "bool"
                                              }
                                            },
                                            "falseBody": {
                                              "condition": {
                                                "commonType": {
                                                  "typeIdentifier": "t_bool",
                                                  "typeString": "bool"
                                                },
                                                "id": 824,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftExpression": {
                                                  "commonType": {
                                                    "typeIdentifier": "t_uint8",
                                                    "typeString": "uint8"
                                                  },
                                                  "id": 820,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "leftExpression": {
                                                    "hexValue": "3232",
                                                    "id": 818,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "kind": "number",
                                                    "lValueRequested": false,
                                                    "nodeType": "Literal",
                                                    "src": "6236:2:1",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_rational_22_by_1",
                                                      "typeString": "int_const 22"
                                                    },
                                                    "value": "22"
                                                  },
                                                  "nodeType": "BinaryOperation",
                                                  "operator": "<",
                                                  "rightExpression": {
                                                    "id": 819,
                                                    "name": "id",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 629,
                                                    "src": "6241:2:1",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_uint8",
                                                      "typeString": "uint8"
                                                    }
                                                  },
                                                  "src": "6236:7:1",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                  }
                                                },
                                                "nodeType": "BinaryOperation",
                                                "operator": "&&",
                                                "rightExpression": {
                                                  "commonType": {
                                                    "typeIdentifier": "t_uint8",
                                                    "typeString": "uint8"
                                                  },
                                                  "id": 823,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "leftExpression": {
                                                    "id": 821,
                                                    "name": "id",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 629,
                                                    "src": "6247:2:1",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_uint8",
                                                      "typeString": "uint8"
                                                    }
                                                  },
                                                  "nodeType": "BinaryOperation",
                                                  "operator": "<=",
                                                  "rightExpression": {
                                                    "hexValue": "3235",
                                                    "id": 822,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "kind": "number",
                                                    "lValueRequested": false,
                                                    "nodeType": "Literal",
                                                    "src": "6253:2:1",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_rational_25_by_1",
                                                      "typeString": "int_const 25"
                                                    },
                                                    "value": "25"
                                                  },
                                                  "src": "6247:8:1",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                  }
                                                },
                                                "src": "6236:19:1",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_bool",
                                                  "typeString": "bool"
                                                }
                                              },
                                              "falseBody": {
                                                "condition": {
                                                  "commonType": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                  },
                                                  "id": 836,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "leftExpression": {
                                                    "commonType": {
                                                      "typeIdentifier": "t_uint8",
                                                      "typeString": "uint8"
                                                    },
                                                    "id": 832,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "leftExpression": {
                                                      "hexValue": "3235",
                                                      "id": 830,
                                                      "isConstant": false,
                                                      "isLValue": false,
                                                      "isPure": true,
                                                      "kind": "number",
                                                      "lValueRequested": false,
                                                      "nodeType": "Literal",
                                                      "src": "6324:2:1",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_rational_25_by_1",
                                                        "typeString": "int_const 25"
                                                      },
                                                      "value": "25"
                                                    },
                                                    "nodeType": "BinaryOperation",
                                                    "operator": "<",
                                                    "rightExpression": {
                                                      "id": 831,
                                                      "name": "id",
                                                      "nodeType": "Identifier",
                                                      "overloadedDeclarations": [],
                                                      "referencedDeclaration": 629,
                                                      "src": "6329:2:1",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_uint8",
                                                        "typeString": "uint8"
                                                      }
                                                    },
                                                    "src": "6324:7:1",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_bool",
                                                      "typeString": "bool"
                                                    }
                                                  },
                                                  "nodeType": "BinaryOperation",
                                                  "operator": "&&",
                                                  "rightExpression": {
                                                    "commonType": {
                                                      "typeIdentifier": "t_uint8",
                                                      "typeString": "uint8"
                                                    },
                                                    "id": 835,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "leftExpression": {
                                                      "id": 833,
                                                      "name": "id",
                                                      "nodeType": "Identifier",
                                                      "overloadedDeclarations": [],
                                                      "referencedDeclaration": 629,
                                                      "src": "6335:2:1",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_uint8",
                                                        "typeString": "uint8"
                                                      }
                                                    },
                                                    "nodeType": "BinaryOperation",
                                                    "operator": "<=",
                                                    "rightExpression": {
                                                      "hexValue": "3237",
                                                      "id": 834,
                                                      "isConstant": false,
                                                      "isLValue": false,
                                                      "isPure": true,
                                                      "kind": "number",
                                                      "lValueRequested": false,
                                                      "nodeType": "Literal",
                                                      "src": "6341:2:1",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_rational_27_by_1",
                                                        "typeString": "int_const 27"
                                                      },
                                                      "value": "27"
                                                    },
                                                    "src": "6335:8:1",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_bool",
                                                      "typeString": "bool"
                                                    }
                                                  },
                                                  "src": "6324:19:1",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                  }
                                                },
                                                "falseBody": {
                                                  "condition": {
                                                    "commonType": {
                                                      "typeIdentifier": "t_bool",
                                                      "typeString": "bool"
                                                    },
                                                    "id": 848,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "leftExpression": {
                                                      "commonType": {
                                                        "typeIdentifier": "t_uint8",
                                                        "typeString": "uint8"
                                                      },
                                                      "id": 844,
                                                      "isConstant": false,
                                                      "isLValue": false,
                                                      "isPure": false,
                                                      "lValueRequested": false,
                                                      "leftExpression": {
                                                        "hexValue": "3237",
                                                        "id": 842,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": true,
                                                        "kind": "number",
                                                        "lValueRequested": false,
                                                        "nodeType": "Literal",
                                                        "src": "6414:2:1",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_rational_27_by_1",
                                                          "typeString": "int_const 27"
                                                        },
                                                        "value": "27"
                                                      },
                                                      "nodeType": "BinaryOperation",
                                                      "operator": "<",
                                                      "rightExpression": {
                                                        "id": 843,
                                                        "name": "id",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 629,
                                                        "src": "6419:2:1",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_uint8",
                                                          "typeString": "uint8"
                                                        }
                                                      },
                                                      "src": "6414:7:1",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_bool",
                                                        "typeString": "bool"
                                                      }
                                                    },
                                                    "nodeType": "BinaryOperation",
                                                    "operator": "&&",
                                                    "rightExpression": {
                                                      "commonType": {
                                                        "typeIdentifier": "t_uint8",
                                                        "typeString": "uint8"
                                                      },
                                                      "id": 847,
                                                      "isConstant": false,
                                                      "isLValue": false,
                                                      "isPure": false,
                                                      "lValueRequested": false,
                                                      "leftExpression": {
                                                        "id": 845,
                                                        "name": "id",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 629,
                                                        "src": "6425:2:1",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_uint8",
                                                          "typeString": "uint8"
                                                        }
                                                      },
                                                      "nodeType": "BinaryOperation",
                                                      "operator": "<=",
                                                      "rightExpression": {
                                                        "hexValue": "3238",
                                                        "id": 846,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": true,
                                                        "kind": "number",
                                                        "lValueRequested": false,
                                                        "nodeType": "Literal",
                                                        "src": "6431:2:1",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_rational_28_by_1",
                                                          "typeString": "int_const 28"
                                                        },
                                                        "value": "28"
                                                      },
                                                      "src": "6425:8:1",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_bool",
                                                        "typeString": "bool"
                                                      }
                                                    },
                                                    "src": "6414:19:1",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_bool",
                                                      "typeString": "bool"
                                                    }
                                                  },
                                                  "falseBody": {
                                                    "condition": {
                                                      "commonType": {
                                                        "typeIdentifier": "t_bool",
                                                        "typeString": "bool"
                                                      },
                                                      "id": 860,
                                                      "isConstant": false,
                                                      "isLValue": false,
                                                      "isPure": false,
                                                      "lValueRequested": false,
                                                      "leftExpression": {
                                                        "commonType": {
                                                          "typeIdentifier": "t_uint8",
                                                          "typeString": "uint8"
                                                        },
                                                        "id": 856,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "leftExpression": {
                                                          "hexValue": "3238",
                                                          "id": 854,
                                                          "isConstant": false,
                                                          "isLValue": false,
                                                          "isPure": true,
                                                          "kind": "number",
                                                          "lValueRequested": false,
                                                          "nodeType": "Literal",
                                                          "src": "6499:2:1",
                                                          "typeDescriptions": {
                                                            "typeIdentifier": "t_rational_28_by_1",
                                                            "typeString": "int_const 28"
                                                          },
                                                          "value": "28"
                                                        },
                                                        "nodeType": "BinaryOperation",
                                                        "operator": "<",
                                                        "rightExpression": {
                                                          "id": 855,
                                                          "name": "id",
                                                          "nodeType": "Identifier",
                                                          "overloadedDeclarations": [],
                                                          "referencedDeclaration": 629,
                                                          "src": "6504:2:1",
                                                          "typeDescriptions": {
                                                            "typeIdentifier": "t_uint8",
                                                            "typeString": "uint8"
                                                          }
                                                        },
                                                        "src": "6499:7:1",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_bool",
                                                          "typeString": "bool"
                                                        }
                                                      },
                                                      "nodeType": "BinaryOperation",
                                                      "operator": "&&",
                                                      "rightExpression": {
                                                        "commonType": {
                                                          "typeIdentifier": "t_uint8",
                                                          "typeString": "uint8"
                                                        },
                                                        "id": 859,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "leftExpression": {
                                                          "id": 857,
                                                          "name": "id",
                                                          "nodeType": "Identifier",
                                                          "overloadedDeclarations": [],
                                                          "referencedDeclaration": 629,
                                                          "src": "6510:2:1",
                                                          "typeDescriptions": {
                                                            "typeIdentifier": "t_uint8",
                                                            "typeString": "uint8"
                                                          }
                                                        },
                                                        "nodeType": "BinaryOperation",
                                                        "operator": "<=",
                                                        "rightExpression": {
                                                          "hexValue": "3239",
                                                          "id": 858,
                                                          "isConstant": false,
                                                          "isLValue": false,
                                                          "isPure": true,
                                                          "kind": "number",
                                                          "lValueRequested": false,
                                                          "nodeType": "Literal",
                                                          "src": "6516:2:1",
                                                          "typeDescriptions": {
                                                            "typeIdentifier": "t_rational_29_by_1",
                                                            "typeString": "int_const 29"
                                                          },
                                                          "value": "29"
                                                        },
                                                        "src": "6510:8:1",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_bool",
                                                          "typeString": "bool"
                                                        }
                                                      },
                                                      "src": "6499:19:1",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_bool",
                                                        "typeString": "bool"
                                                      }
                                                    },
                                                    "falseBody": {
                                                      "condition": {
                                                        "commonType": {
                                                          "typeIdentifier": "t_bool",
                                                          "typeString": "bool"
                                                        },
                                                        "id": 872,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "leftExpression": {
                                                          "commonType": {
                                                            "typeIdentifier": "t_uint8",
                                                            "typeString": "uint8"
                                                          },
                                                          "id": 868,
                                                          "isConstant": false,
                                                          "isLValue": false,
                                                          "isPure": false,
                                                          "lValueRequested": false,
                                                          "leftExpression": {
                                                            "hexValue": "3239",
                                                            "id": 866,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": true,
                                                            "kind": "number",
                                                            "lValueRequested": false,
                                                            "nodeType": "Literal",
                                                            "src": "6587:2:1",
                                                            "typeDescriptions": {
                                                              "typeIdentifier": "t_rational_29_by_1",
                                                              "typeString": "int_const 29"
                                                            },
                                                            "value": "29"
                                                          },
                                                          "nodeType": "BinaryOperation",
                                                          "operator": "<",
                                                          "rightExpression": {
                                                            "id": 867,
                                                            "name": "id",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 629,
                                                            "src": "6592:2:1",
                                                            "typeDescriptions": {
                                                              "typeIdentifier": "t_uint8",
                                                              "typeString": "uint8"
                                                            }
                                                          },
                                                          "src": "6587:7:1",
                                                          "typeDescriptions": {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                          }
                                                        },
                                                        "nodeType": "BinaryOperation",
                                                        "operator": "&&",
                                                        "rightExpression": {
                                                          "commonType": {
                                                            "typeIdentifier": "t_uint8",
                                                            "typeString": "uint8"
                                                          },
                                                          "id": 871,
                                                          "isConstant": false,
                                                          "isLValue": false,
                                                          "isPure": false,
                                                          "lValueRequested": false,
                                                          "leftExpression": {
                                                            "id": 869,
                                                            "name": "id",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 629,
                                                            "src": "6598:2:1",
                                                            "typeDescriptions": {
                                                              "typeIdentifier": "t_uint8",
                                                              "typeString": "uint8"
                                                            }
                                                          },
                                                          "nodeType": "BinaryOperation",
                                                          "operator": "<=",
                                                          "rightExpression": {
                                                            "hexValue": "3330",
                                                            "id": 870,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": true,
                                                            "kind": "number",
                                                            "lValueRequested": false,
                                                            "nodeType": "Literal",
                                                            "src": "6604:2:1",
                                                            "typeDescriptions": {
                                                              "typeIdentifier": "t_rational_30_by_1",
                                                              "typeString": "int_const 30"
                                                            },
                                                            "value": "30"
                                                          },
                                                          "src": "6598:8:1",
                                                          "typeDescriptions": {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                          }
                                                        },
                                                        "src": "6587:19:1",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_bool",
                                                          "typeString": "bool"
                                                        }
                                                      },
                                                      "falseBody": {
                                                        "condition": {
                                                          "commonType": {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                          },
                                                          "id": 884,
                                                          "isConstant": false,
                                                          "isLValue": false,
                                                          "isPure": false,
                                                          "lValueRequested": false,
                                                          "leftExpression": {
                                                            "commonType": {
                                                              "typeIdentifier": "t_uint8",
                                                              "typeString": "uint8"
                                                            },
                                                            "id": 880,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": false,
                                                            "lValueRequested": false,
                                                            "leftExpression": {
                                                              "hexValue": "3330",
                                                              "id": 878,
                                                              "isConstant": false,
                                                              "isLValue": false,
                                                              "isPure": true,
                                                              "kind": "number",
                                                              "lValueRequested": false,
                                                              "nodeType": "Literal",
                                                              "src": "6678:2:1",
                                                              "typeDescriptions": {
                                                                "typeIdentifier": "t_rational_30_by_1",
                                                                "typeString": "int_const 30"
                                                              },
                                                              "value": "30"
                                                            },
                                                            "nodeType": "BinaryOperation",
                                                            "operator": "<",
                                                            "rightExpression": {
                                                              "id": 879,
                                                              "name": "id",
                                                              "nodeType": "Identifier",
                                                              "overloadedDeclarations": [],
                                                              "referencedDeclaration": 629,
                                                              "src": "6683:2:1",
                                                              "typeDescriptions": {
                                                                "typeIdentifier": "t_uint8",
                                                                "typeString": "uint8"
                                                              }
                                                            },
                                                            "src": "6678:7:1",
                                                            "typeDescriptions": {
                                                              "typeIdentifier": "t_bool",
                                                              "typeString": "bool"
                                                            }
                                                          },
                                                          "nodeType": "BinaryOperation",
                                                          "operator": "&&",
                                                          "rightExpression": {
                                                            "commonType": {
                                                              "typeIdentifier": "t_uint8",
                                                              "typeString": "uint8"
                                                            },
                                                            "id": 883,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": false,
                                                            "lValueRequested": false,
                                                            "leftExpression": {
                                                              "id": 881,
                                                              "name": "id",
                                                              "nodeType": "Identifier",
                                                              "overloadedDeclarations": [],
                                                              "referencedDeclaration": 629,
                                                              "src": "6689:2:1",
                                                              "typeDescriptions": {
                                                                "typeIdentifier": "t_uint8",
                                                                "typeString": "uint8"
                                                              }
                                                            },
                                                            "nodeType": "BinaryOperation",
                                                            "operator": "<=",
                                                            "rightExpression": {
                                                              "hexValue": "3331",
                                                              "id": 882,
                                                              "isConstant": false,
                                                              "isLValue": false,
                                                              "isPure": true,
                                                              "kind": "number",
                                                              "lValueRequested": false,
                                                              "nodeType": "Literal",
                                                              "src": "6695:2:1",
                                                              "typeDescriptions": {
                                                                "typeIdentifier": "t_rational_31_by_1",
                                                                "typeString": "int_const 31"
                                                              },
                                                              "value": "31"
                                                            },
                                                            "src": "6689:8:1",
                                                            "typeDescriptions": {
                                                              "typeIdentifier": "t_bool",
                                                              "typeString": "bool"
                                                            }
                                                          },
                                                          "src": "6678:19:1",
                                                          "typeDescriptions": {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                          }
                                                        },
                                                        "falseBody": {
                                                          "condition": {
                                                            "commonType": {
                                                              "typeIdentifier": "t_bool",
                                                              "typeString": "bool"
                                                            },
                                                            "id": 896,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": false,
                                                            "lValueRequested": false,
                                                            "leftExpression": {
                                                              "commonType": {
                                                                "typeIdentifier": "t_uint8",
                                                                "typeString": "uint8"
                                                              },
                                                              "id": 892,
                                                              "isConstant": false,
                                                              "isLValue": false,
                                                              "isPure": false,
                                                              "lValueRequested": false,
                                                              "leftExpression": {
                                                                "hexValue": "3331",
                                                                "id": 890,
                                                                "isConstant": false,
                                                                "isLValue": false,
                                                                "isPure": true,
                                                                "kind": "number",
                                                                "lValueRequested": false,
                                                                "nodeType": "Literal",
                                                                "src": "6762:2:1",
                                                                "typeDescriptions": {
                                                                  "typeIdentifier": "t_rational_31_by_1",
                                                                  "typeString": "int_const 31"
                                                                },
                                                                "value": "31"
                                                              },
                                                              "nodeType": "BinaryOperation",
                                                              "operator": "<",
                                                              "rightExpression": {
                                                                "id": 891,
                                                                "name": "id",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 629,
                                                                "src": "6767:2:1",
                                                                "typeDescriptions": {
                                                                  "typeIdentifier": "t_uint8",
                                                                  "typeString": "uint8"
                                                                }
                                                              },
                                                              "src": "6762:7:1",
                                                              "typeDescriptions": {
                                                                "typeIdentifier": "t_bool",
                                                                "typeString": "bool"
                                                              }
                                                            },
                                                            "nodeType": "BinaryOperation",
                                                            "operator": "&&",
                                                            "rightExpression": {
                                                              "commonType": {
                                                                "typeIdentifier": "t_uint8",
                                                                "typeString": "uint8"
                                                              },
                                                              "id": 895,
                                                              "isConstant": false,
                                                              "isLValue": false,
                                                              "isPure": false,
                                                              "lValueRequested": false,
                                                              "leftExpression": {
                                                                "id": 893,
                                                                "name": "id",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 629,
                                                                "src": "6773:2:1",
                                                                "typeDescriptions": {
                                                                  "typeIdentifier": "t_uint8",
                                                                  "typeString": "uint8"
                                                                }
                                                              },
                                                              "nodeType": "BinaryOperation",
                                                              "operator": "<=",
                                                              "rightExpression": {
                                                                "hexValue": "3332",
                                                                "id": 894,
                                                                "isConstant": false,
                                                                "isLValue": false,
                                                                "isPure": true,
                                                                "kind": "number",
                                                                "lValueRequested": false,
                                                                "nodeType": "Literal",
                                                                "src": "6779:2:1",
                                                                "typeDescriptions": {
                                                                  "typeIdentifier": "t_rational_32_by_1",
                                                                  "typeString": "int_const 32"
                                                                },
                                                                "value": "32"
                                                              },
                                                              "src": "6773:8:1",
                                                              "typeDescriptions": {
                                                                "typeIdentifier": "t_bool",
                                                                "typeString": "bool"
                                                              }
                                                            },
                                                            "src": "6762:19:1",
                                                            "typeDescriptions": {
                                                              "typeIdentifier": "t_bool",
                                                              "typeString": "bool"
                                                            }
                                                          },
                                                          "falseBody": {
                                                            "condition": {
                                                              "commonType": {
                                                                "typeIdentifier": "t_bool",
                                                                "typeString": "bool"
                                                              },
                                                              "id": 908,
                                                              "isConstant": false,
                                                              "isLValue": false,
                                                              "isPure": false,
                                                              "lValueRequested": false,
                                                              "leftExpression": {
                                                                "commonType": {
                                                                  "typeIdentifier": "t_uint8",
                                                                  "typeString": "uint8"
                                                                },
                                                                "id": 904,
                                                                "isConstant": false,
                                                                "isLValue": false,
                                                                "isPure": false,
                                                                "lValueRequested": false,
                                                                "leftExpression": {
                                                                  "hexValue": "3332",
                                                                  "id": 902,
                                                                  "isConstant": false,
                                                                  "isLValue": false,
                                                                  "isPure": true,
                                                                  "kind": "number",
                                                                  "lValueRequested": false,
                                                                  "nodeType": "Literal",
                                                                  "src": "6848:2:1",
                                                                  "typeDescriptions": {
                                                                    "typeIdentifier": "t_rational_32_by_1",
                                                                    "typeString": "int_const 32"
                                                                  },
                                                                  "value": "32"
                                                                },
                                                                "nodeType": "BinaryOperation",
                                                                "operator": "<",
                                                                "rightExpression": {
                                                                  "id": 903,
                                                                  "name": "id",
                                                                  "nodeType": "Identifier",
                                                                  "overloadedDeclarations": [],
                                                                  "referencedDeclaration": 629,
                                                                  "src": "6853:2:1",
                                                                  "typeDescriptions": {
                                                                    "typeIdentifier": "t_uint8",
                                                                    "typeString": "uint8"
                                                                  }
                                                                },
                                                                "src": "6848:7:1",
                                                                "typeDescriptions": {
                                                                  "typeIdentifier": "t_bool",
                                                                  "typeString": "bool"
                                                                }
                                                              },
                                                              "nodeType": "BinaryOperation",
                                                              "operator": "&&",
                                                              "rightExpression": {
                                                                "commonType": {
                                                                  "typeIdentifier": "t_uint8",
                                                                  "typeString": "uint8"
                                                                },
                                                                "id": 907,
                                                                "isConstant": false,
                                                                "isLValue": false,
                                                                "isPure": false,
                                                                "lValueRequested": false,
                                                                "leftExpression": {
                                                                  "id": 905,
                                                                  "name": "id",
                                                                  "nodeType": "Identifier",
                                                                  "overloadedDeclarations": [],
                                                                  "referencedDeclaration": 629,
                                                                  "src": "6859:2:1",
                                                                  "typeDescriptions": {
                                                                    "typeIdentifier": "t_uint8",
                                                                    "typeString": "uint8"
                                                                  }
                                                                },
                                                                "nodeType": "BinaryOperation",
                                                                "operator": "<=",
                                                                "rightExpression": {
                                                                  "hexValue": "3333",
                                                                  "id": 906,
                                                                  "isConstant": false,
                                                                  "isLValue": false,
                                                                  "isPure": true,
                                                                  "kind": "number",
                                                                  "lValueRequested": false,
                                                                  "nodeType": "Literal",
                                                                  "src": "6865:2:1",
                                                                  "typeDescriptions": {
                                                                    "typeIdentifier": "t_rational_33_by_1",
                                                                    "typeString": "int_const 33"
                                                                  },
                                                                  "value": "33"
                                                                },
                                                                "src": "6859:8:1",
                                                                "typeDescriptions": {
                                                                  "typeIdentifier": "t_bool",
                                                                  "typeString": "bool"
                                                                }
                                                              },
                                                              "src": "6848:19:1",
                                                              "typeDescriptions": {
                                                                "typeIdentifier": "t_bool",
                                                                "typeString": "bool"
                                                              }
                                                            },
                                                            "falseBody": {
                                                              "condition": {
                                                                "commonType": {
                                                                  "typeIdentifier": "t_bool",
                                                                  "typeString": "bool"
                                                                },
                                                                "id": 920,
                                                                "isConstant": false,
                                                                "isLValue": false,
                                                                "isPure": false,
                                                                "lValueRequested": false,
                                                                "leftExpression": {
                                                                  "commonType": {
                                                                    "typeIdentifier": "t_uint8",
                                                                    "typeString": "uint8"
                                                                  },
                                                                  "id": 916,
                                                                  "isConstant": false,
                                                                  "isLValue": false,
                                                                  "isPure": false,
                                                                  "lValueRequested": false,
                                                                  "leftExpression": {
                                                                    "hexValue": "3333",
                                                                    "id": 914,
                                                                    "isConstant": false,
                                                                    "isLValue": false,
                                                                    "isPure": true,
                                                                    "kind": "number",
                                                                    "lValueRequested": false,
                                                                    "nodeType": "Literal",
                                                                    "src": "6932:2:1",
                                                                    "typeDescriptions": {
                                                                      "typeIdentifier": "t_rational_33_by_1",
                                                                      "typeString": "int_const 33"
                                                                    },
                                                                    "value": "33"
                                                                  },
                                                                  "nodeType": "BinaryOperation",
                                                                  "operator": "<",
                                                                  "rightExpression": {
                                                                    "id": 915,
                                                                    "name": "id",
                                                                    "nodeType": "Identifier",
                                                                    "overloadedDeclarations": [],
                                                                    "referencedDeclaration": 629,
                                                                    "src": "6937:2:1",
                                                                    "typeDescriptions": {
                                                                      "typeIdentifier": "t_uint8",
                                                                      "typeString": "uint8"
                                                                    }
                                                                  },
                                                                  "src": "6932:7:1",
                                                                  "typeDescriptions": {
                                                                    "typeIdentifier": "t_bool",
                                                                    "typeString": "bool"
                                                                  }
                                                                },
                                                                "nodeType": "BinaryOperation",
                                                                "operator": "&&",
                                                                "rightExpression": {
                                                                  "commonType": {
                                                                    "typeIdentifier": "t_uint8",
                                                                    "typeString": "uint8"
                                                                  },
                                                                  "id": 919,
                                                                  "isConstant": false,
                                                                  "isLValue": false,
                                                                  "isPure": false,
                                                                  "lValueRequested": false,
                                                                  "leftExpression": {
                                                                    "id": 917,
                                                                    "name": "id",
                                                                    "nodeType": "Identifier",
                                                                    "overloadedDeclarations": [],
                                                                    "referencedDeclaration": 629,
                                                                    "src": "6943:2:1",
                                                                    "typeDescriptions": {
                                                                      "typeIdentifier": "t_uint8",
                                                                      "typeString": "uint8"
                                                                    }
                                                                  },
                                                                  "nodeType": "BinaryOperation",
                                                                  "operator": "<=",
                                                                  "rightExpression": {
                                                                    "hexValue": "3334",
                                                                    "id": 918,
                                                                    "isConstant": false,
                                                                    "isLValue": false,
                                                                    "isPure": true,
                                                                    "kind": "number",
                                                                    "lValueRequested": false,
                                                                    "nodeType": "Literal",
                                                                    "src": "6949:2:1",
                                                                    "typeDescriptions": {
                                                                      "typeIdentifier": "t_rational_34_by_1",
                                                                      "typeString": "int_const 34"
                                                                    },
                                                                    "value": "34"
                                                                  },
                                                                  "src": "6943:8:1",
                                                                  "typeDescriptions": {
                                                                    "typeIdentifier": "t_bool",
                                                                    "typeString": "bool"
                                                                  }
                                                                },
                                                                "src": "6932:19:1",
                                                                "typeDescriptions": {
                                                                  "typeIdentifier": "t_bool",
                                                                  "typeString": "bool"
                                                                }
                                                              },
                                                              "falseBody": {
                                                                "condition": {
                                                                  "commonType": {
                                                                    "typeIdentifier": "t_bool",
                                                                    "typeString": "bool"
                                                                  },
                                                                  "id": 932,
                                                                  "isConstant": false,
                                                                  "isLValue": false,
                                                                  "isPure": false,
                                                                  "lValueRequested": false,
                                                                  "leftExpression": {
                                                                    "commonType": {
                                                                      "typeIdentifier": "t_uint8",
                                                                      "typeString": "uint8"
                                                                    },
                                                                    "id": 928,
                                                                    "isConstant": false,
                                                                    "isLValue": false,
                                                                    "isPure": false,
                                                                    "lValueRequested": false,
                                                                    "leftExpression": {
                                                                      "hexValue": "3334",
                                                                      "id": 926,
                                                                      "isConstant": false,
                                                                      "isLValue": false,
                                                                      "isPure": true,
                                                                      "kind": "number",
                                                                      "lValueRequested": false,
                                                                      "nodeType": "Literal",
                                                                      "src": "7019:2:1",
                                                                      "typeDescriptions": {
                                                                        "typeIdentifier": "t_rational_34_by_1",
                                                                        "typeString": "int_const 34"
                                                                      },
                                                                      "value": "34"
                                                                    },
                                                                    "nodeType": "BinaryOperation",
                                                                    "operator": "<",
                                                                    "rightExpression": {
                                                                      "id": 927,
                                                                      "name": "id",
                                                                      "nodeType": "Identifier",
                                                                      "overloadedDeclarations": [],
                                                                      "referencedDeclaration": 629,
                                                                      "src": "7024:2:1",
                                                                      "typeDescriptions": {
                                                                        "typeIdentifier": "t_uint8",
                                                                        "typeString": "uint8"
                                                                      }
                                                                    },
                                                                    "src": "7019:7:1",
                                                                    "typeDescriptions": {
                                                                      "typeIdentifier": "t_bool",
                                                                      "typeString": "bool"
                                                                    }
                                                                  },
                                                                  "nodeType": "BinaryOperation",
                                                                  "operator": "&&",
                                                                  "rightExpression": {
                                                                    "commonType": {
                                                                      "typeIdentifier": "t_uint8",
                                                                      "typeString": "uint8"
                                                                    },
                                                                    "id": 931,
                                                                    "isConstant": false,
                                                                    "isLValue": false,
                                                                    "isPure": false,
                                                                    "lValueRequested": false,
                                                                    "leftExpression": {
                                                                      "id": 929,
                                                                      "name": "id",
                                                                      "nodeType": "Identifier",
                                                                      "overloadedDeclarations": [],
                                                                      "referencedDeclaration": 629,
                                                                      "src": "7030:2:1",
                                                                      "typeDescriptions": {
                                                                        "typeIdentifier": "t_uint8",
                                                                        "typeString": "uint8"
                                                                      }
                                                                    },
                                                                    "nodeType": "BinaryOperation",
                                                                    "operator": "<=",
                                                                    "rightExpression": {
                                                                      "hexValue": "3335",
                                                                      "id": 930,
                                                                      "isConstant": false,
                                                                      "isLValue": false,
                                                                      "isPure": true,
                                                                      "kind": "number",
                                                                      "lValueRequested": false,
                                                                      "nodeType": "Literal",
                                                                      "src": "7036:2:1",
                                                                      "typeDescriptions": {
                                                                        "typeIdentifier": "t_rational_35_by_1",
                                                                        "typeString": "int_const 35"
                                                                      },
                                                                      "value": "35"
                                                                    },
                                                                    "src": "7030:8:1",
                                                                    "typeDescriptions": {
                                                                      "typeIdentifier": "t_bool",
                                                                      "typeString": "bool"
                                                                    }
                                                                  },
                                                                  "src": "7019:19:1",
                                                                  "typeDescriptions": {
                                                                    "typeIdentifier": "t_bool",
                                                                    "typeString": "bool"
                                                                  }
                                                                },
                                                                "falseBody": {
                                                                  "condition": {
                                                                    "commonType": {
                                                                      "typeIdentifier": "t_bool",
                                                                      "typeString": "bool"
                                                                    },
                                                                    "id": 944,
                                                                    "isConstant": false,
                                                                    "isLValue": false,
                                                                    "isPure": false,
                                                                    "lValueRequested": false,
                                                                    "leftExpression": {
                                                                      "commonType": {
                                                                        "typeIdentifier": "t_uint8",
                                                                        "typeString": "uint8"
                                                                      },
                                                                      "id": 940,
                                                                      "isConstant": false,
                                                                      "isLValue": false,
                                                                      "isPure": false,
                                                                      "lValueRequested": false,
                                                                      "leftExpression": {
                                                                        "hexValue": "3335",
                                                                        "id": 938,
                                                                        "isConstant": false,
                                                                        "isLValue": false,
                                                                        "isPure": true,
                                                                        "kind": "number",
                                                                        "lValueRequested": false,
                                                                        "nodeType": "Literal",
                                                                        "src": "7107:2:1",
                                                                        "typeDescriptions": {
                                                                          "typeIdentifier": "t_rational_35_by_1",
                                                                          "typeString": "int_const 35"
                                                                        },
                                                                        "value": "35"
                                                                      },
                                                                      "nodeType": "BinaryOperation",
                                                                      "operator": "<",
                                                                      "rightExpression": {
                                                                        "id": 939,
                                                                        "name": "id",
                                                                        "nodeType": "Identifier",
                                                                        "overloadedDeclarations": [],
                                                                        "referencedDeclaration": 629,
                                                                        "src": "7112:2:1",
                                                                        "typeDescriptions": {
                                                                          "typeIdentifier": "t_uint8",
                                                                          "typeString": "uint8"
                                                                        }
                                                                      },
                                                                      "src": "7107:7:1",
                                                                      "typeDescriptions": {
                                                                        "typeIdentifier": "t_bool",
                                                                        "typeString": "bool"
                                                                      }
                                                                    },
                                                                    "nodeType": "BinaryOperation",
                                                                    "operator": "&&",
                                                                    "rightExpression": {
                                                                      "commonType": {
                                                                        "typeIdentifier": "t_uint8",
                                                                        "typeString": "uint8"
                                                                      },
                                                                      "id": 943,
                                                                      "isConstant": false,
                                                                      "isLValue": false,
                                                                      "isPure": false,
                                                                      "lValueRequested": false,
                                                                      "leftExpression": {
                                                                        "id": 941,
                                                                        "name": "id",
                                                                        "nodeType": "Identifier",
                                                                        "overloadedDeclarations": [],
                                                                        "referencedDeclaration": 629,
                                                                        "src": "7118:2:1",
                                                                        "typeDescriptions": {
                                                                          "typeIdentifier": "t_uint8",
                                                                          "typeString": "uint8"
                                                                        }
                                                                      },
                                                                      "nodeType": "BinaryOperation",
                                                                      "operator": "<=",
                                                                      "rightExpression": {
                                                                        "hexValue": "3336",
                                                                        "id": 942,
                                                                        "isConstant": false,
                                                                        "isLValue": false,
                                                                        "isPure": true,
                                                                        "kind": "number",
                                                                        "lValueRequested": false,
                                                                        "nodeType": "Literal",
                                                                        "src": "7124:2:1",
                                                                        "typeDescriptions": {
                                                                          "typeIdentifier": "t_rational_36_by_1",
                                                                          "typeString": "int_const 36"
                                                                        },
                                                                        "value": "36"
                                                                      },
                                                                      "src": "7118:8:1",
                                                                      "typeDescriptions": {
                                                                        "typeIdentifier": "t_bool",
                                                                        "typeString": "bool"
                                                                      }
                                                                    },
                                                                    "src": "7107:19:1",
                                                                    "typeDescriptions": {
                                                                      "typeIdentifier": "t_bool",
                                                                      "typeString": "bool"
                                                                    }
                                                                  },
                                                                  "falseBody": {
                                                                    "condition": {
                                                                      "commonType": {
                                                                        "typeIdentifier": "t_bool",
                                                                        "typeString": "bool"
                                                                      },
                                                                      "id": 956,
                                                                      "isConstant": false,
                                                                      "isLValue": false,
                                                                      "isPure": false,
                                                                      "lValueRequested": false,
                                                                      "leftExpression": {
                                                                        "commonType": {
                                                                          "typeIdentifier": "t_uint8",
                                                                          "typeString": "uint8"
                                                                        },
                                                                        "id": 952,
                                                                        "isConstant": false,
                                                                        "isLValue": false,
                                                                        "isPure": false,
                                                                        "lValueRequested": false,
                                                                        "leftExpression": {
                                                                          "hexValue": "3336",
                                                                          "id": 950,
                                                                          "isConstant": false,
                                                                          "isLValue": false,
                                                                          "isPure": true,
                                                                          "kind": "number",
                                                                          "lValueRequested": false,
                                                                          "nodeType": "Literal",
                                                                          "src": "7193:2:1",
                                                                          "typeDescriptions": {
                                                                            "typeIdentifier": "t_rational_36_by_1",
                                                                            "typeString": "int_const 36"
                                                                          },
                                                                          "value": "36"
                                                                        },
                                                                        "nodeType": "BinaryOperation",
                                                                        "operator": "<",
                                                                        "rightExpression": {
                                                                          "id": 951,
                                                                          "name": "id",
                                                                          "nodeType": "Identifier",
                                                                          "overloadedDeclarations": [],
                                                                          "referencedDeclaration": 629,
                                                                          "src": "7198:2:1",
                                                                          "typeDescriptions": {
                                                                            "typeIdentifier": "t_uint8",
                                                                            "typeString": "uint8"
                                                                          }
                                                                        },
                                                                        "src": "7193:7:1",
                                                                        "typeDescriptions": {
                                                                          "typeIdentifier": "t_bool",
                                                                          "typeString": "bool"
                                                                        }
                                                                      },
                                                                      "nodeType": "BinaryOperation",
                                                                      "operator": "&&",
                                                                      "rightExpression": {
                                                                        "commonType": {
                                                                          "typeIdentifier": "t_uint8",
                                                                          "typeString": "uint8"
                                                                        },
                                                                        "id": 955,
                                                                        "isConstant": false,
                                                                        "isLValue": false,
                                                                        "isPure": false,
                                                                        "lValueRequested": false,
                                                                        "leftExpression": {
                                                                          "id": 953,
                                                                          "name": "id",
                                                                          "nodeType": "Identifier",
                                                                          "overloadedDeclarations": [],
                                                                          "referencedDeclaration": 629,
                                                                          "src": "7204:2:1",
                                                                          "typeDescriptions": {
                                                                            "typeIdentifier": "t_uint8",
                                                                            "typeString": "uint8"
                                                                          }
                                                                        },
                                                                        "nodeType": "BinaryOperation",
                                                                        "operator": "<=",
                                                                        "rightExpression": {
                                                                          "hexValue": "3337",
                                                                          "id": 954,
                                                                          "isConstant": false,
                                                                          "isLValue": false,
                                                                          "isPure": true,
                                                                          "kind": "number",
                                                                          "lValueRequested": false,
                                                                          "nodeType": "Literal",
                                                                          "src": "7210:2:1",
                                                                          "typeDescriptions": {
                                                                            "typeIdentifier": "t_rational_37_by_1",
                                                                            "typeString": "int_const 37"
                                                                          },
                                                                          "value": "37"
                                                                        },
                                                                        "src": "7204:8:1",
                                                                        "typeDescriptions": {
                                                                          "typeIdentifier": "t_bool",
                                                                          "typeString": "bool"
                                                                        }
                                                                      },
                                                                      "src": "7193:19:1",
                                                                      "typeDescriptions": {
                                                                        "typeIdentifier": "t_bool",
                                                                        "typeString": "bool"
                                                                      }
                                                                    },
                                                                    "falseBody": {
                                                                      "condition": {
                                                                        "commonType": {
                                                                          "typeIdentifier": "t_bool",
                                                                          "typeString": "bool"
                                                                        },
                                                                        "id": 968,
                                                                        "isConstant": false,
                                                                        "isLValue": false,
                                                                        "isPure": false,
                                                                        "lValueRequested": false,
                                                                        "leftExpression": {
                                                                          "commonType": {
                                                                            "typeIdentifier": "t_uint8",
                                                                            "typeString": "uint8"
                                                                          },
                                                                          "id": 964,
                                                                          "isConstant": false,
                                                                          "isLValue": false,
                                                                          "isPure": false,
                                                                          "lValueRequested": false,
                                                                          "leftExpression": {
                                                                            "hexValue": "3337",
                                                                            "id": 962,
                                                                            "isConstant": false,
                                                                            "isLValue": false,
                                                                            "isPure": true,
                                                                            "kind": "number",
                                                                            "lValueRequested": false,
                                                                            "nodeType": "Literal",
                                                                            "src": "7276:2:1",
                                                                            "typeDescriptions": {
                                                                              "typeIdentifier": "t_rational_37_by_1",
                                                                              "typeString": "int_const 37"
                                                                            },
                                                                            "value": "37"
                                                                          },
                                                                          "nodeType": "BinaryOperation",
                                                                          "operator": "<",
                                                                          "rightExpression": {
                                                                            "id": 963,
                                                                            "name": "id",
                                                                            "nodeType": "Identifier",
                                                                            "overloadedDeclarations": [],
                                                                            "referencedDeclaration": 629,
                                                                            "src": "7281:2:1",
                                                                            "typeDescriptions": {
                                                                              "typeIdentifier": "t_uint8",
                                                                              "typeString": "uint8"
                                                                            }
                                                                          },
                                                                          "src": "7276:7:1",
                                                                          "typeDescriptions": {
                                                                            "typeIdentifier": "t_bool",
                                                                            "typeString": "bool"
                                                                          }
                                                                        },
                                                                        "nodeType": "BinaryOperation",
                                                                        "operator": "&&",
                                                                        "rightExpression": {
                                                                          "commonType": {
                                                                            "typeIdentifier": "t_uint8",
                                                                            "typeString": "uint8"
                                                                          },
                                                                          "id": 967,
                                                                          "isConstant": false,
                                                                          "isLValue": false,
                                                                          "isPure": false,
                                                                          "lValueRequested": false,
                                                                          "leftExpression": {
                                                                            "id": 965,
                                                                            "name": "id",
                                                                            "nodeType": "Identifier",
                                                                            "overloadedDeclarations": [],
                                                                            "referencedDeclaration": 629,
                                                                            "src": "7287:2:1",
                                                                            "typeDescriptions": {
                                                                              "typeIdentifier": "t_uint8",
                                                                              "typeString": "uint8"
                                                                            }
                                                                          },
                                                                          "nodeType": "BinaryOperation",
                                                                          "operator": "<=",
                                                                          "rightExpression": {
                                                                            "hexValue": "3338",
                                                                            "id": 966,
                                                                            "isConstant": false,
                                                                            "isLValue": false,
                                                                            "isPure": true,
                                                                            "kind": "number",
                                                                            "lValueRequested": false,
                                                                            "nodeType": "Literal",
                                                                            "src": "7293:2:1",
                                                                            "typeDescriptions": {
                                                                              "typeIdentifier": "t_rational_38_by_1",
                                                                              "typeString": "int_const 38"
                                                                            },
                                                                            "value": "38"
                                                                          },
                                                                          "src": "7287:8:1",
                                                                          "typeDescriptions": {
                                                                            "typeIdentifier": "t_bool",
                                                                            "typeString": "bool"
                                                                          }
                                                                        },
                                                                        "src": "7276:19:1",
                                                                        "typeDescriptions": {
                                                                          "typeIdentifier": "t_bool",
                                                                          "typeString": "bool"
                                                                        }
                                                                      },
                                                                      "falseBody": {
                                                                        "condition": {
                                                                          "commonType": {
                                                                            "typeIdentifier": "t_bool",
                                                                            "typeString": "bool"
                                                                          },
                                                                          "id": 980,
                                                                          "isConstant": false,
                                                                          "isLValue": false,
                                                                          "isPure": false,
                                                                          "lValueRequested": false,
                                                                          "leftExpression": {
                                                                            "commonType": {
                                                                              "typeIdentifier": "t_uint8",
                                                                              "typeString": "uint8"
                                                                            },
                                                                            "id": 976,
                                                                            "isConstant": false,
                                                                            "isLValue": false,
                                                                            "isPure": false,
                                                                            "lValueRequested": false,
                                                                            "leftExpression": {
                                                                              "hexValue": "3338",
                                                                              "id": 974,
                                                                              "isConstant": false,
                                                                              "isLValue": false,
                                                                              "isPure": true,
                                                                              "kind": "number",
                                                                              "lValueRequested": false,
                                                                              "nodeType": "Literal",
                                                                              "src": "7362:2:1",
                                                                              "typeDescriptions": {
                                                                                "typeIdentifier": "t_rational_38_by_1",
                                                                                "typeString": "int_const 38"
                                                                              },
                                                                              "value": "38"
                                                                            },
                                                                            "nodeType": "BinaryOperation",
                                                                            "operator": "<",
                                                                            "rightExpression": {
                                                                              "id": 975,
                                                                              "name": "id",
                                                                              "nodeType": "Identifier",
                                                                              "overloadedDeclarations": [],
                                                                              "referencedDeclaration": 629,
                                                                              "src": "7367:2:1",
                                                                              "typeDescriptions": {
                                                                                "typeIdentifier": "t_uint8",
                                                                                "typeString": "uint8"
                                                                              }
                                                                            },
                                                                            "src": "7362:7:1",
                                                                            "typeDescriptions": {
                                                                              "typeIdentifier": "t_bool",
                                                                              "typeString": "bool"
                                                                            }
                                                                          },
                                                                          "nodeType": "BinaryOperation",
                                                                          "operator": "&&",
                                                                          "rightExpression": {
                                                                            "commonType": {
                                                                              "typeIdentifier": "t_uint8",
                                                                              "typeString": "uint8"
                                                                            },
                                                                            "id": 979,
                                                                            "isConstant": false,
                                                                            "isLValue": false,
                                                                            "isPure": false,
                                                                            "lValueRequested": false,
                                                                            "leftExpression": {
                                                                              "id": 977,
                                                                              "name": "id",
                                                                              "nodeType": "Identifier",
                                                                              "overloadedDeclarations": [],
                                                                              "referencedDeclaration": 629,
                                                                              "src": "7373:2:1",
                                                                              "typeDescriptions": {
                                                                                "typeIdentifier": "t_uint8",
                                                                                "typeString": "uint8"
                                                                              }
                                                                            },
                                                                            "nodeType": "BinaryOperation",
                                                                            "operator": "<=",
                                                                            "rightExpression": {
                                                                              "hexValue": "3339",
                                                                              "id": 978,
                                                                              "isConstant": false,
                                                                              "isLValue": false,
                                                                              "isPure": true,
                                                                              "kind": "number",
                                                                              "lValueRequested": false,
                                                                              "nodeType": "Literal",
                                                                              "src": "7379:2:1",
                                                                              "typeDescriptions": {
                                                                                "typeIdentifier": "t_rational_39_by_1",
                                                                                "typeString": "int_const 39"
                                                                              },
                                                                              "value": "39"
                                                                            },
                                                                            "src": "7373:8:1",
                                                                            "typeDescriptions": {
                                                                              "typeIdentifier": "t_bool",
                                                                              "typeString": "bool"
                                                                            }
                                                                          },
                                                                          "src": "7362:19:1",
                                                                          "typeDescriptions": {
                                                                            "typeIdentifier": "t_bool",
                                                                            "typeString": "bool"
                                                                          }
                                                                        },
                                                                        "falseBody": {
                                                                          "condition": {
                                                                            "commonType": {
                                                                              "typeIdentifier": "t_bool",
                                                                              "typeString": "bool"
                                                                            },
                                                                            "id": 992,
                                                                            "isConstant": false,
                                                                            "isLValue": false,
                                                                            "isPure": false,
                                                                            "lValueRequested": false,
                                                                            "leftExpression": {
                                                                              "commonType": {
                                                                                "typeIdentifier": "t_uint8",
                                                                                "typeString": "uint8"
                                                                              },
                                                                              "id": 988,
                                                                              "isConstant": false,
                                                                              "isLValue": false,
                                                                              "isPure": false,
                                                                              "lValueRequested": false,
                                                                              "leftExpression": {
                                                                                "hexValue": "3339",
                                                                                "id": 986,
                                                                                "isConstant": false,
                                                                                "isLValue": false,
                                                                                "isPure": true,
                                                                                "kind": "number",
                                                                                "lValueRequested": false,
                                                                                "nodeType": "Literal",
                                                                                "src": "7446:2:1",
                                                                                "typeDescriptions": {
                                                                                  "typeIdentifier": "t_rational_39_by_1",
                                                                                  "typeString": "int_const 39"
                                                                                },
                                                                                "value": "39"
                                                                              },
                                                                              "nodeType": "BinaryOperation",
                                                                              "operator": "<",
                                                                              "rightExpression": {
                                                                                "id": 987,
                                                                                "name": "id",
                                                                                "nodeType": "Identifier",
                                                                                "overloadedDeclarations": [],
                                                                                "referencedDeclaration": 629,
                                                                                "src": "7451:2:1",
                                                                                "typeDescriptions": {
                                                                                  "typeIdentifier": "t_uint8",
                                                                                  "typeString": "uint8"
                                                                                }
                                                                              },
                                                                              "src": "7446:7:1",
                                                                              "typeDescriptions": {
                                                                                "typeIdentifier": "t_bool",
                                                                                "typeString": "bool"
                                                                              }
                                                                            },
                                                                            "nodeType": "BinaryOperation",
                                                                            "operator": "&&",
                                                                            "rightExpression": {
                                                                              "commonType": {
                                                                                "typeIdentifier": "t_uint8",
                                                                                "typeString": "uint8"
                                                                              },
                                                                              "id": 991,
                                                                              "isConstant": false,
                                                                              "isLValue": false,
                                                                              "isPure": false,
                                                                              "lValueRequested": false,
                                                                              "leftExpression": {
                                                                                "id": 989,
                                                                                "name": "id",
                                                                                "nodeType": "Identifier",
                                                                                "overloadedDeclarations": [],
                                                                                "referencedDeclaration": 629,
                                                                                "src": "7457:2:1",
                                                                                "typeDescriptions": {
                                                                                  "typeIdentifier": "t_uint8",
                                                                                  "typeString": "uint8"
                                                                                }
                                                                              },
                                                                              "nodeType": "BinaryOperation",
                                                                              "operator": "<=",
                                                                              "rightExpression": {
                                                                                "hexValue": "3430",
                                                                                "id": 990,
                                                                                "isConstant": false,
                                                                                "isLValue": false,
                                                                                "isPure": true,
                                                                                "kind": "number",
                                                                                "lValueRequested": false,
                                                                                "nodeType": "Literal",
                                                                                "src": "7463:2:1",
                                                                                "typeDescriptions": {
                                                                                  "typeIdentifier": "t_rational_40_by_1",
                                                                                  "typeString": "int_const 40"
                                                                                },
                                                                                "value": "40"
                                                                              },
                                                                              "src": "7457:8:1",
                                                                              "typeDescriptions": {
                                                                                "typeIdentifier": "t_bool",
                                                                                "typeString": "bool"
                                                                              }
                                                                            },
                                                                            "src": "7446:19:1",
                                                                            "typeDescriptions": {
                                                                              "typeIdentifier": "t_bool",
                                                                              "typeString": "bool"
                                                                            }
                                                                          },
                                                                          "falseBody": {
                                                                            "condition": {
                                                                              "commonType": {
                                                                                "typeIdentifier": "t_bool",
                                                                                "typeString": "bool"
                                                                              },
                                                                              "id": 1004,
                                                                              "isConstant": false,
                                                                              "isLValue": false,
                                                                              "isPure": false,
                                                                              "lValueRequested": false,
                                                                              "leftExpression": {
                                                                                "commonType": {
                                                                                  "typeIdentifier": "t_uint8",
                                                                                  "typeString": "uint8"
                                                                                },
                                                                                "id": 1000,
                                                                                "isConstant": false,
                                                                                "isLValue": false,
                                                                                "isPure": false,
                                                                                "lValueRequested": false,
                                                                                "leftExpression": {
                                                                                  "hexValue": "3430",
                                                                                  "id": 998,
                                                                                  "isConstant": false,
                                                                                  "isLValue": false,
                                                                                  "isPure": true,
                                                                                  "kind": "number",
                                                                                  "lValueRequested": false,
                                                                                  "nodeType": "Literal",
                                                                                  "src": "7531:2:1",
                                                                                  "typeDescriptions": {
                                                                                    "typeIdentifier": "t_rational_40_by_1",
                                                                                    "typeString": "int_const 40"
                                                                                  },
                                                                                  "value": "40"
                                                                                },
                                                                                "nodeType": "BinaryOperation",
                                                                                "operator": "<",
                                                                                "rightExpression": {
                                                                                  "id": 999,
                                                                                  "name": "id",
                                                                                  "nodeType": "Identifier",
                                                                                  "overloadedDeclarations": [],
                                                                                  "referencedDeclaration": 629,
                                                                                  "src": "7536:2:1",
                                                                                  "typeDescriptions": {
                                                                                    "typeIdentifier": "t_uint8",
                                                                                    "typeString": "uint8"
                                                                                  }
                                                                                },
                                                                                "src": "7531:7:1",
                                                                                "typeDescriptions": {
                                                                                  "typeIdentifier": "t_bool",
                                                                                  "typeString": "bool"
                                                                                }
                                                                              },
                                                                              "nodeType": "BinaryOperation",
                                                                              "operator": "&&",
                                                                              "rightExpression": {
                                                                                "commonType": {
                                                                                  "typeIdentifier": "t_uint8",
                                                                                  "typeString": "uint8"
                                                                                },
                                                                                "id": 1003,
                                                                                "isConstant": false,
                                                                                "isLValue": false,
                                                                                "isPure": false,
                                                                                "lValueRequested": false,
                                                                                "leftExpression": {
                                                                                  "id": 1001,
                                                                                  "name": "id",
                                                                                  "nodeType": "Identifier",
                                                                                  "overloadedDeclarations": [],
                                                                                  "referencedDeclaration": 629,
                                                                                  "src": "7542:2:1",
                                                                                  "typeDescriptions": {
                                                                                    "typeIdentifier": "t_uint8",
                                                                                    "typeString": "uint8"
                                                                                  }
                                                                                },
                                                                                "nodeType": "BinaryOperation",
                                                                                "operator": "<=",
                                                                                "rightExpression": {
                                                                                  "hexValue": "3431",
                                                                                  "id": 1002,
                                                                                  "isConstant": false,
                                                                                  "isLValue": false,
                                                                                  "isPure": true,
                                                                                  "kind": "number",
                                                                                  "lValueRequested": false,
                                                                                  "nodeType": "Literal",
                                                                                  "src": "7548:2:1",
                                                                                  "typeDescriptions": {
                                                                                    "typeIdentifier": "t_rational_41_by_1",
                                                                                    "typeString": "int_const 41"
                                                                                  },
                                                                                  "value": "41"
                                                                                },
                                                                                "src": "7542:8:1",
                                                                                "typeDescriptions": {
                                                                                  "typeIdentifier": "t_bool",
                                                                                  "typeString": "bool"
                                                                                }
                                                                              },
                                                                              "src": "7531:19:1",
                                                                              "typeDescriptions": {
                                                                                "typeIdentifier": "t_bool",
                                                                                "typeString": "bool"
                                                                              }
                                                                            },
                                                                            "falseBody": {
                                                                              "id": 1014,
                                                                              "nodeType": "Block",
                                                                              "src": "7612:60:1",
                                                                              "statements": [
                                                                                {
                                                                                  "expression": {
                                                                                    "arguments": [
                                                                                      {
                                                                                        "hexValue": "496e76616c69642048616e64204964",
                                                                                        "id": 1011,
                                                                                        "isConstant": false,
                                                                                        "isLValue": false,
                                                                                        "isPure": true,
                                                                                        "kind": "string",
                                                                                        "lValueRequested": false,
                                                                                        "nodeType": "Literal",
                                                                                        "src": "7638:17:1",
                                                                                        "typeDescriptions": {
                                                                                          "typeIdentifier": "t_stringliteral_b9152bce179ee840f091df595a871f540fd5ecc16b15a8e340a1bf1c96ad6520",
                                                                                          "typeString": "literal_string \"Invalid Hand Id\""
                                                                                        },
                                                                                        "value": "Invalid Hand Id"
                                                                                      }
                                                                                    ],
                                                                                    "expression": {
                                                                                      "argumentTypes": [
                                                                                        {
                                                                                          "typeIdentifier": "t_stringliteral_b9152bce179ee840f091df595a871f540fd5ecc16b15a8e340a1bf1c96ad6520",
                                                                                          "typeString": "literal_string \"Invalid Hand Id\""
                                                                                        }
                                                                                      ],
                                                                                      "id": 1010,
                                                                                      "name": "revert",
                                                                                      "nodeType": "Identifier",
                                                                                      "overloadedDeclarations": [
                                                                                        -19,
                                                                                        -19
                                                                                      ],
                                                                                      "referencedDeclaration": -19,
                                                                                      "src": "7631:6:1",
                                                                                      "typeDescriptions": {
                                                                                        "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                                                                                        "typeString": "function (string memory) pure"
                                                                                      }
                                                                                    },
                                                                                    "id": 1012,
                                                                                    "isConstant": false,
                                                                                    "isLValue": false,
                                                                                    "isPure": false,
                                                                                    "kind": "functionCall",
                                                                                    "lValueRequested": false,
                                                                                    "names": [],
                                                                                    "nodeType": "FunctionCall",
                                                                                    "src": "7631:25:1",
                                                                                    "tryCall": false,
                                                                                    "typeDescriptions": {
                                                                                      "typeIdentifier": "t_tuple$__$",
                                                                                      "typeString": "tuple()"
                                                                                    }
                                                                                  },
                                                                                  "id": 1013,
                                                                                  "nodeType": "ExpressionStatement",
                                                                                  "src": "7631:25:1"
                                                                                }
                                                                              ]
                                                                            },
                                                                            "id": 1015,
                                                                            "nodeType": "IfStatement",
                                                                            "src": "7527:145:1",
                                                                            "trueBody": {
                                                                              "id": 1009,
                                                                              "nodeType": "Block",
                                                                              "src": "7552:54:1",
                                                                              "statements": [
                                                                                {
                                                                                  "expression": {
                                                                                    "id": 1007,
                                                                                    "isConstant": false,
                                                                                    "isLValue": false,
                                                                                    "isPure": false,
                                                                                    "lValueRequested": false,
                                                                                    "leftHandSide": {
                                                                                      "id": 1005,
                                                                                      "name": "sig",
                                                                                      "nodeType": "Identifier",
                                                                                      "overloadedDeclarations": [],
                                                                                      "referencedDeclaration": 679,
                                                                                      "src": "7571:3:1",
                                                                                      "typeDescriptions": {
                                                                                        "typeIdentifier": "t_string_memory_ptr",
                                                                                        "typeString": "string memory"
                                                                                      }
                                                                                    },
                                                                                    "nodeType": "Assignment",
                                                                                    "operator": "=",
                                                                                    "rightHandSide": {
                                                                                      "hexValue": "6765745069726174652829",
                                                                                      "id": 1006,
                                                                                      "isConstant": false,
                                                                                      "isLValue": false,
                                                                                      "isPure": true,
                                                                                      "kind": "string",
                                                                                      "lValueRequested": false,
                                                                                      "nodeType": "Literal",
                                                                                      "src": "7577:13:1",
                                                                                      "typeDescriptions": {
                                                                                        "typeIdentifier": "t_stringliteral_b3f22af2d7c5063083999a8dea542d7ce288abc1e8cbe6656a4bf4dbb0e32253",
                                                                                        "typeString": "literal_string \"getPirate()\""
                                                                                      },
                                                                                      "value": "getPirate()"
                                                                                    },
                                                                                    "src": "7571:19:1",
                                                                                    "typeDescriptions": {
                                                                                      "typeIdentifier": "t_string_memory_ptr",
                                                                                      "typeString": "string memory"
                                                                                    }
                                                                                  },
                                                                                  "id": 1008,
                                                                                  "nodeType": "ExpressionStatement",
                                                                                  "src": "7571:19:1"
                                                                                }
                                                                              ]
                                                                            }
                                                                          },
                                                                          "id": 1016,
                                                                          "nodeType": "IfStatement",
                                                                          "src": "7442:230:1",
                                                                          "trueBody": {
                                                                            "id": 997,
                                                                            "nodeType": "Block",
                                                                            "src": "7467:54:1",
                                                                            "statements": [
                                                                              {
                                                                                "expression": {
                                                                                  "id": 995,
                                                                                  "isConstant": false,
                                                                                  "isLValue": false,
                                                                                  "isPure": false,
                                                                                  "lValueRequested": false,
                                                                                  "leftHandSide": {
                                                                                    "id": 993,
                                                                                    "name": "sig",
                                                                                    "nodeType": "Identifier",
                                                                                    "overloadedDeclarations": [],
                                                                                    "referencedDeclaration": 679,
                                                                                    "src": "7486:3:1",
                                                                                    "typeDescriptions": {
                                                                                      "typeIdentifier": "t_string_memory_ptr",
                                                                                      "typeString": "string memory"
                                                                                    }
                                                                                  },
                                                                                  "nodeType": "Assignment",
                                                                                  "operator": "=",
                                                                                  "rightHandSide": {
                                                                                    "hexValue": "676574436f736d69632829",
                                                                                    "id": 994,
                                                                                    "isConstant": false,
                                                                                    "isLValue": false,
                                                                                    "isPure": true,
                                                                                    "kind": "string",
                                                                                    "lValueRequested": false,
                                                                                    "nodeType": "Literal",
                                                                                    "src": "7492:13:1",
                                                                                    "typeDescriptions": {
                                                                                      "typeIdentifier": "t_stringliteral_e6595f428982a7e159fc53d2892d958078abe0d6e9940b8edcbb75d2f5202cd6",
                                                                                      "typeString": "literal_string \"getCosmic()\""
                                                                                    },
                                                                                    "value": "getCosmic()"
                                                                                  },
                                                                                  "src": "7486:19:1",
                                                                                  "typeDescriptions": {
                                                                                    "typeIdentifier": "t_string_memory_ptr",
                                                                                    "typeString": "string memory"
                                                                                  }
                                                                                },
                                                                                "id": 996,
                                                                                "nodeType": "ExpressionStatement",
                                                                                "src": "7486:19:1"
                                                                              }
                                                                            ]
                                                                          }
                                                                        },
                                                                        "id": 1017,
                                                                        "nodeType": "IfStatement",
                                                                        "src": "7358:314:1",
                                                                        "trueBody": {
                                                                          "id": 985,
                                                                          "nodeType": "Block",
                                                                          "src": "7383:53:1",
                                                                          "statements": [
                                                                            {
                                                                              "expression": {
                                                                                "id": 983,
                                                                                "isConstant": false,
                                                                                "isLValue": false,
                                                                                "isPure": false,
                                                                                "lValueRequested": false,
                                                                                "leftHandSide": {
                                                                                  "id": 981,
                                                                                  "name": "sig",
                                                                                  "nodeType": "Identifier",
                                                                                  "overloadedDeclarations": [],
                                                                                  "referencedDeclaration": 679,
                                                                                  "src": "7402:3:1",
                                                                                  "typeDescriptions": {
                                                                                    "typeIdentifier": "t_string_memory_ptr",
                                                                                    "typeString": "string memory"
                                                                                  }
                                                                                },
                                                                                "nodeType": "Assignment",
                                                                                "operator": "=",
                                                                                "rightHandSide": {
                                                                                  "hexValue": "67657453746576652829",
                                                                                  "id": 982,
                                                                                  "isConstant": false,
                                                                                  "isLValue": false,
                                                                                  "isPure": true,
                                                                                  "kind": "string",
                                                                                  "lValueRequested": false,
                                                                                  "nodeType": "Literal",
                                                                                  "src": "7408:12:1",
                                                                                  "typeDescriptions": {
                                                                                    "typeIdentifier": "t_stringliteral_fbe154bbe710ddfbb92a0ea27bce2ba7f65c6292dc8e4dfbdd0c65f43b5558c3",
                                                                                    "typeString": "literal_string \"getSteve()\""
                                                                                  },
                                                                                  "value": "getSteve()"
                                                                                },
                                                                                "src": "7402:18:1",
                                                                                "typeDescriptions": {
                                                                                  "typeIdentifier": "t_string_memory_ptr",
                                                                                  "typeString": "string memory"
                                                                                }
                                                                              },
                                                                              "id": 984,
                                                                              "nodeType": "ExpressionStatement",
                                                                              "src": "7402:18:1"
                                                                            }
                                                                          ]
                                                                        }
                                                                      },
                                                                      "id": 1018,
                                                                      "nodeType": "IfStatement",
                                                                      "src": "7272:400:1",
                                                                      "trueBody": {
                                                                        "id": 973,
                                                                        "nodeType": "Block",
                                                                        "src": "7297:55:1",
                                                                        "statements": [
                                                                          {
                                                                            "expression": {
                                                                              "id": 971,
                                                                              "isConstant": false,
                                                                              "isLValue": false,
                                                                              "isPure": false,
                                                                              "lValueRequested": false,
                                                                              "leftHandSide": {
                                                                                "id": 969,
                                                                                "name": "sig",
                                                                                "nodeType": "Identifier",
                                                                                "overloadedDeclarations": [],
                                                                                "referencedDeclaration": 679,
                                                                                "src": "7316:3:1",
                                                                                "typeDescriptions": {
                                                                                  "typeIdentifier": "t_string_memory_ptr",
                                                                                  "typeString": "string memory"
                                                                                }
                                                                              },
                                                                              "nodeType": "Assignment",
                                                                              "operator": "=",
                                                                              "rightHandSide": {
                                                                                "hexValue": "676574537175617463682829",
                                                                                "id": 970,
                                                                                "isConstant": false,
                                                                                "isLValue": false,
                                                                                "isPure": true,
                                                                                "kind": "string",
                                                                                "lValueRequested": false,
                                                                                "nodeType": "Literal",
                                                                                "src": "7322:14:1",
                                                                                "typeDescriptions": {
                                                                                  "typeIdentifier": "t_stringliteral_9e15f495ce24e087477dfe08f1773fbf312fc9b9b6a5692a10f58e8e8afe18d8",
                                                                                  "typeString": "literal_string \"getSquatch()\""
                                                                                },
                                                                                "value": "getSquatch()"
                                                                              },
                                                                              "src": "7316:20:1",
                                                                              "typeDescriptions": {
                                                                                "typeIdentifier": "t_string_memory_ptr",
                                                                                "typeString": "string memory"
                                                                              }
                                                                            },
                                                                            "id": 972,
                                                                            "nodeType": "ExpressionStatement",
                                                                            "src": "7316:20:1"
                                                                          }
                                                                        ]
                                                                      }
                                                                    },
                                                                    "id": 1019,
                                                                    "nodeType": "IfStatement",
                                                                    "src": "7189:483:1",
                                                                    "trueBody": {
                                                                      "id": 961,
                                                                      "nodeType": "Block",
                                                                      "src": "7214:52:1",
                                                                      "statements": [
                                                                        {
                                                                          "expression": {
                                                                            "id": 959,
                                                                            "isConstant": false,
                                                                            "isLValue": false,
                                                                            "isPure": false,
                                                                            "lValueRequested": false,
                                                                            "leftHandSide": {
                                                                              "id": 957,
                                                                              "name": "sig",
                                                                              "nodeType": "Identifier",
                                                                              "overloadedDeclarations": [],
                                                                              "referencedDeclaration": 679,
                                                                              "src": "7233:3:1",
                                                                              "typeDescriptions": {
                                                                                "typeIdentifier": "t_string_memory_ptr",
                                                                                "typeString": "string memory"
                                                                              }
                                                                            },
                                                                            "nodeType": "Assignment",
                                                                            "operator": "=",
                                                                            "rightHandSide": {
                                                                              "hexValue": "676574596574692829",
                                                                              "id": 958,
                                                                              "isConstant": false,
                                                                              "isLValue": false,
                                                                              "isPure": true,
                                                                              "kind": "string",
                                                                              "lValueRequested": false,
                                                                              "nodeType": "Literal",
                                                                              "src": "7239:11:1",
                                                                              "typeDescriptions": {
                                                                                "typeIdentifier": "t_stringliteral_6941464f3b4113fa7b74bbc16e1f73b5f9bae31c89b333fbac6d0709d4d8be11",
                                                                                "typeString": "literal_string \"getYeti()\""
                                                                              },
                                                                              "value": "getYeti()"
                                                                            },
                                                                            "src": "7233:17:1",
                                                                            "typeDescriptions": {
                                                                              "typeIdentifier": "t_string_memory_ptr",
                                                                              "typeString": "string memory"
                                                                            }
                                                                          },
                                                                          "id": 960,
                                                                          "nodeType": "ExpressionStatement",
                                                                          "src": "7233:17:1"
                                                                        }
                                                                      ]
                                                                    }
                                                                  },
                                                                  "id": 1020,
                                                                  "nodeType": "IfStatement",
                                                                  "src": "7103:569:1",
                                                                  "trueBody": {
                                                                    "id": 949,
                                                                    "nodeType": "Block",
                                                                    "src": "7128:55:1",
                                                                    "statements": [
                                                                      {
                                                                        "expression": {
                                                                          "id": 947,
                                                                          "isConstant": false,
                                                                          "isLValue": false,
                                                                          "isPure": false,
                                                                          "lValueRequested": false,
                                                                          "leftHandSide": {
                                                                            "id": 945,
                                                                            "name": "sig",
                                                                            "nodeType": "Identifier",
                                                                            "overloadedDeclarations": [],
                                                                            "referencedDeclaration": 679,
                                                                            "src": "7147:3:1",
                                                                            "typeDescriptions": {
                                                                              "typeIdentifier": "t_string_memory_ptr",
                                                                              "typeString": "string memory"
                                                                            }
                                                                          },
                                                                          "nodeType": "Assignment",
                                                                          "operator": "=",
                                                                          "rightHandSide": {
                                                                            "hexValue": "676574476f72696c6c612829",
                                                                            "id": 946,
                                                                            "isConstant": false,
                                                                            "isLValue": false,
                                                                            "isPure": true,
                                                                            "kind": "string",
                                                                            "lValueRequested": false,
                                                                            "nodeType": "Literal",
                                                                            "src": "7153:14:1",
                                                                            "typeDescriptions": {
                                                                              "typeIdentifier": "t_stringliteral_99726ec20ad966981251e31bd9851a11b0833775b32b2e5e367c9b32726b75a4",
                                                                              "typeString": "literal_string \"getGorilla()\""
                                                                            },
                                                                            "value": "getGorilla()"
                                                                          },
                                                                          "src": "7147:20:1",
                                                                          "typeDescriptions": {
                                                                            "typeIdentifier": "t_string_memory_ptr",
                                                                            "typeString": "string memory"
                                                                          }
                                                                        },
                                                                        "id": 948,
                                                                        "nodeType": "ExpressionStatement",
                                                                        "src": "7147:20:1"
                                                                      }
                                                                    ]
                                                                  }
                                                                },
                                                                "id": 1021,
                                                                "nodeType": "IfStatement",
                                                                "src": "7015:657:1",
                                                                "trueBody": {
                                                                  "id": 937,
                                                                  "nodeType": "Block",
                                                                  "src": "7040:57:1",
                                                                  "statements": [
                                                                    {
                                                                      "expression": {
                                                                        "id": 935,
                                                                        "isConstant": false,
                                                                        "isLValue": false,
                                                                        "isPure": false,
                                                                        "lValueRequested": false,
                                                                        "leftHandSide": {
                                                                          "id": 933,
                                                                          "name": "sig",
                                                                          "nodeType": "Identifier",
                                                                          "overloadedDeclarations": [],
                                                                          "referencedDeclaration": 679,
                                                                          "src": "7059:3:1",
                                                                          "typeDescriptions": {
                                                                            "typeIdentifier": "t_string_memory_ptr",
                                                                            "typeString": "string memory"
                                                                          }
                                                                        },
                                                                        "nodeType": "Assignment",
                                                                        "operator": "=",
                                                                        "rightHandSide": {
                                                                          "hexValue": "676574536e6f7754696765722829",
                                                                          "id": 934,
                                                                          "isConstant": false,
                                                                          "isLValue": false,
                                                                          "isPure": true,
                                                                          "kind": "string",
                                                                          "lValueRequested": false,
                                                                          "nodeType": "Literal",
                                                                          "src": "7065:16:1",
                                                                          "typeDescriptions": {
                                                                            "typeIdentifier": "t_stringliteral_32e8e544eaa1b20eb78691de21f099c67171c3e076e2c1615276d6e087141a5e",
                                                                            "typeString": "literal_string \"getSnowTiger()\""
                                                                          },
                                                                          "value": "getSnowTiger()"
                                                                        },
                                                                        "src": "7059:22:1",
                                                                        "typeDescriptions": {
                                                                          "typeIdentifier": "t_string_memory_ptr",
                                                                          "typeString": "string memory"
                                                                        }
                                                                      },
                                                                      "id": 936,
                                                                      "nodeType": "ExpressionStatement",
                                                                      "src": "7059:22:1"
                                                                    }
                                                                  ]
                                                                }
                                                              },
                                                              "id": 1022,
                                                              "nodeType": "IfStatement",
                                                              "src": "6928:744:1",
                                                              "trueBody": {
                                                                "id": 925,
                                                                "nodeType": "Block",
                                                                "src": "6953:56:1",
                                                                "statements": [
                                                                  {
                                                                    "expression": {
                                                                      "id": 923,
                                                                      "isConstant": false,
                                                                      "isLValue": false,
                                                                      "isPure": false,
                                                                      "lValueRequested": false,
                                                                      "leftHandSide": {
                                                                        "id": 921,
                                                                        "name": "sig",
                                                                        "nodeType": "Identifier",
                                                                        "overloadedDeclarations": [],
                                                                        "referencedDeclaration": 679,
                                                                        "src": "6972:3:1",
                                                                        "typeDescriptions": {
                                                                          "typeIdentifier": "t_string_memory_ptr",
                                                                          "typeString": "string memory"
                                                                        }
                                                                      },
                                                                      "nodeType": "Assignment",
                                                                      "operator": "=",
                                                                      "rightHandSide": {
                                                                        "hexValue": "676574536b656c65746f6e2829",
                                                                        "id": 922,
                                                                        "isConstant": false,
                                                                        "isLValue": false,
                                                                        "isPure": true,
                                                                        "kind": "string",
                                                                        "lValueRequested": false,
                                                                        "nodeType": "Literal",
                                                                        "src": "6978:15:1",
                                                                        "typeDescriptions": {
                                                                          "typeIdentifier": "t_stringliteral_080576e1f1db868d66cbbe4d7d12bb54f768c68373466e2df6fcb1c349a9f1fa",
                                                                          "typeString": "literal_string \"getSkeleton()\""
                                                                        },
                                                                        "value": "getSkeleton()"
                                                                      },
                                                                      "src": "6972:21:1",
                                                                      "typeDescriptions": {
                                                                        "typeIdentifier": "t_string_memory_ptr",
                                                                        "typeString": "string memory"
                                                                      }
                                                                    },
                                                                    "id": 924,
                                                                    "nodeType": "ExpressionStatement",
                                                                    "src": "6972:21:1"
                                                                  }
                                                                ]
                                                              }
                                                            },
                                                            "id": 1023,
                                                            "nodeType": "IfStatement",
                                                            "src": "6844:828:1",
                                                            "trueBody": {
                                                              "id": 913,
                                                              "nodeType": "Block",
                                                              "src": "6869:53:1",
                                                              "statements": [
                                                                {
                                                                  "expression": {
                                                                    "id": 911,
                                                                    "isConstant": false,
                                                                    "isLValue": false,
                                                                    "isPure": false,
                                                                    "lValueRequested": false,
                                                                    "leftHandSide": {
                                                                      "id": 909,
                                                                      "name": "sig",
                                                                      "nodeType": "Identifier",
                                                                      "overloadedDeclarations": [],
                                                                      "referencedDeclaration": 679,
                                                                      "src": "6888:3:1",
                                                                      "typeDescriptions": {
                                                                        "typeIdentifier": "t_string_memory_ptr",
                                                                        "typeString": "string memory"
                                                                      }
                                                                    },
                                                                    "nodeType": "Assignment",
                                                                    "operator": "=",
                                                                    "rightHandSide": {
                                                                      "hexValue": "67657454696765722829",
                                                                      "id": 910,
                                                                      "isConstant": false,
                                                                      "isLValue": false,
                                                                      "isPure": true,
                                                                      "kind": "string",
                                                                      "lValueRequested": false,
                                                                      "nodeType": "Literal",
                                                                      "src": "6894:12:1",
                                                                      "typeDescriptions": {
                                                                        "typeIdentifier": "t_stringliteral_ecde90671ebb8a1dac7073c44d9d3b2bdd6c7951113621fdc7d2fb90e3dac577",
                                                                        "typeString": "literal_string \"getTiger()\""
                                                                      },
                                                                      "value": "getTiger()"
                                                                    },
                                                                    "src": "6888:18:1",
                                                                    "typeDescriptions": {
                                                                      "typeIdentifier": "t_string_memory_ptr",
                                                                      "typeString": "string memory"
                                                                    }
                                                                  },
                                                                  "id": 912,
                                                                  "nodeType": "ExpressionStatement",
                                                                  "src": "6888:18:1"
                                                                }
                                                              ]
                                                            }
                                                          },
                                                          "id": 1024,
                                                          "nodeType": "IfStatement",
                                                          "src": "6758:914:1",
                                                          "trueBody": {
                                                            "id": 901,
                                                            "nodeType": "Block",
                                                            "src": "6783:55:1",
                                                            "statements": [
                                                              {
                                                                "expression": {
                                                                  "id": 899,
                                                                  "isConstant": false,
                                                                  "isLValue": false,
                                                                  "isPure": false,
                                                                  "lValueRequested": false,
                                                                  "leftHandSide": {
                                                                    "id": 897,
                                                                    "name": "sig",
                                                                    "nodeType": "Identifier",
                                                                    "overloadedDeclarations": [],
                                                                    "referencedDeclaration": 679,
                                                                    "src": "6802:3:1",
                                                                    "typeDescriptions": {
                                                                      "typeIdentifier": "t_string_memory_ptr",
                                                                      "typeString": "string memory"
                                                                    }
                                                                  },
                                                                  "nodeType": "Assignment",
                                                                  "operator": "=",
                                                                  "rightHandSide": {
                                                                    "hexValue": "676574506c61737469632829",
                                                                    "id": 898,
                                                                    "isConstant": false,
                                                                    "isLValue": false,
                                                                    "isPure": true,
                                                                    "kind": "string",
                                                                    "lValueRequested": false,
                                                                    "nodeType": "Literal",
                                                                    "src": "6808:14:1",
                                                                    "typeDescriptions": {
                                                                      "typeIdentifier": "t_stringliteral_240cf269342d3d9a099f8ac7e0c321e3e130996267fe4d13b81d1e7c188f8204",
                                                                      "typeString": "literal_string \"getPlastic()\""
                                                                    },
                                                                    "value": "getPlastic()"
                                                                  },
                                                                  "src": "6802:20:1",
                                                                  "typeDescriptions": {
                                                                    "typeIdentifier": "t_string_memory_ptr",
                                                                    "typeString": "string memory"
                                                                  }
                                                                },
                                                                "id": 900,
                                                                "nodeType": "ExpressionStatement",
                                                                "src": "6802:20:1"
                                                              }
                                                            ]
                                                          }
                                                        },
                                                        "id": 1025,
                                                        "nodeType": "IfStatement",
                                                        "src": "6674:998:1",
                                                        "trueBody": {
                                                          "id": 889,
                                                          "nodeType": "Block",
                                                          "src": "6699:53:1",
                                                          "statements": [
                                                            {
                                                              "expression": {
                                                                "id": 887,
                                                                "isConstant": false,
                                                                "isLValue": false,
                                                                "isPure": false,
                                                                "lValueRequested": false,
                                                                "leftHandSide": {
                                                                  "id": 885,
                                                                  "name": "sig",
                                                                  "nodeType": "Identifier",
                                                                  "overloadedDeclarations": [],
                                                                  "referencedDeclaration": 679,
                                                                  "src": "6718:3:1",
                                                                  "typeDescriptions": {
                                                                    "typeIdentifier": "t_string_memory_ptr",
                                                                    "typeString": "string memory"
                                                                  }
                                                                },
                                                                "nodeType": "Assignment",
                                                                "operator": "=",
                                                                "rightHandSide": {
                                                                  "hexValue": "67657453756c6c792829",
                                                                  "id": 886,
                                                                  "isConstant": false,
                                                                  "isLValue": false,
                                                                  "isPure": true,
                                                                  "kind": "string",
                                                                  "lValueRequested": false,
                                                                  "nodeType": "Literal",
                                                                  "src": "6724:12:1",
                                                                  "typeDescriptions": {
                                                                    "typeIdentifier": "t_stringliteral_2817e5bef3d43746d8032b05b373821107fbbf9eee1fd7f187fc66e519069583",
                                                                    "typeString": "literal_string \"getSully()\""
                                                                  },
                                                                  "value": "getSully()"
                                                                },
                                                                "src": "6718:18:1",
                                                                "typeDescriptions": {
                                                                  "typeIdentifier": "t_string_memory_ptr",
                                                                  "typeString": "string memory"
                                                                }
                                                              },
                                                              "id": 888,
                                                              "nodeType": "ExpressionStatement",
                                                              "src": "6718:18:1"
                                                            }
                                                          ]
                                                        }
                                                      },
                                                      "id": 1026,
                                                      "nodeType": "IfStatement",
                                                      "src": "6583:1089:1",
                                                      "trueBody": {
                                                        "id": 877,
                                                        "nodeType": "Block",
                                                        "src": "6608:60:1",
                                                        "statements": [
                                                          {
                                                            "expression": {
                                                              "id": 875,
                                                              "isConstant": false,
                                                              "isLValue": false,
                                                              "isPure": false,
                                                              "lValueRequested": false,
                                                              "leftHandSide": {
                                                                "id": 873,
                                                                "name": "sig",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 679,
                                                                "src": "6627:3:1",
                                                                "typeDescriptions": {
                                                                  "typeIdentifier": "t_string_memory_ptr",
                                                                  "typeString": "string memory"
                                                                }
                                                              },
                                                              "nodeType": "Assignment",
                                                              "operator": "=",
                                                              "rightHandSide": {
                                                                "hexValue": "67657459656c6c6f77476f626c696e2829",
                                                                "id": 874,
                                                                "isConstant": false,
                                                                "isLValue": false,
                                                                "isPure": true,
                                                                "kind": "string",
                                                                "lValueRequested": false,
                                                                "nodeType": "Literal",
                                                                "src": "6633:19:1",
                                                                "typeDescriptions": {
                                                                  "typeIdentifier": "t_stringliteral_8e4f449b522973bec914f778ffd9cde7c395b6b3c27bbc0b86421a2d6afdeadc",
                                                                  "typeString": "literal_string \"getYellowGoblin()\""
                                                                },
                                                                "value": "getYellowGoblin()"
                                                              },
                                                              "src": "6627:25:1",
                                                              "typeDescriptions": {
                                                                "typeIdentifier": "t_string_memory_ptr",
                                                                "typeString": "string memory"
                                                              }
                                                            },
                                                            "id": 876,
                                                            "nodeType": "ExpressionStatement",
                                                            "src": "6627:25:1"
                                                          }
                                                        ]
                                                      }
                                                    },
                                                    "id": 1027,
                                                    "nodeType": "IfStatement",
                                                    "src": "6495:1177:1",
                                                    "trueBody": {
                                                      "id": 865,
                                                      "nodeType": "Block",
                                                      "src": "6520:57:1",
                                                      "statements": [
                                                        {
                                                          "expression": {
                                                            "id": 863,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": false,
                                                            "lValueRequested": false,
                                                            "leftHandSide": {
                                                              "id": 861,
                                                              "name": "sig",
                                                              "nodeType": "Identifier",
                                                              "overloadedDeclarations": [],
                                                              "referencedDeclaration": 679,
                                                              "src": "6539:3:1",
                                                              "typeDescriptions": {
                                                                "typeIdentifier": "t_string_memory_ptr",
                                                                "typeString": "string memory"
                                                              }
                                                            },
                                                            "nodeType": "Assignment",
                                                            "operator": "=",
                                                            "rightHandSide": {
                                                              "hexValue": "676574526564476f626c696e2829",
                                                              "id": 862,
                                                              "isConstant": false,
                                                              "isLValue": false,
                                                              "isPure": true,
                                                              "kind": "string",
                                                              "lValueRequested": false,
                                                              "nodeType": "Literal",
                                                              "src": "6545:16:1",
                                                              "typeDescriptions": {
                                                                "typeIdentifier": "t_stringliteral_1e7b565b5babcf3426d89addfea68eb60a9e0f32ce0eb346f9ec0367d87bd121",
                                                                "typeString": "literal_string \"getRedGoblin()\""
                                                              },
                                                              "value": "getRedGoblin()"
                                                            },
                                                            "src": "6539:22:1",
                                                            "typeDescriptions": {
                                                              "typeIdentifier": "t_string_memory_ptr",
                                                              "typeString": "string memory"
                                                            }
                                                          },
                                                          "id": 864,
                                                          "nodeType": "ExpressionStatement",
                                                          "src": "6539:22:1"
                                                        }
                                                      ]
                                                    }
                                                  },
                                                  "id": 1028,
                                                  "nodeType": "IfStatement",
                                                  "src": "6410:1262:1",
                                                  "trueBody": {
                                                    "id": 853,
                                                    "nodeType": "Block",
                                                    "src": "6435:54:1",
                                                    "statements": [
                                                      {
                                                        "expression": {
                                                          "id": 851,
                                                          "isConstant": false,
                                                          "isLValue": false,
                                                          "isPure": false,
                                                          "lValueRequested": false,
                                                          "leftHandSide": {
                                                            "id": 849,
                                                            "name": "sig",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 679,
                                                            "src": "6454:3:1",
                                                            "typeDescriptions": {
                                                              "typeIdentifier": "t_string_memory_ptr",
                                                              "typeString": "string memory"
                                                            }
                                                          },
                                                          "nodeType": "Assignment",
                                                          "operator": "=",
                                                          "rightHandSide": {
                                                            "hexValue": "6765745a6f6d6269652829",
                                                            "id": 850,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": true,
                                                            "kind": "string",
                                                            "lValueRequested": false,
                                                            "nodeType": "Literal",
                                                            "src": "6460:13:1",
                                                            "typeDescriptions": {
                                                              "typeIdentifier": "t_stringliteral_a592a451443ef95ba800149874886bfa11a2f3a851c42fdc6ca702bcb986ce36",
                                                              "typeString": "literal_string \"getZombie()\""
                                                            },
                                                            "value": "getZombie()"
                                                          },
                                                          "src": "6454:19:1",
                                                          "typeDescriptions": {
                                                            "typeIdentifier": "t_string_memory_ptr",
                                                            "typeString": "string memory"
                                                          }
                                                        },
                                                        "id": 852,
                                                        "nodeType": "ExpressionStatement",
                                                        "src": "6454:19:1"
                                                      }
                                                    ]
                                                  }
                                                },
                                                "id": 1029,
                                                "nodeType": "IfStatement",
                                                "src": "6320:1352:1",
                                                "trueBody": {
                                                  "id": 841,
                                                  "nodeType": "Block",
                                                  "src": "6345:59:1",
                                                  "statements": [
                                                    {
                                                      "expression": {
                                                        "id": 839,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "leftHandSide": {
                                                          "id": 837,
                                                          "name": "sig",
                                                          "nodeType": "Identifier",
                                                          "overloadedDeclarations": [],
                                                          "referencedDeclaration": 679,
                                                          "src": "6364:3:1",
                                                          "typeDescriptions": {
                                                            "typeIdentifier": "t_string_memory_ptr",
                                                            "typeString": "string memory"
                                                          }
                                                        },
                                                        "nodeType": "Assignment",
                                                        "operator": "=",
                                                        "rightHandSide": {
                                                          "hexValue": "676574477265656e476f626c696e2829",
                                                          "id": 838,
                                                          "isConstant": false,
                                                          "isLValue": false,
                                                          "isPure": true,
                                                          "kind": "string",
                                                          "lValueRequested": false,
                                                          "nodeType": "Literal",
                                                          "src": "6370:18:1",
                                                          "typeDescriptions": {
                                                            "typeIdentifier": "t_stringliteral_34739b2ab18c1712de584f6894fc91f48138186fbe89e5c99519406015037b42",
                                                            "typeString": "literal_string \"getGreenGoblin()\""
                                                          },
                                                          "value": "getGreenGoblin()"
                                                        },
                                                        "src": "6364:24:1",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_string_memory_ptr",
                                                          "typeString": "string memory"
                                                        }
                                                      },
                                                      "id": 840,
                                                      "nodeType": "ExpressionStatement",
                                                      "src": "6364:24:1"
                                                    }
                                                  ]
                                                }
                                              },
                                              "id": 1030,
                                              "nodeType": "IfStatement",
                                              "src": "6232:1440:1",
                                              "trueBody": {
                                                "id": 829,
                                                "nodeType": "Block",
                                                "src": "6257:57:1",
                                                "statements": [
                                                  {
                                                    "expression": {
                                                      "id": 827,
                                                      "isConstant": false,
                                                      "isLValue": false,
                                                      "isPure": false,
                                                      "lValueRequested": false,
                                                      "leftHandSide": {
                                                        "id": 825,
                                                        "name": "sig",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 679,
                                                        "src": "6276:3:1",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_string_memory_ptr",
                                                          "typeString": "string memory"
                                                        }
                                                      },
                                                      "nodeType": "Assignment",
                                                      "operator": "=",
                                                      "rightHandSide": {
                                                        "hexValue": "676574427562626c6547756d2829",
                                                        "id": 826,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": true,
                                                        "kind": "string",
                                                        "lValueRequested": false,
                                                        "nodeType": "Literal",
                                                        "src": "6282:16:1",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_stringliteral_e7d01d7a24e16013cec4b6d0b91dfc7650e1ce4c36d327be66103a7ff083a527",
                                                          "typeString": "literal_string \"getBubbleGum()\""
                                                        },
                                                        "value": "getBubbleGum()"
                                                      },
                                                      "src": "6276:22:1",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_string_memory_ptr",
                                                        "typeString": "string memory"
                                                      }
                                                    },
                                                    "id": 828,
                                                    "nodeType": "ExpressionStatement",
                                                    "src": "6276:22:1"
                                                  }
                                                ]
                                              }
                                            },
                                            "id": 1031,
                                            "nodeType": "IfStatement",
                                            "src": "6143:1529:1",
                                            "trueBody": {
                                              "id": 817,
                                              "nodeType": "Block",
                                              "src": "6168:58:1",
                                              "statements": [
                                                {
                                                  "expression": {
                                                    "id": 815,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "leftHandSide": {
                                                      "id": 813,
                                                      "name": "sig",
                                                      "nodeType": "Identifier",
                                                      "overloadedDeclarations": [],
                                                      "referencedDeclaration": 679,
                                                      "src": "6187:3:1",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_string_memory_ptr",
                                                        "typeString": "string memory"
                                                      }
                                                    },
                                                    "nodeType": "Assignment",
                                                    "operator": "=",
                                                    "rightHandSide": {
                                                      "hexValue": "676574477265656e536c696d652829",
                                                      "id": 814,
                                                      "isConstant": false,
                                                      "isLValue": false,
                                                      "isPure": true,
                                                      "kind": "string",
                                                      "lValueRequested": false,
                                                      "nodeType": "Literal",
                                                      "src": "6193:17:1",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_stringliteral_557dd0640e6fad5aaa20cfd629f71180fb48740b3490c739a3baf487c931c884",
                                                        "typeString": "literal_string \"getGreenSlime()\""
                                                      },
                                                      "value": "getGreenSlime()"
                                                    },
                                                    "src": "6187:23:1",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_string_memory_ptr",
                                                      "typeString": "string memory"
                                                    }
                                                  },
                                                  "id": 816,
                                                  "nodeType": "ExpressionStatement",
                                                  "src": "6187:23:1"
                                                }
                                              ]
                                            }
                                          },
                                          "id": 1032,
                                          "nodeType": "IfStatement",
                                          "src": "6055:1617:1",
                                          "trueBody": {
                                            "id": 805,
                                            "nodeType": "Block",
                                            "src": "6080:57:1",
                                            "statements": [
                                              {
                                                "expression": {
                                                  "id": 803,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "leftHandSide": {
                                                    "id": 801,
                                                    "name": "sig",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 679,
                                                    "src": "6099:3:1",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_string_memory_ptr",
                                                      "typeString": "string memory"
                                                    }
                                                  },
                                                  "nodeType": "Assignment",
                                                  "operator": "=",
                                                  "rightHandSide": {
                                                    "hexValue": "676574426c7565536c696d652829",
                                                    "id": 802,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "kind": "string",
                                                    "lValueRequested": false,
                                                    "nodeType": "Literal",
                                                    "src": "6105:16:1",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_stringliteral_020a41be4cf08506a876ab87d74af8d04696d0f7c805f4f85d145ff3a81204f2",
                                                      "typeString": "literal_string \"getBlueSlime()\""
                                                    },
                                                    "value": "getBlueSlime()"
                                                  },
                                                  "src": "6099:22:1",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_string_memory_ptr",
                                                    "typeString": "string memory"
                                                  }
                                                },
                                                "id": 804,
                                                "nodeType": "ExpressionStatement",
                                                "src": "6099:22:1"
                                              }
                                            ]
                                          }
                                        },
                                        "id": 1033,
                                        "nodeType": "IfStatement",
                                        "src": "5968:1704:1",
                                        "trueBody": {
                                          "id": 793,
                                          "nodeType": "Block",
                                          "src": "5993:56:1",
                                          "statements": [
                                            {
                                              "expression": {
                                                "id": 791,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftHandSide": {
                                                  "id": 789,
                                                  "name": "sig",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 679,
                                                  "src": "6012:3:1",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_string_memory_ptr",
                                                    "typeString": "string memory"
                                                  }
                                                },
                                                "nodeType": "Assignment",
                                                "operator": "=",
                                                "rightHandSide": {
                                                  "hexValue": "676574566974696c69676f2829",
                                                  "id": 790,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": true,
                                                  "kind": "string",
                                                  "lValueRequested": false,
                                                  "nodeType": "Literal",
                                                  "src": "6018:15:1",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_stringliteral_c305b2b2e1c9a68389bfd19390126f12a997c86eb2ada689e1887c7a1a5ddef2",
                                                    "typeString": "literal_string \"getVitiligo()\""
                                                  },
                                                  "value": "getVitiligo()"
                                                },
                                                "src": "6012:21:1",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_string_memory_ptr",
                                                  "typeString": "string memory"
                                                }
                                              },
                                              "id": 792,
                                              "nodeType": "ExpressionStatement",
                                              "src": "6012:21:1"
                                            }
                                          ]
                                        }
                                      },
                                      "id": 1034,
                                      "nodeType": "IfStatement",
                                      "src": "5884:1788:1",
                                      "trueBody": {
                                        "id": 781,
                                        "nodeType": "Block",
                                        "src": "5909:53:1",
                                        "statements": [
                                          {
                                            "expression": {
                                              "id": 779,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "leftHandSide": {
                                                "id": 777,
                                                "name": "sig",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 679,
                                                "src": "5928:3:1",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_string_memory_ptr",
                                                  "typeString": "string memory"
                                                }
                                              },
                                              "nodeType": "Assignment",
                                              "operator": "=",
                                              "rightHandSide": {
                                                "hexValue": "67657448616e64342829",
                                                "id": 778,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "string",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "5934:12:1",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_stringliteral_0675672956d21101281758708e2b3aef407805e331b96ae8ec041266f751c866",
                                                  "typeString": "literal_string \"getHand4()\""
                                                },
                                                "value": "getHand4()"
                                              },
                                              "src": "5928:18:1",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_string_memory_ptr",
                                                "typeString": "string memory"
                                              }
                                            },
                                            "id": 780,
                                            "nodeType": "ExpressionStatement",
                                            "src": "5928:18:1"
                                          }
                                        ]
                                      }
                                    },
                                    "id": 1035,
                                    "nodeType": "IfStatement",
                                    "src": "5801:1871:1",
                                    "trueBody": {
                                      "id": 769,
                                      "nodeType": "Block",
                                      "src": "5825:53:1",
                                      "statements": [
                                        {
                                          "expression": {
                                            "id": 767,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftHandSide": {
                                              "id": 765,
                                              "name": "sig",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 679,
                                              "src": "5844:3:1",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_string_memory_ptr",
                                                "typeString": "string memory"
                                              }
                                            },
                                            "nodeType": "Assignment",
                                            "operator": "=",
                                            "rightHandSide": {
                                              "hexValue": "67657448616e64332829",
                                              "id": 766,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "kind": "string",
                                              "lValueRequested": false,
                                              "nodeType": "Literal",
                                              "src": "5850:12:1",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_stringliteral_888a0b7716f9bfda912d7fca7dd40c142c0740504de353524b1e4d413491aa27",
                                                "typeString": "literal_string \"getHand3()\""
                                              },
                                              "value": "getHand3()"
                                            },
                                            "src": "5844:18:1",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_string_memory_ptr",
                                              "typeString": "string memory"
                                            }
                                          },
                                          "id": 768,
                                          "nodeType": "ExpressionStatement",
                                          "src": "5844:18:1"
                                        }
                                      ]
                                    }
                                  },
                                  "id": 1036,
                                  "nodeType": "IfStatement",
                                  "src": "5719:1953:1",
                                  "trueBody": {
                                    "id": 757,
                                    "nodeType": "Block",
                                    "src": "5742:53:1",
                                    "statements": [
                                      {
                                        "expression": {
                                          "id": 755,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftHandSide": {
                                            "id": 753,
                                            "name": "sig",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 679,
                                            "src": "5761:3:1",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_string_memory_ptr",
                                              "typeString": "string memory"
                                            }
                                          },
                                          "nodeType": "Assignment",
                                          "operator": "=",
                                          "rightHandSide": {
                                            "hexValue": "67657448616e64322829",
                                            "id": 754,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "string",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "5767:12:1",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_stringliteral_8a99b7fba15078e7f640cae0d0749874c1e0ed1cbb89db030bfaa96bd9971322",
                                              "typeString": "literal_string \"getHand2()\""
                                            },
                                            "value": "getHand2()"
                                          },
                                          "src": "5761:18:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_string_memory_ptr",
                                            "typeString": "string memory"
                                          }
                                        },
                                        "id": 756,
                                        "nodeType": "ExpressionStatement",
                                        "src": "5761:18:1"
                                      }
                                    ]
                                  }
                                },
                                "id": 1037,
                                "nodeType": "IfStatement",
                                "src": "5636:2036:1",
                                "trueBody": {
                                  "id": 745,
                                  "nodeType": "Block",
                                  "src": "5660:53:1",
                                  "statements": [
                                    {
                                      "expression": {
                                        "id": 743,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftHandSide": {
                                          "id": 741,
                                          "name": "sig",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 679,
                                          "src": "5679:3:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_string_memory_ptr",
                                            "typeString": "string memory"
                                          }
                                        },
                                        "nodeType": "Assignment",
                                        "operator": "=",
                                        "rightHandSide": {
                                          "hexValue": "67657448616e64312829",
                                          "id": 742,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "string",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "5685:12:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_stringliteral_9b45d56d6f98c0162006e6011d8003a1b8dcce82e05faa8a9e0d90ed7f018e53",
                                            "typeString": "literal_string \"getHand1()\""
                                          },
                                          "value": "getHand1()"
                                        },
                                        "src": "5679:18:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_string_memory_ptr",
                                          "typeString": "string memory"
                                        }
                                      },
                                      "id": 744,
                                      "nodeType": "ExpressionStatement",
                                      "src": "5679:18:1"
                                    }
                                  ]
                                }
                              }
                            ]
                          }
                        },
                        "id": 1055,
                        "nodeType": "IfStatement",
                        "src": "5214:2601:1",
                        "trueBody": {
                          "id": 729,
                          "nodeType": "Block",
                          "src": "5243:344:1",
                          "statements": [
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "id": 691,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint8",
                                    "typeString": "uint8"
                                  },
                                  "id": 687,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "hexValue": "31",
                                    "id": 685,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "5262:1:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_1_by_1",
                                      "typeString": "int_const 1"
                                    },
                                    "value": "1"
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "<=",
                                  "rightExpression": {
                                    "id": 686,
                                    "name": "id",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 629,
                                    "src": "5267:2:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint8",
                                      "typeString": "uint8"
                                    }
                                  },
                                  "src": "5262:7:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "&&",
                                "rightExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint8",
                                    "typeString": "uint8"
                                  },
                                  "id": 690,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 688,
                                    "name": "id",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 629,
                                    "src": "5273:2:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint8",
                                      "typeString": "uint8"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "<=",
                                  "rightExpression": {
                                    "hexValue": "3131",
                                    "id": 689,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "5279:2:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_11_by_1",
                                      "typeString": "int_const 11"
                                    },
                                    "value": "11"
                                  },
                                  "src": "5273:8:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "src": "5262:19:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "falseBody": {
                                "condition": {
                                  "commonType": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "id": 703,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "commonType": {
                                      "typeIdentifier": "t_uint8",
                                      "typeString": "uint8"
                                    },
                                    "id": 699,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "hexValue": "3131",
                                      "id": 697,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "5345:2:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_11_by_1",
                                        "typeString": "int_const 11"
                                      },
                                      "value": "11"
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "<",
                                    "rightExpression": {
                                      "id": 698,
                                      "name": "id",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 629,
                                      "src": "5350:2:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint8",
                                        "typeString": "uint8"
                                      }
                                    },
                                    "src": "5345:7:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "&&",
                                  "rightExpression": {
                                    "commonType": {
                                      "typeIdentifier": "t_uint8",
                                      "typeString": "uint8"
                                    },
                                    "id": 702,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 700,
                                      "name": "id",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 629,
                                      "src": "5356:2:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint8",
                                        "typeString": "uint8"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "<=",
                                    "rightExpression": {
                                      "hexValue": "3137",
                                      "id": 701,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "5362:2:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_17_by_1",
                                        "typeString": "int_const 17"
                                      },
                                      "value": "17"
                                    },
                                    "src": "5356:8:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "src": "5345:19:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "falseBody": {
                                  "condition": {
                                    "commonType": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    "id": 715,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "commonType": {
                                        "typeIdentifier": "t_uint8",
                                        "typeString": "uint8"
                                      },
                                      "id": 711,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "hexValue": "3137",
                                        "id": 709,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "5429:2:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_17_by_1",
                                          "typeString": "int_const 17"
                                        },
                                        "value": "17"
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "<",
                                      "rightExpression": {
                                        "id": 710,
                                        "name": "id",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 629,
                                        "src": "5434:2:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint8",
                                          "typeString": "uint8"
                                        }
                                      },
                                      "src": "5429:7:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "&&",
                                    "rightExpression": {
                                      "commonType": {
                                        "typeIdentifier": "t_uint8",
                                        "typeString": "uint8"
                                      },
                                      "id": 714,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "id": 712,
                                        "name": "id",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 629,
                                        "src": "5440:2:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint8",
                                          "typeString": "uint8"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "<=",
                                      "rightExpression": {
                                        "hexValue": "3230",
                                        "id": 713,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "5446:2:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_20_by_1",
                                          "typeString": "int_const 20"
                                        },
                                        "value": "20"
                                      },
                                      "src": "5440:8:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "src": "5429:19:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "falseBody": {
                                    "id": 725,
                                    "nodeType": "Block",
                                    "src": "5510:66:1",
                                    "statements": [
                                      {
                                        "expression": {
                                          "arguments": [
                                            {
                                              "hexValue": "496e76616c6964204261636b67726f756e64204964",
                                              "id": 722,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "kind": "string",
                                              "lValueRequested": false,
                                              "nodeType": "Literal",
                                              "src": "5536:23:1",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_stringliteral_05fa04d950d0eb1e8230c3564e55272c5585bfce9868906a080ed6432c9eff76",
                                                "typeString": "literal_string \"Invalid Background Id\""
                                              },
                                              "value": "Invalid Background Id"
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_stringliteral_05fa04d950d0eb1e8230c3564e55272c5585bfce9868906a080ed6432c9eff76",
                                                "typeString": "literal_string \"Invalid Background Id\""
                                              }
                                            ],
                                            "id": 721,
                                            "name": "revert",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [
                                              -19,
                                              -19
                                            ],
                                            "referencedDeclaration": -19,
                                            "src": "5529:6:1",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                                              "typeString": "function (string memory) pure"
                                            }
                                          },
                                          "id": 723,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "functionCall",
                                          "lValueRequested": false,
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "5529:31:1",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                          }
                                        },
                                        "id": 724,
                                        "nodeType": "ExpressionStatement",
                                        "src": "5529:31:1"
                                      }
                                    ]
                                  },
                                  "id": 726,
                                  "nodeType": "IfStatement",
                                  "src": "5425:151:1",
                                  "trueBody": {
                                    "id": 720,
                                    "nodeType": "Block",
                                    "src": "5450:54:1",
                                    "statements": [
                                      {
                                        "expression": {
                                          "id": 718,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftHandSide": {
                                            "id": 716,
                                            "name": "sig",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 679,
                                            "src": "5469:3:1",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_string_memory_ptr",
                                              "typeString": "string memory"
                                            }
                                          },
                                          "nodeType": "Assignment",
                                          "operator": "=",
                                          "rightHandSide": {
                                            "hexValue": "676574507572706c652829",
                                            "id": 717,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "string",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "5475:13:1",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_stringliteral_2f1fdc3b00f8d9510f5ba64e2c3be33fbba6cc1a708dc6807809144a1ffde4db",
                                              "typeString": "literal_string \"getPurple()\""
                                            },
                                            "value": "getPurple()"
                                          },
                                          "src": "5469:19:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_string_memory_ptr",
                                            "typeString": "string memory"
                                          }
                                        },
                                        "id": 719,
                                        "nodeType": "ExpressionStatement",
                                        "src": "5469:19:1"
                                      }
                                    ]
                                  }
                                },
                                "id": 727,
                                "nodeType": "IfStatement",
                                "src": "5341:235:1",
                                "trueBody": {
                                  "id": 708,
                                  "nodeType": "Block",
                                  "src": "5366:53:1",
                                  "statements": [
                                    {
                                      "expression": {
                                        "id": 706,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftHandSide": {
                                          "id": 704,
                                          "name": "sig",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 679,
                                          "src": "5385:3:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_string_memory_ptr",
                                            "typeString": "string memory"
                                          }
                                        },
                                        "nodeType": "Assignment",
                                        "operator": "=",
                                        "rightHandSide": {
                                          "hexValue": "676574477265656e2829",
                                          "id": 705,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "string",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "5391:12:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_stringliteral_cffc5e38ed14a81b82163d265bc9484e8106211ff07a3253027eff0e9c45edfc",
                                            "typeString": "literal_string \"getGreen()\""
                                          },
                                          "value": "getGreen()"
                                        },
                                        "src": "5385:18:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_string_memory_ptr",
                                          "typeString": "string memory"
                                        }
                                      },
                                      "id": 707,
                                      "nodeType": "ExpressionStatement",
                                      "src": "5385:18:1"
                                    }
                                  ]
                                }
                              },
                              "id": 728,
                              "nodeType": "IfStatement",
                              "src": "5258:318:1",
                              "trueBody": {
                                "id": 696,
                                "nodeType": "Block",
                                "src": "5283:52:1",
                                "statements": [
                                  {
                                    "expression": {
                                      "id": 694,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftHandSide": {
                                        "id": 692,
                                        "name": "sig",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 679,
                                        "src": "5302:3:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_string_memory_ptr",
                                          "typeString": "string memory"
                                        }
                                      },
                                      "nodeType": "Assignment",
                                      "operator": "=",
                                      "rightHandSide": {
                                        "hexValue": "676574426c75652829",
                                        "id": 693,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "string",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "5308:11:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_stringliteral_5650d700fdee15b618010f3a8733998e22dea60b65bc8dda0088d5c475d3979c",
                                          "typeString": "literal_string \"getBlue()\""
                                        },
                                        "value": "getBlue()"
                                      },
                                      "src": "5302:17:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_string_memory_ptr",
                                        "typeString": "string memory"
                                      }
                                    },
                                    "id": 695,
                                    "nodeType": "ExpressionStatement",
                                    "src": "5302:17:1"
                                  }
                                ]
                              }
                            }
                          ]
                        }
                      },
                      {
                        "assignments": [
                          1057,
                          1059
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1057,
                            "mutability": "mutable",
                            "name": "succ",
                            "nameLocation": "7831:4:1",
                            "nodeType": "VariableDeclaration",
                            "scope": 1083,
                            "src": "7826:9:1",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 1056,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "7826:4:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 1059,
                            "mutability": "mutable",
                            "name": "data",
                            "nameLocation": "7850:4:1",
                            "nodeType": "VariableDeclaration",
                            "scope": 1083,
                            "src": "7837:17:1",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes"
                            },
                            "typeName": {
                              "id": 1058,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "7837:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_storage_ptr",
                                "typeString": "bytes"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1067,
                        "initialValue": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 1064,
                                  "name": "sig",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 679,
                                  "src": "7914:3:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                ],
                                "expression": {
                                  "id": 1062,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "7890:3:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 1063,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encodeWithSignature",
                                "nodeType": "MemberAccess",
                                "src": "7890:23:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function (string memory) pure returns (bytes memory)"
                                }
                              },
                              "id": 1065,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7890:28:1",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "expression": {
                              "id": 1060,
                              "name": "source",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 635,
                              "src": "7858:6:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "id": 1061,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "staticcall",
                            "nodeType": "MemberAccess",
                            "src": "7858:17:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                              "typeString": "function (bytes memory) view returns (bool,bytes memory)"
                            }
                          },
                          "id": 1066,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7858:71:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                            "typeString": "tuple(bool,bytes memory)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "7825:104:1"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1069,
                              "name": "succ",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1057,
                              "src": "7948:4:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "6661696c656420746f206765742064617461",
                              "id": 1070,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7954:20:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_88a57f4f3e712e2c61ce3233637c29aee4812a27dbd1d386e5dba84931d76764",
                                "typeString": "literal_string \"failed to get data\""
                              },
                              "value": "failed to get data"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_88a57f4f3e712e2c61ce3233637c29aee4812a27dbd1d386e5dba84931d76764",
                                "typeString": "literal_string \"failed to get data\""
                              }
                            ],
                            "id": 1068,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "7940:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1071,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7940:35:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1072,
                        "nodeType": "ExpressionStatement",
                        "src": "7940:35:1"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 1076,
                                  "name": "data",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1059,
                                  "src": "8012:4:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                },
                                {
                                  "components": [
                                    {
                                      "id": 1078,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "8019:6:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                                        "typeString": "type(string storage pointer)"
                                      },
                                      "typeName": {
                                        "id": 1077,
                                        "name": "string",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "8019:6:1",
                                        "typeDescriptions": {}
                                      }
                                    }
                                  ],
                                  "id": 1079,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "8018:8:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                                    "typeString": "type(string storage pointer)"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  },
                                  {
                                    "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                                    "typeString": "type(string storage pointer)"
                                  }
                                ],
                                "expression": {
                                  "id": 1074,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "8001:3:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 1075,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "decode",
                                "nodeType": "MemberAccess",
                                "src": "8001:10:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                                  "typeString": "function () pure"
                                }
                              },
                              "id": 1080,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8001:26:1",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "id": 1073,
                            "name": "wrapTag",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1102,
                            "src": "7993:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$returns$_t_string_memory_ptr_$",
                              "typeString": "function (string memory) pure returns (string memory)"
                            }
                          },
                          "id": 1081,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7993:35:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        "functionReturnParameters": 633,
                        "id": 1082,
                        "nodeType": "Return",
                        "src": "7986:42:1"
                      }
                    ]
                  },
                  "functionSelector": "f9ec93d4",
                  "id": 1084,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "get",
                  "nameLocation": "4777:3:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 630,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 627,
                        "mutability": "mutable",
                        "name": "part",
                        "nameLocation": "4786:4:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1084,
                        "src": "4781:9:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Part_$312",
                          "typeString": "enum InventoryManager.Part"
                        },
                        "typeName": {
                          "id": 626,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 625,
                            "name": "Part",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 312,
                            "src": "4781:4:1"
                          },
                          "referencedDeclaration": 312,
                          "src": "4781:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Part_$312",
                            "typeString": "enum InventoryManager.Part"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 629,
                        "mutability": "mutable",
                        "name": "id",
                        "nameLocation": "4798:2:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1084,
                        "src": "4792:8:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 628,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "4792:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4780:21:1"
                  },
                  "returnParameters": {
                    "id": 633,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 632,
                        "mutability": "mutable",
                        "name": "svg",
                        "nameLocation": "4837:3:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1084,
                        "src": "4823:17:1",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 631,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "4823:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4822:19:1"
                  },
                  "scope": 1648,
                  "src": "4768:3268:1",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 1101,
                    "nodeType": "Block",
                    "src": "8118:316:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "hexValue": "3c696d6167652077696474683d22363022206865696768743d2236302220696d6167652d72656e646572696e673d22706978656c6174656422207072657365727665417370656374526174696f3d22784d6964594d69642220786c696e6b3a687265663d22646174613a696d6167652f706e673b6261736536342c",
                                  "id": 1095,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "string",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "8213:125:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_stringliteral_4e093557a78e66025a98d44b7ad003037537f50a2dc2063dd80e48e84615f893",
                                    "typeString": "literal_string \"<image width=\"60\" height=\"60\" image-rendering=\"pixelated\" preserveAspectRatio=\"xMidYMid\" xlink:href=\"data:image/png;base64,\""
                                  },
                                  "value": "<image width=\"60\" height=\"60\" image-rendering=\"pixelated\" preserveAspectRatio=\"xMidYMid\" xlink:href=\"data:image/png;base64,"
                                },
                                {
                                  "id": 1096,
                                  "name": "uri",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1086,
                                  "src": "8361:3:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                },
                                {
                                  "hexValue": "222f3e",
                                  "id": 1097,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "string",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "8387:5:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_stringliteral_b26240e716d0906f15dfc172fadbe2347b20c889873f9bdb04fd7ee803f7f175",
                                    "typeString": "literal_string \"\"/>\""
                                  },
                                  "value": "\"/>"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_stringliteral_4e093557a78e66025a98d44b7ad003037537f50a2dc2063dd80e48e84615f893",
                                    "typeString": "literal_string \"<image width=\"60\" height=\"60\" image-rendering=\"pixelated\" preserveAspectRatio=\"xMidYMid\" xlink:href=\"data:image/png;base64,\""
                                  },
                                  {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  },
                                  {
                                    "typeIdentifier": "t_stringliteral_b26240e716d0906f15dfc172fadbe2347b20c889873f9bdb04fd7ee803f7f175",
                                    "typeString": "literal_string \"\"/>\""
                                  }
                                ],
                                "expression": {
                                  "id": 1093,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "8174:3:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 1094,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encodePacked",
                                "nodeType": "MemberAccess",
                                "src": "8174:16:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 1098,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8174:237:1",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 1092,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "8149:6:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                              "typeString": "type(string storage pointer)"
                            },
                            "typeName": {
                              "id": 1091,
                              "name": "string",
                              "nodeType": "ElementaryTypeName",
                              "src": "8149:6:1",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1099,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8149:277:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        "functionReturnParameters": 1090,
                        "id": 1100,
                        "nodeType": "Return",
                        "src": "8129:297:1"
                      }
                    ]
                  },
                  "id": 1102,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "wrapTag",
                  "nameLocation": "8053:7:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1087,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1086,
                        "mutability": "mutable",
                        "name": "uri",
                        "nameLocation": "8075:3:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1102,
                        "src": "8061:17:1",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 1085,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "8061:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "8060:19:1"
                  },
                  "returnParameters": {
                    "id": 1090,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1089,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1102,
                        "src": "8103:13:1",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 1088,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "8103:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "8102:15:1"
                  },
                  "scope": 1648,
                  "src": "8044:390:1",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1179,
                    "nodeType": "Block",
                    "src": "8513:652:1",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1111,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1109,
                            "name": "value",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1104,
                            "src": "8719:5:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 1110,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8728:1:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "8719:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1115,
                        "nodeType": "IfStatement",
                        "src": "8715:53:1",
                        "trueBody": {
                          "id": 1114,
                          "nodeType": "Block",
                          "src": "8731:37:1",
                          "statements": [
                            {
                              "expression": {
                                "hexValue": "30",
                                "id": 1112,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "8753:3:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
                                  "typeString": "literal_string \"0\""
                                },
                                "value": "0"
                              },
                              "functionReturnParameters": 1108,
                              "id": 1113,
                              "nodeType": "Return",
                              "src": "8746:10:1"
                            }
                          ]
                        }
                      },
                      {
                        "assignments": [
                          1117
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1117,
                            "mutability": "mutable",
                            "name": "temp",
                            "nameLocation": "8786:4:1",
                            "nodeType": "VariableDeclaration",
                            "scope": 1179,
                            "src": "8778:12:1",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1116,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "8778:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1119,
                        "initialValue": {
                          "id": 1118,
                          "name": "value",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1104,
                          "src": "8793:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "8778:20:1"
                      },
                      {
                        "assignments": [
                          1121
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1121,
                            "mutability": "mutable",
                            "name": "digits",
                            "nameLocation": "8817:6:1",
                            "nodeType": "VariableDeclaration",
                            "scope": 1179,
                            "src": "8809:14:1",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1120,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "8809:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1122,
                        "nodeType": "VariableDeclarationStatement",
                        "src": "8809:14:1"
                      },
                      {
                        "body": {
                          "id": 1133,
                          "nodeType": "Block",
                          "src": "8852:60:1",
                          "statements": [
                            {
                              "expression": {
                                "id": 1127,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "++",
                                "prefix": false,
                                "src": "8867:8:1",
                                "subExpression": {
                                  "id": 1126,
                                  "name": "digits",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1121,
                                  "src": "8867:6:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1128,
                              "nodeType": "ExpressionStatement",
                              "src": "8867:8:1"
                            },
                            {
                              "expression": {
                                "id": 1131,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 1129,
                                  "name": "temp",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1117,
                                  "src": "8890:4:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "/=",
                                "rightHandSide": {
                                  "hexValue": "3130",
                                  "id": 1130,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "8898:2:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_10_by_1",
                                    "typeString": "int_const 10"
                                  },
                                  "value": "10"
                                },
                                "src": "8890:10:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1132,
                              "nodeType": "ExpressionStatement",
                              "src": "8890:10:1"
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1125,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1123,
                            "name": "temp",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1117,
                            "src": "8841:4:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 1124,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8849:1:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "8841:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1134,
                        "nodeType": "WhileStatement",
                        "src": "8834:78:1"
                      },
                      {
                        "assignments": [
                          1136
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1136,
                            "mutability": "mutable",
                            "name": "buffer",
                            "nameLocation": "8935:6:1",
                            "nodeType": "VariableDeclaration",
                            "scope": 1179,
                            "src": "8922:19:1",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes"
                            },
                            "typeName": {
                              "id": 1135,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "8922:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_storage_ptr",
                                "typeString": "bytes"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1141,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 1139,
                              "name": "digits",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1121,
                              "src": "8954:6:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1138,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "8944:9:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function (uint256) pure returns (bytes memory)"
                            },
                            "typeName": {
                              "id": 1137,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "8948:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_storage_ptr",
                                "typeString": "bytes"
                              }
                            }
                          },
                          "id": 1140,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8944:17:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "8922:39:1"
                      },
                      {
                        "body": {
                          "id": 1172,
                          "nodeType": "Block",
                          "src": "8991:135:1",
                          "statements": [
                            {
                              "expression": {
                                "id": 1147,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 1145,
                                  "name": "digits",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1121,
                                  "src": "9006:6:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "-=",
                                "rightHandSide": {
                                  "hexValue": "31",
                                  "id": 1146,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "9016:1:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1_by_1",
                                    "typeString": "int_const 1"
                                  },
                                  "value": "1"
                                },
                                "src": "9006:11:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1148,
                              "nodeType": "ExpressionStatement",
                              "src": "9006:11:1"
                            },
                            {
                              "expression": {
                                "id": 1166,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 1149,
                                    "name": "buffer",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1136,
                                    "src": "9032:6:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  },
                                  "id": 1151,
                                  "indexExpression": {
                                    "id": 1150,
                                    "name": "digits",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1121,
                                    "src": "9039:6:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "9032:14:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes1",
                                    "typeString": "bytes1"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "commonType": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          "id": 1163,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftExpression": {
                                            "hexValue": "3438",
                                            "id": 1156,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "9062:2:1",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_rational_48_by_1",
                                              "typeString": "int_const 48"
                                            },
                                            "value": "48"
                                          },
                                          "nodeType": "BinaryOperation",
                                          "operator": "+",
                                          "rightExpression": {
                                            "arguments": [
                                              {
                                                "commonType": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                },
                                                "id": 1161,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftExpression": {
                                                  "id": 1159,
                                                  "name": "value",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 1104,
                                                  "src": "9075:5:1",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                  }
                                                },
                                                "nodeType": "BinaryOperation",
                                                "operator": "%",
                                                "rightExpression": {
                                                  "hexValue": "3130",
                                                  "id": 1160,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": true,
                                                  "kind": "number",
                                                  "lValueRequested": false,
                                                  "nodeType": "Literal",
                                                  "src": "9083:2:1",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_rational_10_by_1",
                                                    "typeString": "int_const 10"
                                                  },
                                                  "value": "10"
                                                },
                                                "src": "9075:10:1",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              }
                                            ],
                                            "expression": {
                                              "argumentTypes": [
                                                {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              ],
                                              "id": 1158,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "lValueRequested": false,
                                              "nodeType": "ElementaryTypeNameExpression",
                                              "src": "9067:7:1",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_type$_t_uint256_$",
                                                "typeString": "type(uint256)"
                                              },
                                              "typeName": {
                                                "id": 1157,
                                                "name": "uint256",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "9067:7:1",
                                                "typeDescriptions": {}
                                              }
                                            },
                                            "id": 1162,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "kind": "typeConversion",
                                            "lValueRequested": false,
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "9067:19:1",
                                            "tryCall": false,
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "src": "9062:24:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        ],
                                        "id": 1155,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "nodeType": "ElementaryTypeNameExpression",
                                        "src": "9056:5:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_uint8_$",
                                          "typeString": "type(uint8)"
                                        },
                                        "typeName": {
                                          "id": 1154,
                                          "name": "uint8",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "9056:5:1",
                                          "typeDescriptions": {}
                                        }
                                      },
                                      "id": 1164,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "typeConversion",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "9056:31:1",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint8",
                                        "typeString": "uint8"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint8",
                                        "typeString": "uint8"
                                      }
                                    ],
                                    "id": 1153,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "9049:6:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_bytes1_$",
                                      "typeString": "type(bytes1)"
                                    },
                                    "typeName": {
                                      "id": 1152,
                                      "name": "bytes1",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "9049:6:1",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 1165,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "9049:39:1",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes1",
                                    "typeString": "bytes1"
                                  }
                                },
                                "src": "9032:56:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes1",
                                  "typeString": "bytes1"
                                }
                              },
                              "id": 1167,
                              "nodeType": "ExpressionStatement",
                              "src": "9032:56:1"
                            },
                            {
                              "expression": {
                                "id": 1170,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 1168,
                                  "name": "value",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1104,
                                  "src": "9103:5:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "/=",
                                "rightHandSide": {
                                  "hexValue": "3130",
                                  "id": 1169,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "9112:2:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_10_by_1",
                                    "typeString": "int_const 10"
                                  },
                                  "value": "10"
                                },
                                "src": "9103:11:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1171,
                              "nodeType": "ExpressionStatement",
                              "src": "9103:11:1"
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1144,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1142,
                            "name": "value",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1104,
                            "src": "8979:5:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 1143,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8988:1:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "8979:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1173,
                        "nodeType": "WhileStatement",
                        "src": "8972:154:1"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1176,
                              "name": "buffer",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1136,
                              "src": "9150:6:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 1175,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "9143:6:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                              "typeString": "type(string storage pointer)"
                            },
                            "typeName": {
                              "id": 1174,
                              "name": "string",
                              "nodeType": "ElementaryTypeName",
                              "src": "9143:6:1",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1177,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9143:14:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        "functionReturnParameters": 1108,
                        "id": 1178,
                        "nodeType": "Return",
                        "src": "9136:21:1"
                      }
                    ]
                  },
                  "id": 1180,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "toString",
                  "nameLocation": "8451:8:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1105,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1104,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "8468:5:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1180,
                        "src": "8460:13:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1103,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "8460:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "8459:15:1"
                  },
                  "returnParameters": {
                    "id": 1108,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1107,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1180,
                        "src": "8498:13:1",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 1106,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "8498:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "8497:15:1"
                  },
                  "scope": 1648,
                  "src": "8442:723:1",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1225,
                    "nodeType": "Block",
                    "src": "9374:671:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "hexValue": "2261747472696275746573223a205b",
                                  "id": 1199,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "string",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "9469:17:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_stringliteral_a9d6c84473de3f3a866c16d436066b8d4df325a647d2d3a768ffba45df210f3c",
                                    "typeString": "literal_string \"\"attributes\": [\""
                                  },
                                  "value": "\"attributes\": ["
                                },
                                {
                                  "arguments": [
                                    {
                                      "id": 1201,
                                      "name": "background_",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1182,
                                      "src": "9533:11:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint8",
                                        "typeString": "uint8"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint8",
                                        "typeString": "uint8"
                                      }
                                    ],
                                    "id": 1200,
                                    "name": "getBackgroundAttributes",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1246,
                                    "src": "9509:23:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_uint8_$returns$_t_string_memory_ptr_$",
                                      "typeString": "function (uint8) pure returns (string memory)"
                                    }
                                  },
                                  "id": 1202,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "9509:36:1",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                },
                                {
                                  "hexValue": "2c",
                                  "id": 1203,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "string",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "9568:3:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_stringliteral_3e7a35b97029f9e0cf6effd71c1a7958822e9a217d3a3aec886668a7dd8231cb",
                                    "typeString": "literal_string \",\""
                                  },
                                  "value": ","
                                },
                                {
                                  "arguments": [
                                    {
                                      "id": 1205,
                                      "name": "hand_type_",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1184,
                                      "src": "9612:10:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint8",
                                        "typeString": "uint8"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint8",
                                        "typeString": "uint8"
                                      }
                                    ],
                                    "id": 1204,
                                    "name": "getHandAttributes",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1266,
                                    "src": "9594:17:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_uint8_$returns$_t_string_memory_ptr_$",
                                      "typeString": "function (uint8) pure returns (string memory)"
                                    }
                                  },
                                  "id": 1206,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "9594:29:1",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                },
                                {
                                  "hexValue": "2c7b2274726169745f74797065223a2022506f7461746f222c202276616c7565223a22",
                                  "id": 1207,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "string",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "9646:37:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_stringliteral_bc46964ee67a2cae6d0f729fb15b9a5d4cb3d4ebbff2daaa6354914b023a1353",
                                    "typeString": "literal_string \",{\"trait_type\": \"Potato\", \"value\":\"\""
                                  },
                                  "value": ",{\"trait_type\": \"Potato\", \"value\":\""
                                },
                                {
                                  "condition": {
                                    "id": 1208,
                                    "name": "hasPotato_",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1186,
                                    "src": "9706:10:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "falseExpression": {
                                    "hexValue": "4e6f",
                                    "id": 1210,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "9727:4:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_267aa6f4694ec65b4167a753966ad7f8f38d1152f8a81ccf0d941bd0680eb852",
                                      "typeString": "literal_string \"No\""
                                    },
                                    "value": "No"
                                  },
                                  "id": 1211,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "Conditional",
                                  "src": "9706:25:1",
                                  "trueExpression": {
                                    "hexValue": "596573",
                                    "id": 1209,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "9719:5:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_84e4f592e52dc6e339ebb9a3f379f4dcf988a1253042a8ba9f03099551864bf0",
                                      "typeString": "literal_string \"Yes\""
                                    },
                                    "value": "Yes"
                                  },
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                },
                                {
                                  "hexValue": "227d2c7b22646973706c61795f74797065223a20226e756d626572222c2274726169745f74797065223a202247656e65726174696f6e222c202276616c7565223a22",
                                  "id": 1212,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "string",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "9754:68:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_stringliteral_41fbd829e4af7b81ddb12bdc9c3cbf422a9f60ac7a161c934b4e5a8a19f8d094",
                                    "typeString": "literal_string \"\"},{\"display_type\": \"number\",\"trait_type\": \"Generation\", \"value\":\"\""
                                  },
                                  "value": "\"},{\"display_type\": \"number\",\"trait_type\": \"Generation\", \"value\":\""
                                },
                                {
                                  "arguments": [
                                    {
                                      "id": 1214,
                                      "name": "generation_",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1188,
                                      "src": "9854:11:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint32",
                                        "typeString": "uint32"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint32",
                                        "typeString": "uint32"
                                      }
                                    ],
                                    "id": 1213,
                                    "name": "toString",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1180,
                                    "src": "9845:8:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
                                      "typeString": "function (uint256) pure returns (string memory)"
                                    }
                                  },
                                  "id": 1215,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "9845:21:1",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                },
                                {
                                  "hexValue": "227d2c7b2274726169745f74797065223a2022416374697665222c202276616c7565223a22",
                                  "id": 1216,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "string",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "9889:39:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_stringliteral_af5e4c39327d0e7b85c8cd1468bda17f7c9f1664111102bef75507362e009b62",
                                    "typeString": "literal_string \"\"},{\"trait_type\": \"Active\", \"value\":\"\""
                                  },
                                  "value": "\"},{\"trait_type\": \"Active\", \"value\":\""
                                },
                                {
                                  "condition": {
                                    "id": 1217,
                                    "name": "isActive_",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1190,
                                    "src": "9951:9:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "falseExpression": {
                                    "hexValue": "4e6f",
                                    "id": 1219,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "9971:4:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_267aa6f4694ec65b4167a753966ad7f8f38d1152f8a81ccf0d941bd0680eb852",
                                      "typeString": "literal_string \"No\""
                                    },
                                    "value": "No"
                                  },
                                  "id": 1220,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "Conditional",
                                  "src": "9951:24:1",
                                  "trueExpression": {
                                    "hexValue": "596573",
                                    "id": 1218,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "9963:5:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_84e4f592e52dc6e339ebb9a3f379f4dcf988a1253042a8ba9f03099551864bf0",
                                      "typeString": "literal_string \"Yes\""
                                    },
                                    "value": "Yes"
                                  },
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                },
                                {
                                  "hexValue": "227d5d",
                                  "id": 1221,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "string",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "9998:5:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_stringliteral_55d1e182806bfa9e2513939eb2ae6e56b092a4b2806e0521aaf1ff702ce46bf5",
                                    "typeString": "literal_string \"\"}]\""
                                  },
                                  "value": "\"}]"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_stringliteral_a9d6c84473de3f3a866c16d436066b8d4df325a647d2d3a768ffba45df210f3c",
                                    "typeString": "literal_string \"\"attributes\": [\""
                                  },
                                  {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  },
                                  {
                                    "typeIdentifier": "t_stringliteral_3e7a35b97029f9e0cf6effd71c1a7958822e9a217d3a3aec886668a7dd8231cb",
                                    "typeString": "literal_string \",\""
                                  },
                                  {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  },
                                  {
                                    "typeIdentifier": "t_stringliteral_bc46964ee67a2cae6d0f729fb15b9a5d4cb3d4ebbff2daaa6354914b023a1353",
                                    "typeString": "literal_string \",{\"trait_type\": \"Potato\", \"value\":\"\""
                                  },
                                  {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  },
                                  {
                                    "typeIdentifier": "t_stringliteral_41fbd829e4af7b81ddb12bdc9c3cbf422a9f60ac7a161c934b4e5a8a19f8d094",
                                    "typeString": "literal_string \"\"},{\"display_type\": \"number\",\"trait_type\": \"Generation\", \"value\":\"\""
                                  },
                                  {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  },
                                  {
                                    "typeIdentifier": "t_stringliteral_af5e4c39327d0e7b85c8cd1468bda17f7c9f1664111102bef75507362e009b62",
                                    "typeString": "literal_string \"\"},{\"trait_type\": \"Active\", \"value\":\"\""
                                  },
                                  {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  },
                                  {
                                    "typeIdentifier": "t_stringliteral_55d1e182806bfa9e2513939eb2ae6e56b092a4b2806e0521aaf1ff702ce46bf5",
                                    "typeString": "literal_string \"\"}]\""
                                  }
                                ],
                                "expression": {
                                  "id": 1197,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "9430:3:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 1198,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encodePacked",
                                "nodeType": "MemberAccess",
                                "src": "9430:16:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 1222,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "9430:592:1",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 1196,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "9405:6:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                              "typeString": "type(string storage pointer)"
                            },
                            "typeName": {
                              "id": 1195,
                              "name": "string",
                              "nodeType": "ElementaryTypeName",
                              "src": "9405:6:1",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1223,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9405:632:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        "functionReturnParameters": 1194,
                        "id": 1224,
                        "nodeType": "Return",
                        "src": "9385:652:1"
                      }
                    ]
                  },
                  "functionSelector": "646c1464",
                  "id": 1226,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getAttributes",
                  "nameLocation": "9182:13:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1191,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1182,
                        "mutability": "mutable",
                        "name": "background_",
                        "nameLocation": "9212:11:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1226,
                        "src": "9206:17:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 1181,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "9206:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1184,
                        "mutability": "mutable",
                        "name": "hand_type_",
                        "nameLocation": "9240:10:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1226,
                        "src": "9234:16:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 1183,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "9234:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1186,
                        "mutability": "mutable",
                        "name": "hasPotato_",
                        "nameLocation": "9266:10:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1226,
                        "src": "9261:15:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1185,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "9261:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1188,
                        "mutability": "mutable",
                        "name": "generation_",
                        "nameLocation": "9294:11:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1226,
                        "src": "9287:18:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        "typeName": {
                          "id": 1187,
                          "name": "uint32",
                          "nodeType": "ElementaryTypeName",
                          "src": "9287:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1190,
                        "mutability": "mutable",
                        "name": "isActive_",
                        "nameLocation": "9321:9:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1226,
                        "src": "9316:14:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1189,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "9316:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "9195:142:1"
                  },
                  "returnParameters": {
                    "id": 1194,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1193,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1226,
                        "src": "9359:13:1",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 1192,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "9359:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "9358:15:1"
                  },
                  "scope": 1648,
                  "src": "9173:872:1",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 1245,
                    "nodeType": "Block",
                    "src": "10159:256:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "hexValue": "7b2274726169745f74797065223a224261636b67726f756e64222c202276616c7565223a22",
                                  "id": 1237,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "string",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "10254:39:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_stringliteral_bac141df451ff89b6f77bbe970ff45a5da43dda5f9b9b17f412346e0390cf501",
                                    "typeString": "literal_string \"{\"trait_type\":\"Background\", \"value\":\"\""
                                  },
                                  "value": "{\"trait_type\":\"Background\", \"value\":\""
                                },
                                {
                                  "arguments": [
                                    {
                                      "id": 1239,
                                      "name": "background_",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1228,
                                      "src": "10334:11:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint8",
                                        "typeString": "uint8"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint8",
                                        "typeString": "uint8"
                                      }
                                    ],
                                    "id": 1238,
                                    "name": "getBackgroundName",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1391,
                                    "src": "10316:17:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_uint8_$returns$_t_string_memory_ptr_$",
                                      "typeString": "function (uint8) pure returns (string memory)"
                                    }
                                  },
                                  "id": 1240,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "10316:30:1",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                },
                                {
                                  "hexValue": "227d",
                                  "id": 1241,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "string",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "10369:4:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_stringliteral_835b459273672627bbafc3a2eded65187a632f4128bdc79e126c7ef579a27475",
                                    "typeString": "literal_string \"\"}\""
                                  },
                                  "value": "\"}"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_stringliteral_bac141df451ff89b6f77bbe970ff45a5da43dda5f9b9b17f412346e0390cf501",
                                    "typeString": "literal_string \"{\"trait_type\":\"Background\", \"value\":\"\""
                                  },
                                  {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  },
                                  {
                                    "typeIdentifier": "t_stringliteral_835b459273672627bbafc3a2eded65187a632f4128bdc79e126c7ef579a27475",
                                    "typeString": "literal_string \"\"}\""
                                  }
                                ],
                                "expression": {
                                  "id": 1235,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "10215:3:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 1236,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encodePacked",
                                "nodeType": "MemberAccess",
                                "src": "10215:16:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 1242,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "10215:177:1",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 1234,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "10190:6:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                              "typeString": "type(string storage pointer)"
                            },
                            "typeName": {
                              "id": 1233,
                              "name": "string",
                              "nodeType": "ElementaryTypeName",
                              "src": "10190:6:1",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1243,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10190:217:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        "functionReturnParameters": 1232,
                        "id": 1244,
                        "nodeType": "Return",
                        "src": "10170:237:1"
                      }
                    ]
                  },
                  "id": 1246,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getBackgroundAttributes",
                  "nameLocation": "10062:23:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1229,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1228,
                        "mutability": "mutable",
                        "name": "background_",
                        "nameLocation": "10102:11:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1246,
                        "src": "10096:17:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 1227,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "10096:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "10085:35:1"
                  },
                  "returnParameters": {
                    "id": 1232,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1231,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1246,
                        "src": "10144:13:1",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 1230,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "10144:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "10143:15:1"
                  },
                  "scope": 1648,
                  "src": "10053:362:1",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1265,
                    "nodeType": "Block",
                    "src": "10522:249:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "hexValue": "7b2274726169745f74797065223a2248616e642054797065222c202276616c7565223a2022",
                                  "id": 1257,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "string",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "10617:39:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_stringliteral_4fe68489c9c59542e448c09c7cb19a25565db1d56926ad418d32ec5d60a94a00",
                                    "typeString": "literal_string \"{\"trait_type\":\"Hand Type\", \"value\": \"\""
                                  },
                                  "value": "{\"trait_type\":\"Hand Type\", \"value\": \""
                                },
                                {
                                  "arguments": [
                                    {
                                      "id": 1259,
                                      "name": "hand_type_",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1248,
                                      "src": "10691:10:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint8",
                                        "typeString": "uint8"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint8",
                                        "typeString": "uint8"
                                      }
                                    ],
                                    "id": 1258,
                                    "name": "getHandName",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1647,
                                    "src": "10679:11:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_uint8_$returns$_t_string_memory_ptr_$",
                                      "typeString": "function (uint8) pure returns (string memory)"
                                    }
                                  },
                                  "id": 1260,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "10679:23:1",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                },
                                {
                                  "hexValue": "227d",
                                  "id": 1261,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "string",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "10725:4:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_stringliteral_835b459273672627bbafc3a2eded65187a632f4128bdc79e126c7ef579a27475",
                                    "typeString": "literal_string \"\"}\""
                                  },
                                  "value": "\"}"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_stringliteral_4fe68489c9c59542e448c09c7cb19a25565db1d56926ad418d32ec5d60a94a00",
                                    "typeString": "literal_string \"{\"trait_type\":\"Hand Type\", \"value\": \"\""
                                  },
                                  {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  },
                                  {
                                    "typeIdentifier": "t_stringliteral_835b459273672627bbafc3a2eded65187a632f4128bdc79e126c7ef579a27475",
                                    "typeString": "literal_string \"\"}\""
                                  }
                                ],
                                "expression": {
                                  "id": 1255,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "10578:3:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 1256,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encodePacked",
                                "nodeType": "MemberAccess",
                                "src": "10578:16:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 1262,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "10578:170:1",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 1254,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "10553:6:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                              "typeString": "type(string storage pointer)"
                            },
                            "typeName": {
                              "id": 1253,
                              "name": "string",
                              "nodeType": "ElementaryTypeName",
                              "src": "10553:6:1",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1263,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10553:210:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        "functionReturnParameters": 1252,
                        "id": 1264,
                        "nodeType": "Return",
                        "src": "10533:230:1"
                      }
                    ]
                  },
                  "id": 1266,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getHandAttributes",
                  "nameLocation": "10432:17:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1249,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1248,
                        "mutability": "mutable",
                        "name": "hand_type_",
                        "nameLocation": "10466:10:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1266,
                        "src": "10460:16:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 1247,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "10460:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "10449:34:1"
                  },
                  "returnParameters": {
                    "id": 1252,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1251,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1266,
                        "src": "10507:13:1",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 1250,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "10507:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "10506:15:1"
                  },
                  "scope": 1648,
                  "src": "10423:348:1",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1390,
                    "nodeType": "Block",
                    "src": "10977:899:1",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          },
                          "id": 1275,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1273,
                            "name": "id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1268,
                            "src": "10992:2:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<=",
                          "rightExpression": {
                            "hexValue": "3230",
                            "id": 1274,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "10998:2:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_20_by_1",
                              "typeString": "int_const 20"
                            },
                            "value": "20"
                          },
                          "src": "10992:8:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1387,
                        "nodeType": "IfStatement",
                        "src": "10988:842:1",
                        "trueBody": {
                          "id": 1386,
                          "nodeType": "Block",
                          "src": "11002:828:1",
                          "statements": [
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                },
                                "id": 1278,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 1276,
                                  "name": "id",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1268,
                                  "src": "11021:2:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint8",
                                    "typeString": "uint8"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "<",
                                "rightExpression": {
                                  "hexValue": "3130",
                                  "id": 1277,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "11026:2:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_10_by_1",
                                    "typeString": "int_const 10"
                                  },
                                  "value": "10"
                                },
                                "src": "11021:7:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 1327,
                              "nodeType": "IfStatement",
                              "src": "11017:384:1",
                              "trueBody": {
                                "id": 1326,
                                "nodeType": "Block",
                                "src": "11030:371:1",
                                "statements": [
                                  {
                                    "condition": {
                                      "commonType": {
                                        "typeIdentifier": "t_uint8",
                                        "typeString": "uint8"
                                      },
                                      "id": 1281,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "id": 1279,
                                        "name": "id",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1268,
                                        "src": "11053:2:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint8",
                                          "typeString": "uint8"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "<",
                                      "rightExpression": {
                                        "hexValue": "35",
                                        "id": 1280,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "11058:1:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_5_by_1",
                                          "typeString": "int_const 5"
                                        },
                                        "value": "5"
                                      },
                                      "src": "11053:6:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "id": 1302,
                                    "nodeType": "IfStatement",
                                    "src": "11049:204:1",
                                    "trueBody": {
                                      "id": 1301,
                                      "nodeType": "Block",
                                      "src": "11061:192:1",
                                      "statements": [
                                        {
                                          "condition": {
                                            "commonType": {
                                              "typeIdentifier": "t_uint8",
                                              "typeString": "uint8"
                                            },
                                            "id": 1284,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftExpression": {
                                              "id": 1282,
                                              "name": "id",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 1268,
                                              "src": "11088:2:1",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint8",
                                                "typeString": "uint8"
                                              }
                                            },
                                            "nodeType": "BinaryOperation",
                                            "operator": "<",
                                            "rightExpression": {
                                              "hexValue": "33",
                                              "id": 1283,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "kind": "number",
                                              "lValueRequested": false,
                                              "nodeType": "Literal",
                                              "src": "11093:1:1",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_rational_3_by_1",
                                                "typeString": "int_const 3"
                                              },
                                              "value": "3"
                                            },
                                            "src": "11088:6:1",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_bool",
                                              "typeString": "bool"
                                            }
                                          },
                                          "id": 1293,
                                          "nodeType": "IfStatement",
                                          "src": "11084:95:1",
                                          "trueBody": {
                                            "id": 1292,
                                            "nodeType": "Block",
                                            "src": "11096:83:1",
                                            "statements": [
                                              {
                                                "expression": {
                                                  "condition": {
                                                    "commonType": {
                                                      "typeIdentifier": "t_uint8",
                                                      "typeString": "uint8"
                                                    },
                                                    "id": 1287,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "leftExpression": {
                                                      "id": 1285,
                                                      "name": "id",
                                                      "nodeType": "Identifier",
                                                      "overloadedDeclarations": [],
                                                      "referencedDeclaration": 1268,
                                                      "src": "11130:2:1",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_uint8",
                                                        "typeString": "uint8"
                                                      }
                                                    },
                                                    "nodeType": "BinaryOperation",
                                                    "operator": "==",
                                                    "rightExpression": {
                                                      "hexValue": "31",
                                                      "id": 1286,
                                                      "isConstant": false,
                                                      "isLValue": false,
                                                      "isPure": true,
                                                      "kind": "number",
                                                      "lValueRequested": false,
                                                      "nodeType": "Literal",
                                                      "src": "11136:1:1",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_rational_1_by_1",
                                                        "typeString": "int_const 1"
                                                      },
                                                      "value": "1"
                                                    },
                                                    "src": "11130:7:1",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_bool",
                                                      "typeString": "bool"
                                                    }
                                                  },
                                                  "falseExpression": {
                                                    "hexValue": "426c7565",
                                                    "id": 1289,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "kind": "string",
                                                    "lValueRequested": false,
                                                    "nodeType": "Literal",
                                                    "src": "11149:6:1",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_stringliteral_4a4529eefd9b0876ecb7bdf2c14d57107d511091ab85cfb1b70d3384c94d6f84",
                                                      "typeString": "literal_string \"Blue\""
                                                    },
                                                    "value": "Blue"
                                                  },
                                                  "id": 1290,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "nodeType": "Conditional",
                                                  "src": "11130:25:1",
                                                  "trueExpression": {
                                                    "hexValue": "426c7565",
                                                    "id": 1288,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "kind": "string",
                                                    "lValueRequested": false,
                                                    "nodeType": "Literal",
                                                    "src": "11140:6:1",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_stringliteral_4a4529eefd9b0876ecb7bdf2c14d57107d511091ab85cfb1b70d3384c94d6f84",
                                                      "typeString": "literal_string \"Blue\""
                                                    },
                                                    "value": "Blue"
                                                  },
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_string_memory_ptr",
                                                    "typeString": "string memory"
                                                  }
                                                },
                                                "functionReturnParameters": 1272,
                                                "id": 1291,
                                                "nodeType": "Return",
                                                "src": "11123:32:1"
                                              }
                                            ]
                                          }
                                        },
                                        {
                                          "expression": {
                                            "condition": {
                                              "commonType": {
                                                "typeIdentifier": "t_uint8",
                                                "typeString": "uint8"
                                              },
                                              "id": 1296,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "leftExpression": {
                                                "id": 1294,
                                                "name": "id",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 1268,
                                                "src": "11208:2:1",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint8",
                                                  "typeString": "uint8"
                                                }
                                              },
                                              "nodeType": "BinaryOperation",
                                              "operator": "==",
                                              "rightExpression": {
                                                "hexValue": "33",
                                                "id": 1295,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "number",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "11214:1:1",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_rational_3_by_1",
                                                  "typeString": "int_const 3"
                                                },
                                                "value": "3"
                                              },
                                              "src": "11208:7:1",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_bool",
                                                "typeString": "bool"
                                              }
                                            },
                                            "falseExpression": {
                                              "hexValue": "426c7565",
                                              "id": 1298,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "kind": "string",
                                              "lValueRequested": false,
                                              "nodeType": "Literal",
                                              "src": "11227:6:1",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_stringliteral_4a4529eefd9b0876ecb7bdf2c14d57107d511091ab85cfb1b70d3384c94d6f84",
                                                "typeString": "literal_string \"Blue\""
                                              },
                                              "value": "Blue"
                                            },
                                            "id": 1299,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "nodeType": "Conditional",
                                            "src": "11208:25:1",
                                            "trueExpression": {
                                              "hexValue": "426c7565",
                                              "id": 1297,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "kind": "string",
                                              "lValueRequested": false,
                                              "nodeType": "Literal",
                                              "src": "11218:6:1",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_stringliteral_4a4529eefd9b0876ecb7bdf2c14d57107d511091ab85cfb1b70d3384c94d6f84",
                                                "typeString": "literal_string \"Blue\""
                                              },
                                              "value": "Blue"
                                            },
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_string_memory_ptr",
                                              "typeString": "string memory"
                                            }
                                          },
                                          "functionReturnParameters": 1272,
                                          "id": 1300,
                                          "nodeType": "Return",
                                          "src": "11201:32:1"
                                        }
                                      ]
                                    }
                                  },
                                  {
                                    "condition": {
                                      "commonType": {
                                        "typeIdentifier": "t_uint8",
                                        "typeString": "uint8"
                                      },
                                      "id": 1305,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "id": 1303,
                                        "name": "id",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1268,
                                        "src": "11275:2:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint8",
                                          "typeString": "uint8"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "<",
                                      "rightExpression": {
                                        "hexValue": "37",
                                        "id": 1304,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "11280:1:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_7_by_1",
                                          "typeString": "int_const 7"
                                        },
                                        "value": "7"
                                      },
                                      "src": "11275:6:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "id": 1313,
                                    "nodeType": "IfStatement",
                                    "src": "11271:44:1",
                                    "trueBody": {
                                      "expression": {
                                        "condition": {
                                          "commonType": {
                                            "typeIdentifier": "t_uint8",
                                            "typeString": "uint8"
                                          },
                                          "id": 1308,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftExpression": {
                                            "id": 1306,
                                            "name": "id",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1268,
                                            "src": "11290:2:1",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint8",
                                              "typeString": "uint8"
                                            }
                                          },
                                          "nodeType": "BinaryOperation",
                                          "operator": "==",
                                          "rightExpression": {
                                            "hexValue": "35",
                                            "id": 1307,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "11296:1:1",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_rational_5_by_1",
                                              "typeString": "int_const 5"
                                            },
                                            "value": "5"
                                          },
                                          "src": "11290:7:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                          }
                                        },
                                        "falseExpression": {
                                          "hexValue": "426c7565",
                                          "id": 1310,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "string",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "11309:6:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_stringliteral_4a4529eefd9b0876ecb7bdf2c14d57107d511091ab85cfb1b70d3384c94d6f84",
                                            "typeString": "literal_string \"Blue\""
                                          },
                                          "value": "Blue"
                                        },
                                        "id": 1311,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "Conditional",
                                        "src": "11290:25:1",
                                        "trueExpression": {
                                          "hexValue": "426c7565",
                                          "id": 1309,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "string",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "11300:6:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_stringliteral_4a4529eefd9b0876ecb7bdf2c14d57107d511091ab85cfb1b70d3384c94d6f84",
                                            "typeString": "literal_string \"Blue\""
                                          },
                                          "value": "Blue"
                                        },
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_string_memory_ptr",
                                          "typeString": "string memory"
                                        }
                                      },
                                      "functionReturnParameters": 1272,
                                      "id": 1312,
                                      "nodeType": "Return",
                                      "src": "11283:32:1"
                                    }
                                  },
                                  {
                                    "expression": {
                                      "condition": {
                                        "commonType": {
                                          "typeIdentifier": "t_uint8",
                                          "typeString": "uint8"
                                        },
                                        "id": 1316,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "id": 1314,
                                          "name": "id",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1268,
                                          "src": "11341:2:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint8",
                                            "typeString": "uint8"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "==",
                                        "rightExpression": {
                                          "hexValue": "37",
                                          "id": 1315,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "number",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "11347:1:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_rational_7_by_1",
                                            "typeString": "int_const 7"
                                          },
                                          "value": "7"
                                        },
                                        "src": "11341:7:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        }
                                      },
                                      "falseExpression": {
                                        "condition": {
                                          "commonType": {
                                            "typeIdentifier": "t_uint8",
                                            "typeString": "uint8"
                                          },
                                          "id": 1320,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftExpression": {
                                            "id": 1318,
                                            "name": "id",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1268,
                                            "src": "11360:2:1",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint8",
                                              "typeString": "uint8"
                                            }
                                          },
                                          "nodeType": "BinaryOperation",
                                          "operator": "==",
                                          "rightExpression": {
                                            "hexValue": "38",
                                            "id": 1319,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "11366:1:1",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_rational_8_by_1",
                                              "typeString": "int_const 8"
                                            },
                                            "value": "8"
                                          },
                                          "src": "11360:7:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                          }
                                        },
                                        "falseExpression": {
                                          "hexValue": "426c7565",
                                          "id": 1322,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "string",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "11379:6:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_stringliteral_4a4529eefd9b0876ecb7bdf2c14d57107d511091ab85cfb1b70d3384c94d6f84",
                                            "typeString": "literal_string \"Blue\""
                                          },
                                          "value": "Blue"
                                        },
                                        "id": 1323,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "Conditional",
                                        "src": "11360:25:1",
                                        "trueExpression": {
                                          "hexValue": "426c7565",
                                          "id": 1321,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "string",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "11370:6:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_stringliteral_4a4529eefd9b0876ecb7bdf2c14d57107d511091ab85cfb1b70d3384c94d6f84",
                                            "typeString": "literal_string \"Blue\""
                                          },
                                          "value": "Blue"
                                        },
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_string_memory_ptr",
                                          "typeString": "string memory"
                                        }
                                      },
                                      "id": 1324,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "Conditional",
                                      "src": "11341:44:1",
                                      "trueExpression": {
                                        "hexValue": "426c7565",
                                        "id": 1317,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "string",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "11351:6:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_stringliteral_4a4529eefd9b0876ecb7bdf2c14d57107d511091ab85cfb1b70d3384c94d6f84",
                                          "typeString": "literal_string \"Blue\""
                                        },
                                        "value": "Blue"
                                      },
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_string_memory_ptr",
                                        "typeString": "string memory"
                                      }
                                    },
                                    "functionReturnParameters": 1272,
                                    "id": 1325,
                                    "nodeType": "Return",
                                    "src": "11334:51:1"
                                  }
                                ]
                              }
                            },
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                },
                                "id": 1330,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 1328,
                                  "name": "id",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1268,
                                  "src": "11419:2:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint8",
                                    "typeString": "uint8"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "<=",
                                "rightExpression": {
                                  "hexValue": "3135",
                                  "id": 1329,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "11425:2:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_15_by_1",
                                    "typeString": "int_const 15"
                                  },
                                  "value": "15"
                                },
                                "src": "11419:8:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 1361,
                              "nodeType": "IfStatement",
                              "src": "11415:233:1",
                              "trueBody": {
                                "id": 1360,
                                "nodeType": "Block",
                                "src": "11429:219:1",
                                "statements": [
                                  {
                                    "condition": {
                                      "commonType": {
                                        "typeIdentifier": "t_uint8",
                                        "typeString": "uint8"
                                      },
                                      "id": 1333,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "id": 1331,
                                        "name": "id",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1268,
                                        "src": "11452:2:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint8",
                                          "typeString": "uint8"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "<",
                                      "rightExpression": {
                                        "hexValue": "3133",
                                        "id": 1332,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "11457:2:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_13_by_1",
                                          "typeString": "int_const 13"
                                        },
                                        "value": "13"
                                      },
                                      "src": "11452:7:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "id": 1347,
                                    "nodeType": "IfStatement",
                                    "src": "11448:110:1",
                                    "trueBody": {
                                      "id": 1346,
                                      "nodeType": "Block",
                                      "src": "11461:97:1",
                                      "statements": [
                                        {
                                          "expression": {
                                            "condition": {
                                              "commonType": {
                                                "typeIdentifier": "t_uint8",
                                                "typeString": "uint8"
                                              },
                                              "id": 1336,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "leftExpression": {
                                                "id": 1334,
                                                "name": "id",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 1268,
                                                "src": "11491:2:1",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint8",
                                                  "typeString": "uint8"
                                                }
                                              },
                                              "nodeType": "BinaryOperation",
                                              "operator": "==",
                                              "rightExpression": {
                                                "hexValue": "3130",
                                                "id": 1335,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "number",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "11497:2:1",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_rational_10_by_1",
                                                  "typeString": "int_const 10"
                                                },
                                                "value": "10"
                                              },
                                              "src": "11491:8:1",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_bool",
                                                "typeString": "bool"
                                              }
                                            },
                                            "falseExpression": {
                                              "condition": {
                                                "commonType": {
                                                  "typeIdentifier": "t_uint8",
                                                  "typeString": "uint8"
                                                },
                                                "id": 1340,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftExpression": {
                                                  "id": 1338,
                                                  "name": "id",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 1268,
                                                  "src": "11511:2:1",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_uint8",
                                                    "typeString": "uint8"
                                                  }
                                                },
                                                "nodeType": "BinaryOperation",
                                                "operator": "==",
                                                "rightExpression": {
                                                  "hexValue": "3131",
                                                  "id": 1339,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": true,
                                                  "kind": "number",
                                                  "lValueRequested": false,
                                                  "nodeType": "Literal",
                                                  "src": "11517:2:1",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_rational_11_by_1",
                                                    "typeString": "int_const 11"
                                                  },
                                                  "value": "11"
                                                },
                                                "src": "11511:8:1",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_bool",
                                                  "typeString": "bool"
                                                }
                                              },
                                              "falseExpression": {
                                                "hexValue": "477265656e",
                                                "id": 1342,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "string",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "11531:7:1",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_stringliteral_4ffd8760e08f2acff97aaf4c03e6e4ddfc608bc3f6fec19ea4c9d65014dc87b0",
                                                  "typeString": "literal_string \"Green\""
                                                },
                                                "value": "Green"
                                              },
                                              "id": 1343,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "nodeType": "Conditional",
                                              "src": "11511:27:1",
                                              "trueExpression": {
                                                "hexValue": "426c7565",
                                                "id": 1341,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "string",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "11522:6:1",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_stringliteral_4a4529eefd9b0876ecb7bdf2c14d57107d511091ab85cfb1b70d3384c94d6f84",
                                                  "typeString": "literal_string \"Blue\""
                                                },
                                                "value": "Blue"
                                              },
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_string_memory_ptr",
                                                "typeString": "string memory"
                                              }
                                            },
                                            "id": 1344,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "nodeType": "Conditional",
                                            "src": "11491:47:1",
                                            "trueExpression": {
                                              "hexValue": "426c7565",
                                              "id": 1337,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "kind": "string",
                                              "lValueRequested": false,
                                              "nodeType": "Literal",
                                              "src": "11502:6:1",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_stringliteral_4a4529eefd9b0876ecb7bdf2c14d57107d511091ab85cfb1b70d3384c94d6f84",
                                                "typeString": "literal_string \"Blue\""
                                              },
                                              "value": "Blue"
                                            },
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_string_memory_ptr",
                                              "typeString": "string memory"
                                            }
                                          },
                                          "functionReturnParameters": 1272,
                                          "id": 1345,
                                          "nodeType": "Return",
                                          "src": "11484:54:1"
                                        }
                                      ]
                                    }
                                  },
                                  {
                                    "expression": {
                                      "condition": {
                                        "commonType": {
                                          "typeIdentifier": "t_uint8",
                                          "typeString": "uint8"
                                        },
                                        "id": 1350,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "id": 1348,
                                          "name": "id",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1268,
                                          "src": "11583:2:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint8",
                                            "typeString": "uint8"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "==",
                                        "rightExpression": {
                                          "hexValue": "3133",
                                          "id": 1349,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "number",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "11589:2:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_rational_13_by_1",
                                            "typeString": "int_const 13"
                                          },
                                          "value": "13"
                                        },
                                        "src": "11583:8:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        }
                                      },
                                      "falseExpression": {
                                        "condition": {
                                          "commonType": {
                                            "typeIdentifier": "t_uint8",
                                            "typeString": "uint8"
                                          },
                                          "id": 1354,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftExpression": {
                                            "id": 1352,
                                            "name": "id",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1268,
                                            "src": "11604:2:1",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint8",
                                              "typeString": "uint8"
                                            }
                                          },
                                          "nodeType": "BinaryOperation",
                                          "operator": "==",
                                          "rightExpression": {
                                            "hexValue": "3134",
                                            "id": 1353,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "11610:2:1",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_rational_14_by_1",
                                              "typeString": "int_const 14"
                                            },
                                            "value": "14"
                                          },
                                          "src": "11604:8:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                          }
                                        },
                                        "falseExpression": {
                                          "hexValue": "477265656e",
                                          "id": 1356,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "string",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "11625:7:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_stringliteral_4ffd8760e08f2acff97aaf4c03e6e4ddfc608bc3f6fec19ea4c9d65014dc87b0",
                                            "typeString": "literal_string \"Green\""
                                          },
                                          "value": "Green"
                                        },
                                        "id": 1357,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "Conditional",
                                        "src": "11604:28:1",
                                        "trueExpression": {
                                          "hexValue": "477265656e",
                                          "id": 1355,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "string",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "11615:7:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_stringliteral_4ffd8760e08f2acff97aaf4c03e6e4ddfc608bc3f6fec19ea4c9d65014dc87b0",
                                            "typeString": "literal_string \"Green\""
                                          },
                                          "value": "Green"
                                        },
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_string_memory_ptr",
                                          "typeString": "string memory"
                                        }
                                      },
                                      "id": 1358,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "Conditional",
                                      "src": "11583:49:1",
                                      "trueExpression": {
                                        "hexValue": "477265656e",
                                        "id": 1351,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "string",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "11594:7:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_stringliteral_4ffd8760e08f2acff97aaf4c03e6e4ddfc608bc3f6fec19ea4c9d65014dc87b0",
                                          "typeString": "literal_string \"Green\""
                                        },
                                        "value": "Green"
                                      },
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_string_memory_ptr",
                                        "typeString": "string memory"
                                      }
                                    },
                                    "functionReturnParameters": 1272,
                                    "id": 1359,
                                    "nodeType": "Return",
                                    "src": "11576:56:1"
                                  }
                                ]
                              }
                            },
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                },
                                "id": 1364,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 1362,
                                  "name": "id",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1268,
                                  "src": "11666:2:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint8",
                                    "typeString": "uint8"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "<",
                                "rightExpression": {
                                  "hexValue": "3138",
                                  "id": 1363,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "11671:2:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_18_by_1",
                                    "typeString": "int_const 18"
                                  },
                                  "value": "18"
                                },
                                "src": "11666:7:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 1373,
                              "nodeType": "IfStatement",
                              "src": "11662:83:1",
                              "trueBody": {
                                "id": 1372,
                                "nodeType": "Block",
                                "src": "11675:70:1",
                                "statements": [
                                  {
                                    "expression": {
                                      "condition": {
                                        "commonType": {
                                          "typeIdentifier": "t_uint8",
                                          "typeString": "uint8"
                                        },
                                        "id": 1367,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "id": 1365,
                                          "name": "id",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1268,
                                          "src": "11701:2:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint8",
                                            "typeString": "uint8"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "==",
                                        "rightExpression": {
                                          "hexValue": "3136",
                                          "id": 1366,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "number",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "11707:2:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_rational_16_by_1",
                                            "typeString": "int_const 16"
                                          },
                                          "value": "16"
                                        },
                                        "src": "11701:8:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        }
                                      },
                                      "falseExpression": {
                                        "hexValue": "477265656e",
                                        "id": 1369,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "string",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "11722:7:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_stringliteral_4ffd8760e08f2acff97aaf4c03e6e4ddfc608bc3f6fec19ea4c9d65014dc87b0",
                                          "typeString": "literal_string \"Green\""
                                        },
                                        "value": "Green"
                                      },
                                      "id": 1370,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "Conditional",
                                      "src": "11701:28:1",
                                      "trueExpression": {
                                        "hexValue": "477265656e",
                                        "id": 1368,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "string",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "11712:7:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_stringliteral_4ffd8760e08f2acff97aaf4c03e6e4ddfc608bc3f6fec19ea4c9d65014dc87b0",
                                          "typeString": "literal_string \"Green\""
                                        },
                                        "value": "Green"
                                      },
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_string_memory_ptr",
                                        "typeString": "string memory"
                                      }
                                    },
                                    "functionReturnParameters": 1272,
                                    "id": 1371,
                                    "nodeType": "Return",
                                    "src": "11694:35:1"
                                  }
                                ]
                              }
                            },
                            {
                              "expression": {
                                "condition": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint8",
                                    "typeString": "uint8"
                                  },
                                  "id": 1376,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 1374,
                                    "name": "id",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1268,
                                    "src": "11766:2:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint8",
                                      "typeString": "uint8"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "==",
                                  "rightExpression": {
                                    "hexValue": "3138",
                                    "id": 1375,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "11772:2:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_18_by_1",
                                      "typeString": "int_const 18"
                                    },
                                    "value": "18"
                                  },
                                  "src": "11766:8:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "falseExpression": {
                                  "condition": {
                                    "commonType": {
                                      "typeIdentifier": "t_uint8",
                                      "typeString": "uint8"
                                    },
                                    "id": 1380,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 1378,
                                      "name": "id",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1268,
                                      "src": "11788:2:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint8",
                                        "typeString": "uint8"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "==",
                                    "rightExpression": {
                                      "hexValue": "3139",
                                      "id": 1379,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "11794:2:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_19_by_1",
                                        "typeString": "int_const 19"
                                      },
                                      "value": "19"
                                    },
                                    "src": "11788:8:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "falseExpression": {
                                    "hexValue": "507572706c65",
                                    "id": 1382,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "11810:8:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_5964c6a3c85f82108f9dd24a7bca48e6443e395a6c28002cf69a3b6f4e96cf01",
                                      "typeString": "literal_string \"Purple\""
                                    },
                                    "value": "Purple"
                                  },
                                  "id": 1383,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "Conditional",
                                  "src": "11788:30:1",
                                  "trueExpression": {
                                    "hexValue": "507572706c65",
                                    "id": 1381,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "11799:8:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_5964c6a3c85f82108f9dd24a7bca48e6443e395a6c28002cf69a3b6f4e96cf01",
                                      "typeString": "literal_string \"Purple\""
                                    },
                                    "value": "Purple"
                                  },
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                },
                                "id": 1384,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "Conditional",
                                "src": "11766:52:1",
                                "trueExpression": {
                                  "hexValue": "507572706c65",
                                  "id": 1377,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "string",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "11777:8:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_stringliteral_5964c6a3c85f82108f9dd24a7bca48e6443e395a6c28002cf69a3b6f4e96cf01",
                                    "typeString": "literal_string \"Purple\""
                                  },
                                  "value": "Purple"
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              },
                              "functionReturnParameters": 1272,
                              "id": 1385,
                              "nodeType": "Return",
                              "src": "11759:59:1"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "hexValue": "4572726f723a204964206e6f7420666f756e64",
                          "id": 1388,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "11847:21:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_33ffa286a2bcff0aeabc164109cce1220e5b4a128845f62fe2453267d545a044",
                            "typeString": "literal_string \"Error: Id not found\""
                          },
                          "value": "Error: Id not found"
                        },
                        "functionReturnParameters": 1272,
                        "id": 1389,
                        "nodeType": "Return",
                        "src": "11840:28:1"
                      }
                    ]
                  },
                  "functionSelector": "4342e652",
                  "id": 1391,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getBackgroundName",
                  "nameLocation": "10913:17:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1269,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1268,
                        "mutability": "mutable",
                        "name": "id",
                        "nameLocation": "10937:2:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1391,
                        "src": "10931:8:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 1267,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "10931:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "10930:10:1"
                  },
                  "returnParameters": {
                    "id": 1272,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1271,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1391,
                        "src": "10962:13:1",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 1270,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "10962:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "10961:15:1"
                  },
                  "scope": 1648,
                  "src": "10904:972:1",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 1646,
                    "nodeType": "Block",
                    "src": "11951:2288:1",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          },
                          "id": 1400,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1398,
                            "name": "id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1393,
                            "src": "11966:2:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<=",
                          "rightExpression": {
                            "hexValue": "3431",
                            "id": 1399,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "11972:2:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_41_by_1",
                              "typeString": "int_const 41"
                            },
                            "value": "41"
                          },
                          "src": "11966:8:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1643,
                        "nodeType": "IfStatement",
                        "src": "11962:2231:1",
                        "trueBody": {
                          "id": 1642,
                          "nodeType": "Block",
                          "src": "11976:2217:1",
                          "statements": [
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                },
                                "id": 1403,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 1401,
                                  "name": "id",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1393,
                                  "src": "11995:2:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint8",
                                    "typeString": "uint8"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "<",
                                "rightExpression": {
                                  "hexValue": "3130",
                                  "id": 1402,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "12000:2:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_10_by_1",
                                    "typeString": "int_const 10"
                                  },
                                  "value": "10"
                                },
                                "src": "11995:7:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 1453,
                              "nodeType": "IfStatement",
                              "src": "11991:429:1",
                              "trueBody": {
                                "id": 1452,
                                "nodeType": "Block",
                                "src": "12004:416:1",
                                "statements": [
                                  {
                                    "condition": {
                                      "commonType": {
                                        "typeIdentifier": "t_uint8",
                                        "typeString": "uint8"
                                      },
                                      "id": 1406,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "id": 1404,
                                        "name": "id",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1393,
                                        "src": "12027:2:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint8",
                                          "typeString": "uint8"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "<",
                                      "rightExpression": {
                                        "hexValue": "35",
                                        "id": 1405,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "12032:1:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_5_by_1",
                                          "typeString": "int_const 5"
                                        },
                                        "value": "5"
                                      },
                                      "src": "12027:6:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "id": 1427,
                                    "nodeType": "IfStatement",
                                    "src": "12023:206:1",
                                    "trueBody": {
                                      "id": 1426,
                                      "nodeType": "Block",
                                      "src": "12035:194:1",
                                      "statements": [
                                        {
                                          "condition": {
                                            "commonType": {
                                              "typeIdentifier": "t_uint8",
                                              "typeString": "uint8"
                                            },
                                            "id": 1409,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftExpression": {
                                              "id": 1407,
                                              "name": "id",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 1393,
                                              "src": "12062:2:1",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint8",
                                                "typeString": "uint8"
                                              }
                                            },
                                            "nodeType": "BinaryOperation",
                                            "operator": "<",
                                            "rightExpression": {
                                              "hexValue": "33",
                                              "id": 1408,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "kind": "number",
                                              "lValueRequested": false,
                                              "nodeType": "Literal",
                                              "src": "12067:1:1",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_rational_3_by_1",
                                                "typeString": "int_const 3"
                                              },
                                              "value": "3"
                                            },
                                            "src": "12062:6:1",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_bool",
                                              "typeString": "bool"
                                            }
                                          },
                                          "id": 1418,
                                          "nodeType": "IfStatement",
                                          "src": "12058:97:1",
                                          "trueBody": {
                                            "id": 1417,
                                            "nodeType": "Block",
                                            "src": "12070:85:1",
                                            "statements": [
                                              {
                                                "expression": {
                                                  "condition": {
                                                    "commonType": {
                                                      "typeIdentifier": "t_uint8",
                                                      "typeString": "uint8"
                                                    },
                                                    "id": 1412,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "leftExpression": {
                                                      "id": 1410,
                                                      "name": "id",
                                                      "nodeType": "Identifier",
                                                      "overloadedDeclarations": [],
                                                      "referencedDeclaration": 1393,
                                                      "src": "12104:2:1",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_uint8",
                                                        "typeString": "uint8"
                                                      }
                                                    },
                                                    "nodeType": "BinaryOperation",
                                                    "operator": "==",
                                                    "rightExpression": {
                                                      "hexValue": "31",
                                                      "id": 1411,
                                                      "isConstant": false,
                                                      "isLValue": false,
                                                      "isPure": true,
                                                      "kind": "number",
                                                      "lValueRequested": false,
                                                      "nodeType": "Literal",
                                                      "src": "12110:1:1",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_rational_1_by_1",
                                                        "typeString": "int_const 1"
                                                      },
                                                      "value": "1"
                                                    },
                                                    "src": "12104:7:1",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_bool",
                                                      "typeString": "bool"
                                                    }
                                                  },
                                                  "falseExpression": {
                                                    "hexValue": "5768697465",
                                                    "id": 1414,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "kind": "string",
                                                    "lValueRequested": false,
                                                    "nodeType": "Literal",
                                                    "src": "12124:7:1",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_stringliteral_d8be6abfb290c7325c2b3f8da08d37efd1ef2b5da915d00ba3bd068eaab2e770",
                                                      "typeString": "literal_string \"White\""
                                                    },
                                                    "value": "White"
                                                  },
                                                  "id": 1415,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "nodeType": "Conditional",
                                                  "src": "12104:27:1",
                                                  "trueExpression": {
                                                    "hexValue": "5768697465",
                                                    "id": 1413,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "kind": "string",
                                                    "lValueRequested": false,
                                                    "nodeType": "Literal",
                                                    "src": "12114:7:1",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_stringliteral_d8be6abfb290c7325c2b3f8da08d37efd1ef2b5da915d00ba3bd068eaab2e770",
                                                      "typeString": "literal_string \"White\""
                                                    },
                                                    "value": "White"
                                                  },
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_string_memory_ptr",
                                                    "typeString": "string memory"
                                                  }
                                                },
                                                "functionReturnParameters": 1397,
                                                "id": 1416,
                                                "nodeType": "Return",
                                                "src": "12097:34:1"
                                              }
                                            ]
                                          }
                                        },
                                        {
                                          "expression": {
                                            "condition": {
                                              "commonType": {
                                                "typeIdentifier": "t_uint8",
                                                "typeString": "uint8"
                                              },
                                              "id": 1421,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "leftExpression": {
                                                "id": 1419,
                                                "name": "id",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 1393,
                                                "src": "12184:2:1",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint8",
                                                  "typeString": "uint8"
                                                }
                                              },
                                              "nodeType": "BinaryOperation",
                                              "operator": "==",
                                              "rightExpression": {
                                                "hexValue": "33",
                                                "id": 1420,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "number",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "12190:1:1",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_rational_3_by_1",
                                                  "typeString": "int_const 3"
                                                },
                                                "value": "3"
                                              },
                                              "src": "12184:7:1",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_bool",
                                                "typeString": "bool"
                                              }
                                            },
                                            "falseExpression": {
                                              "hexValue": "54616e",
                                              "id": 1423,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "kind": "string",
                                              "lValueRequested": false,
                                              "nodeType": "Literal",
                                              "src": "12204:5:1",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_stringliteral_cff89a059d1bd58bc616c4e57b287e8ba6f903eba9c2bc4bc22733a9f3bb231f",
                                                "typeString": "literal_string \"Tan\""
                                              },
                                              "value": "Tan"
                                            },
                                            "id": 1424,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "nodeType": "Conditional",
                                            "src": "12184:25:1",
                                            "trueExpression": {
                                              "hexValue": "5768697465",
                                              "id": 1422,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "kind": "string",
                                              "lValueRequested": false,
                                              "nodeType": "Literal",
                                              "src": "12194:7:1",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_stringliteral_d8be6abfb290c7325c2b3f8da08d37efd1ef2b5da915d00ba3bd068eaab2e770",
                                                "typeString": "literal_string \"White\""
                                              },
                                              "value": "White"
                                            },
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_string_memory_ptr",
                                              "typeString": "string memory"
                                            }
                                          },
                                          "functionReturnParameters": 1397,
                                          "id": 1425,
                                          "nodeType": "Return",
                                          "src": "12177:32:1"
                                        }
                                      ]
                                    }
                                  },
                                  {
                                    "condition": {
                                      "commonType": {
                                        "typeIdentifier": "t_uint8",
                                        "typeString": "uint8"
                                      },
                                      "id": 1430,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "id": 1428,
                                        "name": "id",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1393,
                                        "src": "12251:2:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint8",
                                          "typeString": "uint8"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "<",
                                      "rightExpression": {
                                        "hexValue": "37",
                                        "id": 1429,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "12256:1:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_7_by_1",
                                          "typeString": "int_const 7"
                                        },
                                        "value": "7"
                                      },
                                      "src": "12251:6:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "id": 1439,
                                    "nodeType": "IfStatement",
                                    "src": "12247:85:1",
                                    "trueBody": {
                                      "id": 1438,
                                      "nodeType": "Block",
                                      "src": "12259:73:1",
                                      "statements": [
                                        {
                                          "expression": {
                                            "condition": {
                                              "commonType": {
                                                "typeIdentifier": "t_uint8",
                                                "typeString": "uint8"
                                              },
                                              "id": 1433,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "leftExpression": {
                                                "id": 1431,
                                                "name": "id",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 1393,
                                                "src": "12289:2:1",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint8",
                                                  "typeString": "uint8"
                                                }
                                              },
                                              "nodeType": "BinaryOperation",
                                              "operator": "==",
                                              "rightExpression": {
                                                "hexValue": "35",
                                                "id": 1432,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "number",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "12295:1:1",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_rational_5_by_1",
                                                  "typeString": "int_const 5"
                                                },
                                                "value": "5"
                                              },
                                              "src": "12289:7:1",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_bool",
                                                "typeString": "bool"
                                              }
                                            },
                                            "falseExpression": {
                                              "hexValue": "54616e",
                                              "id": 1435,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "kind": "string",
                                              "lValueRequested": false,
                                              "nodeType": "Literal",
                                              "src": "12307:5:1",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_stringliteral_cff89a059d1bd58bc616c4e57b287e8ba6f903eba9c2bc4bc22733a9f3bb231f",
                                                "typeString": "literal_string \"Tan\""
                                              },
                                              "value": "Tan"
                                            },
                                            "id": 1436,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "nodeType": "Conditional",
                                            "src": "12289:23:1",
                                            "trueExpression": {
                                              "hexValue": "54616e",
                                              "id": 1434,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "kind": "string",
                                              "lValueRequested": false,
                                              "nodeType": "Literal",
                                              "src": "12299:5:1",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_stringliteral_cff89a059d1bd58bc616c4e57b287e8ba6f903eba9c2bc4bc22733a9f3bb231f",
                                                "typeString": "literal_string \"Tan\""
                                              },
                                              "value": "Tan"
                                            },
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_string_memory_ptr",
                                              "typeString": "string memory"
                                            }
                                          },
                                          "functionReturnParameters": 1397,
                                          "id": 1437,
                                          "nodeType": "Return",
                                          "src": "12282:30:1"
                                        }
                                      ]
                                    }
                                  },
                                  {
                                    "expression": {
                                      "condition": {
                                        "commonType": {
                                          "typeIdentifier": "t_uint8",
                                          "typeString": "uint8"
                                        },
                                        "id": 1442,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "id": 1440,
                                          "name": "id",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1393,
                                          "src": "12357:2:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint8",
                                            "typeString": "uint8"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "==",
                                        "rightExpression": {
                                          "hexValue": "37",
                                          "id": 1441,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "number",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "12363:1:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_rational_7_by_1",
                                            "typeString": "int_const 7"
                                          },
                                          "value": "7"
                                        },
                                        "src": "12357:7:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        }
                                      },
                                      "falseExpression": {
                                        "condition": {
                                          "commonType": {
                                            "typeIdentifier": "t_uint8",
                                            "typeString": "uint8"
                                          },
                                          "id": 1446,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftExpression": {
                                            "id": 1444,
                                            "name": "id",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1393,
                                            "src": "12377:2:1",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint8",
                                              "typeString": "uint8"
                                            }
                                          },
                                          "nodeType": "BinaryOperation",
                                          "operator": "==",
                                          "rightExpression": {
                                            "hexValue": "38",
                                            "id": 1445,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "12383:1:1",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_rational_8_by_1",
                                              "typeString": "int_const 8"
                                            },
                                            "value": "8"
                                          },
                                          "src": "12377:7:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                          }
                                        },
                                        "falseExpression": {
                                          "hexValue": "42726f776e",
                                          "id": 1448,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "string",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "12397:7:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_stringliteral_31067c249bc1783b89501f026704e212f9b52bbdb144132d81a7f02a787633fe",
                                            "typeString": "literal_string \"Brown\""
                                          },
                                          "value": "Brown"
                                        },
                                        "id": 1449,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "Conditional",
                                        "src": "12377:27:1",
                                        "trueExpression": {
                                          "hexValue": "42726f776e",
                                          "id": 1447,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "string",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "12387:7:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_stringliteral_31067c249bc1783b89501f026704e212f9b52bbdb144132d81a7f02a787633fe",
                                            "typeString": "literal_string \"Brown\""
                                          },
                                          "value": "Brown"
                                        },
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_string_memory_ptr",
                                          "typeString": "string memory"
                                        }
                                      },
                                      "id": 1450,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "Conditional",
                                      "src": "12357:47:1",
                                      "trueExpression": {
                                        "hexValue": "42726f776e",
                                        "id": 1443,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "string",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "12367:7:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_stringliteral_31067c249bc1783b89501f026704e212f9b52bbdb144132d81a7f02a787633fe",
                                          "typeString": "literal_string \"Brown\""
                                        },
                                        "value": "Brown"
                                      },
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_string_memory_ptr",
                                        "typeString": "string memory"
                                      }
                                    },
                                    "functionReturnParameters": 1397,
                                    "id": 1451,
                                    "nodeType": "Return",
                                    "src": "12350:54:1"
                                  }
                                ]
                              }
                            },
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                },
                                "id": 1456,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 1454,
                                  "name": "id",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1393,
                                  "src": "12438:2:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint8",
                                    "typeString": "uint8"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "<=",
                                "rightExpression": {
                                  "hexValue": "3135",
                                  "id": 1455,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "12444:2:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_15_by_1",
                                    "typeString": "int_const 15"
                                  },
                                  "value": "15"
                                },
                                "src": "12438:8:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 1487,
                              "nodeType": "IfStatement",
                              "src": "12434:239:1",
                              "trueBody": {
                                "id": 1486,
                                "nodeType": "Block",
                                "src": "12448:225:1",
                                "statements": [
                                  {
                                    "condition": {
                                      "commonType": {
                                        "typeIdentifier": "t_uint8",
                                        "typeString": "uint8"
                                      },
                                      "id": 1459,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "id": 1457,
                                        "name": "id",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1393,
                                        "src": "12471:2:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint8",
                                          "typeString": "uint8"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "<",
                                      "rightExpression": {
                                        "hexValue": "3133",
                                        "id": 1458,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "12476:2:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_13_by_1",
                                          "typeString": "int_const 13"
                                        },
                                        "value": "13"
                                      },
                                      "src": "12471:7:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "id": 1473,
                                    "nodeType": "IfStatement",
                                    "src": "12467:112:1",
                                    "trueBody": {
                                      "id": 1472,
                                      "nodeType": "Block",
                                      "src": "12480:99:1",
                                      "statements": [
                                        {
                                          "expression": {
                                            "condition": {
                                              "commonType": {
                                                "typeIdentifier": "t_uint8",
                                                "typeString": "uint8"
                                              },
                                              "id": 1462,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "leftExpression": {
                                                "id": 1460,
                                                "name": "id",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 1393,
                                                "src": "12510:2:1",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint8",
                                                  "typeString": "uint8"
                                                }
                                              },
                                              "nodeType": "BinaryOperation",
                                              "operator": "==",
                                              "rightExpression": {
                                                "hexValue": "3130",
                                                "id": 1461,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "number",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "12516:2:1",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_rational_10_by_1",
                                                  "typeString": "int_const 10"
                                                },
                                                "value": "10"
                                              },
                                              "src": "12510:8:1",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_bool",
                                                "typeString": "bool"
                                              }
                                            },
                                            "falseExpression": {
                                              "condition": {
                                                "commonType": {
                                                  "typeIdentifier": "t_uint8",
                                                  "typeString": "uint8"
                                                },
                                                "id": 1466,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftExpression": {
                                                  "id": 1464,
                                                  "name": "id",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 1393,
                                                  "src": "12531:2:1",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_uint8",
                                                    "typeString": "uint8"
                                                  }
                                                },
                                                "nodeType": "BinaryOperation",
                                                "operator": "==",
                                                "rightExpression": {
                                                  "hexValue": "3131",
                                                  "id": 1465,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": true,
                                                  "kind": "number",
                                                  "lValueRequested": false,
                                                  "nodeType": "Literal",
                                                  "src": "12537:2:1",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_rational_11_by_1",
                                                    "typeString": "int_const 11"
                                                  },
                                                  "value": "11"
                                                },
                                                "src": "12531:8:1",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_bool",
                                                  "typeString": "bool"
                                                }
                                              },
                                              "falseExpression": {
                                                "hexValue": "426c61636b",
                                                "id": 1468,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "string",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "12552:7:1",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_stringliteral_cae3132c4acb934bc8a5c772f8c705a3abd649863f689c11838778df34c77ecb",
                                                  "typeString": "literal_string \"Black\""
                                                },
                                                "value": "Black"
                                              },
                                              "id": 1469,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "nodeType": "Conditional",
                                              "src": "12531:28:1",
                                              "trueExpression": {
                                                "hexValue": "426c61636b",
                                                "id": 1467,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "string",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "12542:7:1",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_stringliteral_cae3132c4acb934bc8a5c772f8c705a3abd649863f689c11838778df34c77ecb",
                                                  "typeString": "literal_string \"Black\""
                                                },
                                                "value": "Black"
                                              },
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_string_memory_ptr",
                                                "typeString": "string memory"
                                              }
                                            },
                                            "id": 1470,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "nodeType": "Conditional",
                                            "src": "12510:49:1",
                                            "trueExpression": {
                                              "hexValue": "42726f776e",
                                              "id": 1463,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "kind": "string",
                                              "lValueRequested": false,
                                              "nodeType": "Literal",
                                              "src": "12521:7:1",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_stringliteral_31067c249bc1783b89501f026704e212f9b52bbdb144132d81a7f02a787633fe",
                                                "typeString": "literal_string \"Brown\""
                                              },
                                              "value": "Brown"
                                            },
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_string_memory_ptr",
                                              "typeString": "string memory"
                                            }
                                          },
                                          "functionReturnParameters": 1397,
                                          "id": 1471,
                                          "nodeType": "Return",
                                          "src": "12503:56:1"
                                        }
                                      ]
                                    }
                                  },
                                  {
                                    "expression": {
                                      "condition": {
                                        "commonType": {
                                          "typeIdentifier": "t_uint8",
                                          "typeString": "uint8"
                                        },
                                        "id": 1476,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "id": 1474,
                                          "name": "id",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1393,
                                          "src": "12604:2:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint8",
                                            "typeString": "uint8"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "==",
                                        "rightExpression": {
                                          "hexValue": "3133",
                                          "id": 1475,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "number",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "12610:2:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_rational_13_by_1",
                                            "typeString": "int_const 13"
                                          },
                                          "value": "13"
                                        },
                                        "src": "12604:8:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        }
                                      },
                                      "falseExpression": {
                                        "condition": {
                                          "commonType": {
                                            "typeIdentifier": "t_uint8",
                                            "typeString": "uint8"
                                          },
                                          "id": 1480,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftExpression": {
                                            "id": 1478,
                                            "name": "id",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1393,
                                            "src": "12625:2:1",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint8",
                                              "typeString": "uint8"
                                            }
                                          },
                                          "nodeType": "BinaryOperation",
                                          "operator": "==",
                                          "rightExpression": {
                                            "hexValue": "3134",
                                            "id": 1479,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "12631:2:1",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_rational_14_by_1",
                                              "typeString": "int_const 14"
                                            },
                                            "value": "14"
                                          },
                                          "src": "12625:8:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                          }
                                        },
                                        "falseExpression": {
                                          "hexValue": "566974696c6967696f",
                                          "id": 1482,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "string",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "12646:11:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_stringliteral_c1cfa4e3ce9e1cd39213d7f3ab69e13eae8f1251bdb523ad9392d9892356292a",
                                            "typeString": "literal_string \"Vitiligio\""
                                          },
                                          "value": "Vitiligio"
                                        },
                                        "id": 1483,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "Conditional",
                                        "src": "12625:32:1",
                                        "trueExpression": {
                                          "hexValue": "426c61636b",
                                          "id": 1481,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "string",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "12636:7:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_stringliteral_cae3132c4acb934bc8a5c772f8c705a3abd649863f689c11838778df34c77ecb",
                                            "typeString": "literal_string \"Black\""
                                          },
                                          "value": "Black"
                                        },
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_string_memory_ptr",
                                          "typeString": "string memory"
                                        }
                                      },
                                      "id": 1484,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "Conditional",
                                      "src": "12604:53:1",
                                      "trueExpression": {
                                        "hexValue": "426c61636b",
                                        "id": 1477,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "string",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "12615:7:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_stringliteral_cae3132c4acb934bc8a5c772f8c705a3abd649863f689c11838778df34c77ecb",
                                          "typeString": "literal_string \"Black\""
                                        },
                                        "value": "Black"
                                      },
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_string_memory_ptr",
                                        "typeString": "string memory"
                                      }
                                    },
                                    "functionReturnParameters": 1397,
                                    "id": 1485,
                                    "nodeType": "Return",
                                    "src": "12597:60:1"
                                  }
                                ]
                              }
                            },
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                },
                                "id": 1490,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 1488,
                                  "name": "id",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1393,
                                  "src": "12691:2:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint8",
                                    "typeString": "uint8"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "<=",
                                "rightExpression": {
                                  "hexValue": "3230",
                                  "id": 1489,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "12697:2:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_20_by_1",
                                    "typeString": "int_const 20"
                                  },
                                  "value": "20"
                                },
                                "src": "12691:8:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 1516,
                              "nodeType": "IfStatement",
                              "src": "12687:309:1",
                              "trueBody": {
                                "id": 1515,
                                "nodeType": "Block",
                                "src": "12701:295:1",
                                "statements": [
                                  {
                                    "condition": {
                                      "commonType": {
                                        "typeIdentifier": "t_uint8",
                                        "typeString": "uint8"
                                      },
                                      "id": 1493,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "id": 1491,
                                        "name": "id",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1393,
                                        "src": "12724:2:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint8",
                                          "typeString": "uint8"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "<",
                                      "rightExpression": {
                                        "hexValue": "3138",
                                        "id": 1492,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "12729:2:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_18_by_1",
                                          "typeString": "int_const 18"
                                        },
                                        "value": "18"
                                      },
                                      "src": "12724:7:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "id": 1502,
                                    "nodeType": "IfStatement",
                                    "src": "12720:99:1",
                                    "trueBody": {
                                      "id": 1501,
                                      "nodeType": "Block",
                                      "src": "12733:86:1",
                                      "statements": [
                                        {
                                          "expression": {
                                            "condition": {
                                              "commonType": {
                                                "typeIdentifier": "t_uint8",
                                                "typeString": "uint8"
                                              },
                                              "id": 1496,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "leftExpression": {
                                                "id": 1494,
                                                "name": "id",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 1393,
                                                "src": "12763:2:1",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint8",
                                                  "typeString": "uint8"
                                                }
                                              },
                                              "nodeType": "BinaryOperation",
                                              "operator": "==",
                                              "rightExpression": {
                                                "hexValue": "3136",
                                                "id": 1495,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "number",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "12769:2:1",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_rational_16_by_1",
                                                  "typeString": "int_const 16"
                                                },
                                                "value": "16"
                                              },
                                              "src": "12763:8:1",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_bool",
                                                "typeString": "bool"
                                              }
                                            },
                                            "falseExpression": {
                                              "hexValue": "566974696c6967696f",
                                              "id": 1498,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "kind": "string",
                                              "lValueRequested": false,
                                              "nodeType": "Literal",
                                              "src": "12788:11:1",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_stringliteral_c1cfa4e3ce9e1cd39213d7f3ab69e13eae8f1251bdb523ad9392d9892356292a",
                                                "typeString": "literal_string \"Vitiligio\""
                                              },
                                              "value": "Vitiligio"
                                            },
                                            "id": 1499,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "nodeType": "Conditional",
                                            "src": "12763:36:1",
                                            "trueExpression": {
                                              "hexValue": "566974696c6967696f",
                                              "id": 1497,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "kind": "string",
                                              "lValueRequested": false,
                                              "nodeType": "Literal",
                                              "src": "12774:11:1",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_stringliteral_c1cfa4e3ce9e1cd39213d7f3ab69e13eae8f1251bdb523ad9392d9892356292a",
                                                "typeString": "literal_string \"Vitiligio\""
                                              },
                                              "value": "Vitiligio"
                                            },
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_string_memory_ptr",
                                              "typeString": "string memory"
                                            }
                                          },
                                          "functionReturnParameters": 1397,
                                          "id": 1500,
                                          "nodeType": "Return",
                                          "src": "12756:43:1"
                                        }
                                      ]
                                    }
                                  },
                                  {
                                    "expression": {
                                      "condition": {
                                        "commonType": {
                                          "typeIdentifier": "t_uint8",
                                          "typeString": "uint8"
                                        },
                                        "id": 1505,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "id": 1503,
                                          "name": "id",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1393,
                                          "src": "12865:2:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint8",
                                            "typeString": "uint8"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "==",
                                        "rightExpression": {
                                          "hexValue": "3138",
                                          "id": 1504,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "number",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "12871:2:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_rational_18_by_1",
                                            "typeString": "int_const 18"
                                          },
                                          "value": "18"
                                        },
                                        "src": "12865:8:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        }
                                      },
                                      "falseExpression": {
                                        "condition": {
                                          "commonType": {
                                            "typeIdentifier": "t_uint8",
                                            "typeString": "uint8"
                                          },
                                          "id": 1509,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftExpression": {
                                            "id": 1507,
                                            "name": "id",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1393,
                                            "src": "12891:2:1",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint8",
                                              "typeString": "uint8"
                                            }
                                          },
                                          "nodeType": "BinaryOperation",
                                          "operator": "==",
                                          "rightExpression": {
                                            "hexValue": "3139",
                                            "id": 1508,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "12897:2:1",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_rational_19_by_1",
                                              "typeString": "int_const 19"
                                            },
                                            "value": "19"
                                          },
                                          "src": "12891:8:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                          }
                                        },
                                        "falseExpression": {
                                          "hexValue": "477265656e20536c696d65",
                                          "id": 1511,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "string",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "12967:13:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_stringliteral_d32ceae5df8f2b3c194086a932e0f7805d5d157aaaa7428d03166c5f7764abf1",
                                            "typeString": "literal_string \"Green Slime\""
                                          },
                                          "value": "Green Slime"
                                        },
                                        "id": 1512,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "Conditional",
                                        "src": "12891:89:1",
                                        "trueExpression": {
                                          "hexValue": "426c756520536c696d65",
                                          "id": 1510,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "string",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "12927:12:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_stringliteral_0ee790ec8a3582eb15e0b6c1e6aee75664b20701e5f4e31351239f0ce0863c2d",
                                            "typeString": "literal_string \"Blue Slime\""
                                          },
                                          "value": "Blue Slime"
                                        },
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_string_memory_ptr",
                                          "typeString": "string memory"
                                        }
                                      },
                                      "id": 1513,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "Conditional",
                                      "src": "12865:115:1",
                                      "trueExpression": {
                                        "hexValue": "426c756520536c696d65",
                                        "id": 1506,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "string",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "12876:12:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_stringliteral_0ee790ec8a3582eb15e0b6c1e6aee75664b20701e5f4e31351239f0ce0863c2d",
                                          "typeString": "literal_string \"Blue Slime\""
                                        },
                                        "value": "Blue Slime"
                                      },
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_string_memory_ptr",
                                        "typeString": "string memory"
                                      }
                                    },
                                    "functionReturnParameters": 1397,
                                    "id": 1514,
                                    "nodeType": "Return",
                                    "src": "12837:143:1"
                                  }
                                ]
                              }
                            },
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                },
                                "id": 1519,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 1517,
                                  "name": "id",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1393,
                                  "src": "13014:2:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint8",
                                    "typeString": "uint8"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "<=",
                                "rightExpression": {
                                  "hexValue": "3235",
                                  "id": 1518,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "13020:2:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_25_by_1",
                                    "typeString": "int_const 25"
                                  },
                                  "value": "25"
                                },
                                "src": "13014:8:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 1545,
                              "nodeType": "IfStatement",
                              "src": "13010:312:1",
                              "trueBody": {
                                "id": 1544,
                                "nodeType": "Block",
                                "src": "13024:298:1",
                                "statements": [
                                  {
                                    "condition": {
                                      "commonType": {
                                        "typeIdentifier": "t_uint8",
                                        "typeString": "uint8"
                                      },
                                      "id": 1522,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "id": 1520,
                                        "name": "id",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1393,
                                        "src": "13047:2:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint8",
                                          "typeString": "uint8"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "<",
                                      "rightExpression": {
                                        "hexValue": "3233",
                                        "id": 1521,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "13052:2:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_23_by_1",
                                          "typeString": "int_const 23"
                                        },
                                        "value": "23"
                                      },
                                      "src": "13047:7:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "id": 1531,
                                    "nodeType": "IfStatement",
                                    "src": "13043:103:1",
                                    "trueBody": {
                                      "id": 1530,
                                      "nodeType": "Block",
                                      "src": "13056:90:1",
                                      "statements": [
                                        {
                                          "expression": {
                                            "condition": {
                                              "commonType": {
                                                "typeIdentifier": "t_uint8",
                                                "typeString": "uint8"
                                              },
                                              "id": 1525,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "leftExpression": {
                                                "id": 1523,
                                                "name": "id",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 1393,
                                                "src": "13086:2:1",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint8",
                                                  "typeString": "uint8"
                                                }
                                              },
                                              "nodeType": "BinaryOperation",
                                              "operator": "==",
                                              "rightExpression": {
                                                "hexValue": "3231",
                                                "id": 1524,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "number",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "13092:2:1",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_rational_21_by_1",
                                                  "typeString": "int_const 21"
                                                },
                                                "value": "21"
                                              },
                                              "src": "13086:8:1",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_bool",
                                                "typeString": "bool"
                                              }
                                            },
                                            "falseExpression": {
                                              "hexValue": "477265656e20536c696d65",
                                              "id": 1527,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "kind": "string",
                                              "lValueRequested": false,
                                              "nodeType": "Literal",
                                              "src": "13113:13:1",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_stringliteral_d32ceae5df8f2b3c194086a932e0f7805d5d157aaaa7428d03166c5f7764abf1",
                                                "typeString": "literal_string \"Green Slime\""
                                              },
                                              "value": "Green Slime"
                                            },
                                            "id": 1528,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "nodeType": "Conditional",
                                            "src": "13086:40:1",
                                            "trueExpression": {
                                              "hexValue": "477265656e20536c696d65",
                                              "id": 1526,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "kind": "string",
                                              "lValueRequested": false,
                                              "nodeType": "Literal",
                                              "src": "13097:13:1",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_stringliteral_d32ceae5df8f2b3c194086a932e0f7805d5d157aaaa7428d03166c5f7764abf1",
                                                "typeString": "literal_string \"Green Slime\""
                                              },
                                              "value": "Green Slime"
                                            },
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_string_memory_ptr",
                                              "typeString": "string memory"
                                            }
                                          },
                                          "functionReturnParameters": 1397,
                                          "id": 1529,
                                          "nodeType": "Return",
                                          "src": "13079:47:1"
                                        }
                                      ]
                                    }
                                  },
                                  {
                                    "expression": {
                                      "condition": {
                                        "commonType": {
                                          "typeIdentifier": "t_uint8",
                                          "typeString": "uint8"
                                        },
                                        "id": 1534,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "id": 1532,
                                          "name": "id",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1393,
                                          "src": "13192:2:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint8",
                                            "typeString": "uint8"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "==",
                                        "rightExpression": {
                                          "hexValue": "3233",
                                          "id": 1533,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "number",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "13198:2:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_rational_23_by_1",
                                            "typeString": "int_const 23"
                                          },
                                          "value": "23"
                                        },
                                        "src": "13192:8:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        }
                                      },
                                      "falseExpression": {
                                        "condition": {
                                          "commonType": {
                                            "typeIdentifier": "t_uint8",
                                            "typeString": "uint8"
                                          },
                                          "id": 1538,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftExpression": {
                                            "id": 1536,
                                            "name": "id",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1393,
                                            "src": "13218:2:1",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint8",
                                              "typeString": "uint8"
                                            }
                                          },
                                          "nodeType": "BinaryOperation",
                                          "operator": "==",
                                          "rightExpression": {
                                            "hexValue": "3234",
                                            "id": 1537,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "13224:2:1",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_rational_24_by_1",
                                              "typeString": "int_const 24"
                                            },
                                            "value": "24"
                                          },
                                          "src": "13218:8:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                          }
                                        },
                                        "falseExpression": {
                                          "hexValue": "427562626c652047756d",
                                          "id": 1540,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "string",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "13294:12:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_stringliteral_ecc6ecbe30d0d4d3876e2601ef9ab01751b1f3aebb0d923a9ca1e7a4212d2cb0",
                                            "typeString": "literal_string \"Bubble Gum\""
                                          },
                                          "value": "Bubble Gum"
                                        },
                                        "id": 1541,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "Conditional",
                                        "src": "13218:88:1",
                                        "trueExpression": {
                                          "hexValue": "427562626c652047756d",
                                          "id": 1539,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "string",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "13254:12:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_stringliteral_ecc6ecbe30d0d4d3876e2601ef9ab01751b1f3aebb0d923a9ca1e7a4212d2cb0",
                                            "typeString": "literal_string \"Bubble Gum\""
                                          },
                                          "value": "Bubble Gum"
                                        },
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_string_memory_ptr",
                                          "typeString": "string memory"
                                        }
                                      },
                                      "id": 1542,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "Conditional",
                                      "src": "13192:114:1",
                                      "trueExpression": {
                                        "hexValue": "427562626c652047756d",
                                        "id": 1535,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "string",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "13203:12:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_stringliteral_ecc6ecbe30d0d4d3876e2601ef9ab01751b1f3aebb0d923a9ca1e7a4212d2cb0",
                                          "typeString": "literal_string \"Bubble Gum\""
                                        },
                                        "value": "Bubble Gum"
                                      },
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_string_memory_ptr",
                                        "typeString": "string memory"
                                      }
                                    },
                                    "functionReturnParameters": 1397,
                                    "id": 1543,
                                    "nodeType": "Return",
                                    "src": "13164:142:1"
                                  }
                                ]
                              }
                            },
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                },
                                "id": 1548,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 1546,
                                  "name": "id",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1393,
                                  "src": "13340:2:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint8",
                                    "typeString": "uint8"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "<=",
                                "rightExpression": {
                                  "hexValue": "3330",
                                  "id": 1547,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "13346:2:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_30_by_1",
                                    "typeString": "int_const 30"
                                  },
                                  "value": "30"
                                },
                                "src": "13340:8:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 1574,
                              "nodeType": "IfStatement",
                              "src": "13336:263:1",
                              "trueBody": {
                                "id": 1573,
                                "nodeType": "Block",
                                "src": "13350:249:1",
                                "statements": [
                                  {
                                    "condition": {
                                      "commonType": {
                                        "typeIdentifier": "t_uint8",
                                        "typeString": "uint8"
                                      },
                                      "id": 1551,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "id": 1549,
                                        "name": "id",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1393,
                                        "src": "13373:2:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint8",
                                          "typeString": "uint8"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "<",
                                      "rightExpression": {
                                        "hexValue": "3238",
                                        "id": 1550,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "13378:2:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_28_by_1",
                                          "typeString": "int_const 28"
                                        },
                                        "value": "28"
                                      },
                                      "src": "13373:7:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "id": 1560,
                                    "nodeType": "IfStatement",
                                    "src": "13369:105:1",
                                    "trueBody": {
                                      "id": 1559,
                                      "nodeType": "Block",
                                      "src": "13382:92:1",
                                      "statements": [
                                        {
                                          "expression": {
                                            "condition": {
                                              "commonType": {
                                                "typeIdentifier": "t_uint8",
                                                "typeString": "uint8"
                                              },
                                              "id": 1554,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "leftExpression": {
                                                "id": 1552,
                                                "name": "id",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 1393,
                                                "src": "13412:2:1",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint8",
                                                  "typeString": "uint8"
                                                }
                                              },
                                              "nodeType": "BinaryOperation",
                                              "operator": "==",
                                              "rightExpression": {
                                                "hexValue": "3236",
                                                "id": 1553,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "number",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "13418:2:1",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_rational_26_by_1",
                                                  "typeString": "int_const 26"
                                                },
                                                "value": "26"
                                              },
                                              "src": "13412:8:1",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_bool",
                                                "typeString": "bool"
                                              }
                                            },
                                            "falseExpression": {
                                              "hexValue": "477265656e20476f626c696e",
                                              "id": 1556,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "kind": "string",
                                              "lValueRequested": false,
                                              "nodeType": "Literal",
                                              "src": "13440:14:1",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_stringliteral_92ff7a5ed3a324896c51d1eb799d94fb1190fe8ffc813e445d53f04777aabc32",
                                                "typeString": "literal_string \"Green Goblin\""
                                              },
                                              "value": "Green Goblin"
                                            },
                                            "id": 1557,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "nodeType": "Conditional",
                                            "src": "13412:42:1",
                                            "trueExpression": {
                                              "hexValue": "477265656e20476f626c696e",
                                              "id": 1555,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "kind": "string",
                                              "lValueRequested": false,
                                              "nodeType": "Literal",
                                              "src": "13423:14:1",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_stringliteral_92ff7a5ed3a324896c51d1eb799d94fb1190fe8ffc813e445d53f04777aabc32",
                                                "typeString": "literal_string \"Green Goblin\""
                                              },
                                              "value": "Green Goblin"
                                            },
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_string_memory_ptr",
                                              "typeString": "string memory"
                                            }
                                          },
                                          "functionReturnParameters": 1397,
                                          "id": 1558,
                                          "nodeType": "Return",
                                          "src": "13405:49:1"
                                        }
                                      ]
                                    }
                                  },
                                  {
                                    "expression": {
                                      "condition": {
                                        "commonType": {
                                          "typeIdentifier": "t_uint8",
                                          "typeString": "uint8"
                                        },
                                        "id": 1563,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "id": 1561,
                                          "name": "id",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1393,
                                          "src": "13520:2:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint8",
                                            "typeString": "uint8"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "==",
                                        "rightExpression": {
                                          "hexValue": "3238",
                                          "id": 1562,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "number",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "13526:2:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_rational_28_by_1",
                                            "typeString": "int_const 28"
                                          },
                                          "value": "28"
                                        },
                                        "src": "13520:8:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        }
                                      },
                                      "falseExpression": {
                                        "condition": {
                                          "commonType": {
                                            "typeIdentifier": "t_uint8",
                                            "typeString": "uint8"
                                          },
                                          "id": 1567,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftExpression": {
                                            "id": 1565,
                                            "name": "id",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1393,
                                            "src": "13542:2:1",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint8",
                                              "typeString": "uint8"
                                            }
                                          },
                                          "nodeType": "BinaryOperation",
                                          "operator": "==",
                                          "rightExpression": {
                                            "hexValue": "3239",
                                            "id": 1566,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "13548:2:1",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_rational_29_by_1",
                                              "typeString": "int_const 29"
                                            },
                                            "value": "29"
                                          },
                                          "src": "13542:8:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                          }
                                        },
                                        "falseExpression": {
                                          "hexValue": "59656c6c6f7720476f626c696e",
                                          "id": 1569,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "string",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "13568:15:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_stringliteral_a1e05a6615d23c7ef79b54815069292346a2b99ab325ea86e1421bb5bb4e6b13",
                                            "typeString": "literal_string \"Yellow Goblin\""
                                          },
                                          "value": "Yellow Goblin"
                                        },
                                        "id": 1570,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "Conditional",
                                        "src": "13542:41:1",
                                        "trueExpression": {
                                          "hexValue": "52656420476f626c696e",
                                          "id": 1568,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "string",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "13553:12:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_stringliteral_3c63daac88d66148319cf6a4e7441898043ff77cdad87622f46536f070f5e59e",
                                            "typeString": "literal_string \"Red Goblin\""
                                          },
                                          "value": "Red Goblin"
                                        },
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_string_memory_ptr",
                                          "typeString": "string memory"
                                        }
                                      },
                                      "id": 1571,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "Conditional",
                                      "src": "13520:63:1",
                                      "trueExpression": {
                                        "hexValue": "5a6f6d626965",
                                        "id": 1564,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "string",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "13531:8:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_stringliteral_f41cb73ce9ba5c1f594bcdfd56e2d14e42d2ecc23f0a4863835bdd4baacd8b72",
                                          "typeString": "literal_string \"Zombie\""
                                        },
                                        "value": "Zombie"
                                      },
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_string_memory_ptr",
                                        "typeString": "string memory"
                                      }
                                    },
                                    "functionReturnParameters": 1397,
                                    "id": 1572,
                                    "nodeType": "Return",
                                    "src": "13492:91:1"
                                  }
                                ]
                              }
                            },
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                },
                                "id": 1577,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 1575,
                                  "name": "id",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1393,
                                  "src": "13617:2:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint8",
                                    "typeString": "uint8"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "<=",
                                "rightExpression": {
                                  "hexValue": "3332",
                                  "id": 1576,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "13623:2:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_32_by_1",
                                    "typeString": "int_const 32"
                                  },
                                  "value": "32"
                                },
                                "src": "13617:8:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 1586,
                              "nodeType": "IfStatement",
                              "src": "13613:86:1",
                              "trueBody": {
                                "id": 1585,
                                "nodeType": "Block",
                                "src": "13627:72:1",
                                "statements": [
                                  {
                                    "expression": {
                                      "condition": {
                                        "commonType": {
                                          "typeIdentifier": "t_uint8",
                                          "typeString": "uint8"
                                        },
                                        "id": 1580,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "id": 1578,
                                          "name": "id",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1393,
                                          "src": "13653:2:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint8",
                                            "typeString": "uint8"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "==",
                                        "rightExpression": {
                                          "hexValue": "3331",
                                          "id": 1579,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "number",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "13659:2:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_rational_31_by_1",
                                            "typeString": "int_const 31"
                                          },
                                          "value": "31"
                                        },
                                        "src": "13653:8:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        }
                                      },
                                      "falseExpression": {
                                        "hexValue": "506c6173746963",
                                        "id": 1582,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "string",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "13674:9:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_stringliteral_fcf4febff5018c46840db74c1deedb3276e3cebc157bfb0f6704cceee0820a12",
                                          "typeString": "literal_string \"Plastic\""
                                        },
                                        "value": "Plastic"
                                      },
                                      "id": 1583,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "Conditional",
                                      "src": "13653:30:1",
                                      "trueExpression": {
                                        "hexValue": "53756c6c79",
                                        "id": 1581,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "string",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "13664:7:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_stringliteral_ad2a172a30e1a7ba5424bc1aaa6f208c64438aec03b242c65491d90f70f7c54f",
                                          "typeString": "literal_string \"Sully\""
                                        },
                                        "value": "Sully"
                                      },
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_string_memory_ptr",
                                        "typeString": "string memory"
                                      }
                                    },
                                    "functionReturnParameters": 1397,
                                    "id": 1584,
                                    "nodeType": "Return",
                                    "src": "13646:37:1"
                                  }
                                ]
                              }
                            },
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                },
                                "id": 1589,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 1587,
                                  "name": "id",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1393,
                                  "src": "13718:2:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint8",
                                    "typeString": "uint8"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "<=",
                                "rightExpression": {
                                  "hexValue": "3334",
                                  "id": 1588,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "13724:2:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_34_by_1",
                                    "typeString": "int_const 34"
                                  },
                                  "value": "34"
                                },
                                "src": "13718:8:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 1598,
                              "nodeType": "IfStatement",
                              "src": "13714:87:1",
                              "trueBody": {
                                "id": 1597,
                                "nodeType": "Block",
                                "src": "13728:73:1",
                                "statements": [
                                  {
                                    "expression": {
                                      "condition": {
                                        "commonType": {
                                          "typeIdentifier": "t_uint8",
                                          "typeString": "uint8"
                                        },
                                        "id": 1592,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "id": 1590,
                                          "name": "id",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1393,
                                          "src": "13754:2:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint8",
                                            "typeString": "uint8"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "==",
                                        "rightExpression": {
                                          "hexValue": "3333",
                                          "id": 1591,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "number",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "13760:2:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_rational_33_by_1",
                                            "typeString": "int_const 33"
                                          },
                                          "value": "33"
                                        },
                                        "src": "13754:8:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        }
                                      },
                                      "falseExpression": {
                                        "hexValue": "536b656c65746f6e",
                                        "id": 1594,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "string",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "13775:10:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_stringliteral_d51659c0d9b7d86764118ccc617623aa47e079eee5e9827ddba044d68c167d21",
                                          "typeString": "literal_string \"Skeleton\""
                                        },
                                        "value": "Skeleton"
                                      },
                                      "id": 1595,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "Conditional",
                                      "src": "13754:31:1",
                                      "trueExpression": {
                                        "hexValue": "5469676572",
                                        "id": 1593,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "string",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "13765:7:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_stringliteral_598175fd9ea7519e38e8abfbd368d3f20074edca788e8a2e0d03f6f7404b0c9a",
                                          "typeString": "literal_string \"Tiger\""
                                        },
                                        "value": "Tiger"
                                      },
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_string_memory_ptr",
                                        "typeString": "string memory"
                                      }
                                    },
                                    "functionReturnParameters": 1397,
                                    "id": 1596,
                                    "nodeType": "Return",
                                    "src": "13747:38:1"
                                  }
                                ]
                              }
                            },
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                },
                                "id": 1601,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 1599,
                                  "name": "id",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1393,
                                  "src": "13819:2:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint8",
                                    "typeString": "uint8"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "<=",
                                "rightExpression": {
                                  "hexValue": "3336",
                                  "id": 1600,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "13825:2:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_36_by_1",
                                    "typeString": "int_const 36"
                                  },
                                  "value": "36"
                                },
                                "src": "13819:8:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 1610,
                              "nodeType": "IfStatement",
                              "src": "13815:91:1",
                              "trueBody": {
                                "id": 1609,
                                "nodeType": "Block",
                                "src": "13829:77:1",
                                "statements": [
                                  {
                                    "expression": {
                                      "condition": {
                                        "commonType": {
                                          "typeIdentifier": "t_uint8",
                                          "typeString": "uint8"
                                        },
                                        "id": 1604,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "id": 1602,
                                          "name": "id",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1393,
                                          "src": "13855:2:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint8",
                                            "typeString": "uint8"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "==",
                                        "rightExpression": {
                                          "hexValue": "3335",
                                          "id": 1603,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "number",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "13861:2:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_rational_35_by_1",
                                            "typeString": "int_const 35"
                                          },
                                          "value": "35"
                                        },
                                        "src": "13855:8:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        }
                                      },
                                      "falseExpression": {
                                        "hexValue": "476f72696c6c61",
                                        "id": 1606,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "string",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "13881:9:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_stringliteral_89dae59c8355bd8717f50d132422d06f4d1c87829be837a9578f0345a11871d8",
                                          "typeString": "literal_string \"Gorilla\""
                                        },
                                        "value": "Gorilla"
                                      },
                                      "id": 1607,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "Conditional",
                                      "src": "13855:35:1",
                                      "trueExpression": {
                                        "hexValue": "536e6f77205469676572",
                                        "id": 1605,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "string",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "13866:12:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_stringliteral_5c685914568b8d9f6dd852a0399b4074ddf3dd73111820f4d003c0056e3d5c44",
                                          "typeString": "literal_string \"Snow Tiger\""
                                        },
                                        "value": "Snow Tiger"
                                      },
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_string_memory_ptr",
                                        "typeString": "string memory"
                                      }
                                    },
                                    "functionReturnParameters": 1397,
                                    "id": 1608,
                                    "nodeType": "Return",
                                    "src": "13848:42:1"
                                  }
                                ]
                              }
                            },
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                },
                                "id": 1613,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 1611,
                                  "name": "id",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1393,
                                  "src": "13924:2:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint8",
                                    "typeString": "uint8"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "<=",
                                "rightExpression": {
                                  "hexValue": "3338",
                                  "id": 1612,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "13930:2:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_38_by_1",
                                    "typeString": "int_const 38"
                                  },
                                  "value": "38"
                                },
                                "src": "13924:8:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 1622,
                              "nodeType": "IfStatement",
                              "src": "13920:85:1",
                              "trueBody": {
                                "id": 1621,
                                "nodeType": "Block",
                                "src": "13934:71:1",
                                "statements": [
                                  {
                                    "expression": {
                                      "condition": {
                                        "commonType": {
                                          "typeIdentifier": "t_uint8",
                                          "typeString": "uint8"
                                        },
                                        "id": 1616,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "id": 1614,
                                          "name": "id",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1393,
                                          "src": "13960:2:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint8",
                                            "typeString": "uint8"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "==",
                                        "rightExpression": {
                                          "hexValue": "3337",
                                          "id": 1615,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "number",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "13966:2:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_rational_37_by_1",
                                            "typeString": "int_const 37"
                                          },
                                          "value": "37"
                                        },
                                        "src": "13960:8:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        }
                                      },
                                      "falseExpression": {
                                        "hexValue": "53717561746368",
                                        "id": 1618,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "string",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "13980:9:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_stringliteral_0f0cea56e6684579177555537be77f1d12e81c298a9f7e6ceda398fe5fac57fb",
                                          "typeString": "literal_string \"Squatch\""
                                        },
                                        "value": "Squatch"
                                      },
                                      "id": 1619,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "Conditional",
                                      "src": "13960:29:1",
                                      "trueExpression": {
                                        "hexValue": "59657469",
                                        "id": 1617,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "string",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "13971:6:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_stringliteral_3fd1b687b2e0b6adbdc1e5c994ed5c9fd2046c556f1e164c4bfe7d84cd8a0483",
                                          "typeString": "literal_string \"Yeti\""
                                        },
                                        "value": "Yeti"
                                      },
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_string_memory_ptr",
                                        "typeString": "string memory"
                                      }
                                    },
                                    "functionReturnParameters": 1397,
                                    "id": 1620,
                                    "nodeType": "Return",
                                    "src": "13953:36:1"
                                  }
                                ]
                              }
                            },
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                },
                                "id": 1625,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 1623,
                                  "name": "id",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1393,
                                  "src": "14023:2:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint8",
                                    "typeString": "uint8"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "<=",
                                "rightExpression": {
                                  "hexValue": "3430",
                                  "id": 1624,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "14029:2:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_40_by_1",
                                    "typeString": "int_const 40"
                                  },
                                  "value": "40"
                                },
                                "src": "14023:8:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 1634,
                              "nodeType": "IfStatement",
                              "src": "14019:85:1",
                              "trueBody": {
                                "id": 1633,
                                "nodeType": "Block",
                                "src": "14033:71:1",
                                "statements": [
                                  {
                                    "expression": {
                                      "condition": {
                                        "commonType": {
                                          "typeIdentifier": "t_uint8",
                                          "typeString": "uint8"
                                        },
                                        "id": 1628,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "id": 1626,
                                          "name": "id",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1393,
                                          "src": "14059:2:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint8",
                                            "typeString": "uint8"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "==",
                                        "rightExpression": {
                                          "hexValue": "3339",
                                          "id": 1627,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "number",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "14065:2:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_rational_39_by_1",
                                            "typeString": "int_const 39"
                                          },
                                          "value": "39"
                                        },
                                        "src": "14059:8:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        }
                                      },
                                      "falseExpression": {
                                        "hexValue": "436f736d6963",
                                        "id": 1630,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "string",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "14080:8:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_stringliteral_c9a38768b40dba9617e903d00fb1d03aed57d7623d7ac5fe1137caea53410b6d",
                                          "typeString": "literal_string \"Cosmic\""
                                        },
                                        "value": "Cosmic"
                                      },
                                      "id": 1631,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "Conditional",
                                      "src": "14059:29:1",
                                      "trueExpression": {
                                        "hexValue": "5374657665",
                                        "id": 1629,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "string",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "14070:7:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_stringliteral_c3a3aa8bacf482883a296d5a6eaf3d824e1d9bb413f9bafc934ac310133c9411",
                                          "typeString": "literal_string \"Steve\""
                                        },
                                        "value": "Steve"
                                      },
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_string_memory_ptr",
                                        "typeString": "string memory"
                                      }
                                    },
                                    "functionReturnParameters": 1397,
                                    "id": 1632,
                                    "nodeType": "Return",
                                    "src": "14052:36:1"
                                  }
                                ]
                              }
                            },
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                },
                                "id": 1637,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 1635,
                                  "name": "id",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1393,
                                  "src": "14122:2:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint8",
                                    "typeString": "uint8"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "hexValue": "3431",
                                  "id": 1636,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "14128:2:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_41_by_1",
                                    "typeString": "int_const 41"
                                  },
                                  "value": "41"
                                },
                                "src": "14122:8:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 1641,
                              "nodeType": "IfStatement",
                              "src": "14118:64:1",
                              "trueBody": {
                                "id": 1640,
                                "nodeType": "Block",
                                "src": "14132:50:1",
                                "statements": [
                                  {
                                    "expression": {
                                      "hexValue": "506972617465",
                                      "id": 1638,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "string",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "14158:8:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_stringliteral_ca9fca8ce9a508a9abaf1d2149799c9678f61f5546bb02c3aba84718deab639e",
                                        "typeString": "literal_string \"Pirate\""
                                      },
                                      "value": "Pirate"
                                    },
                                    "functionReturnParameters": 1397,
                                    "id": 1639,
                                    "nodeType": "Return",
                                    "src": "14151:15:1"
                                  }
                                ]
                              }
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "hexValue": "4572726f723a204964206e6f7420666f756e64",
                          "id": 1644,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "14210:21:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_33ffa286a2bcff0aeabc164109cce1220e5b4a128845f62fe2453267d545a044",
                            "typeString": "literal_string \"Error: Id not found\""
                          },
                          "value": "Error: Id not found"
                        },
                        "functionReturnParameters": 1397,
                        "id": 1645,
                        "nodeType": "Return",
                        "src": "14203:28:1"
                      }
                    ]
                  },
                  "functionSelector": "22c414eb",
                  "id": 1647,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getHandName",
                  "nameLocation": "11893:11:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1394,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1393,
                        "mutability": "mutable",
                        "name": "id",
                        "nameLocation": "11911:2:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1647,
                        "src": "11905:8:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 1392,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "11905:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "11904:10:1"
                  },
                  "returnParameters": {
                    "id": 1397,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1396,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1647,
                        "src": "11936:13:1",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 1395,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "11936:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "11935:15:1"
                  },
                  "scope": 1648,
                  "src": "11884:2355:1",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "public"
                }
              ],
              "scope": 1698,
              "src": "92:14150:1",
              "usedErrors": []
            },
            {
              "abstract": false,
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "library",
              "documentation": {
                "id": 1649,
                "nodeType": "StructuredDocumentation",
                "src": "14246:199:1",
                "text": "@title Base64\n @author Brecht Devos - <brecht@loopring.org>\n @notice Provides a function for encoding some bytes in base64\n @notice NOT BUILT BY ETHERORCS TEAM. Thanks Bretch Devos!"
              },
              "fullyImplemented": true,
              "id": 1697,
              "linearizedBaseContracts": [
                1697
              ],
              "name": "Base64",
              "nameLocation": "14453:6:1",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": true,
                  "id": 1652,
                  "mutability": "constant",
                  "name": "TABLE",
                  "nameLocation": "14492:5:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1697,
                  "src": "14467:108:1",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1650,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "14467:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": {
                    "hexValue": "4142434445464748494a4b4c4d4e4f505152535455565758595a6162636465666768696a6b6c6d6e6f707172737475767778797a303132333435363738392b2f",
                    "id": 1651,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "14509:66:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_84d8a590de33e00cbdc16e1f28c3506f5ec15c599fab9a6a4bcd575cc2f110ce",
                      "typeString": "literal_string \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\""
                    },
                    "value": "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/"
                  },
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1695,
                    "nodeType": "Block",
                    "src": "14657:2183:1",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1662,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 1659,
                              "name": "data",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1654,
                              "src": "14672:4:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            "id": 1660,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "14672:11:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 1661,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "14687:1:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "14672:16:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1665,
                        "nodeType": "IfStatement",
                        "src": "14668:31:1",
                        "trueBody": {
                          "expression": {
                            "hexValue": "",
                            "id": 1663,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "14697:2:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                              "typeString": "literal_string \"\""
                            },
                            "value": ""
                          },
                          "functionReturnParameters": 1658,
                          "id": 1664,
                          "nodeType": "Return",
                          "src": "14690:9:1"
                        }
                      },
                      {
                        "assignments": [
                          1667
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1667,
                            "mutability": "mutable",
                            "name": "table",
                            "nameLocation": "14765:5:1",
                            "nodeType": "VariableDeclaration",
                            "scope": 1695,
                            "src": "14751:19:1",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string"
                            },
                            "typeName": {
                              "id": 1666,
                              "name": "string",
                              "nodeType": "ElementaryTypeName",
                              "src": "14751:6:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_storage_ptr",
                                "typeString": "string"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1669,
                        "initialValue": {
                          "id": 1668,
                          "name": "TABLE",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1652,
                          "src": "14773:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "14751:27:1"
                      },
                      {
                        "assignments": [
                          1671
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1671,
                            "mutability": "mutable",
                            "name": "encodedLen",
                            "nameLocation": "14838:10:1",
                            "nodeType": "VariableDeclaration",
                            "scope": 1695,
                            "src": "14830:18:1",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1670,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "14830:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1682,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1681,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "34",
                            "id": 1672,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "14851:1:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_4_by_1",
                              "typeString": "int_const 4"
                            },
                            "value": "4"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1679,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "components": [
                                    {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 1676,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "expression": {
                                          "id": 1673,
                                          "name": "data",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1654,
                                          "src": "14857:4:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bytes_memory_ptr",
                                            "typeString": "bytes memory"
                                          }
                                        },
                                        "id": 1674,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "length",
                                        "nodeType": "MemberAccess",
                                        "src": "14857:11:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "+",
                                      "rightExpression": {
                                        "hexValue": "32",
                                        "id": 1675,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "14871:1:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_2_by_1",
                                          "typeString": "int_const 2"
                                        },
                                        "value": "2"
                                      },
                                      "src": "14857:15:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "id": 1677,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "14856:17:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "/",
                                "rightExpression": {
                                  "hexValue": "33",
                                  "id": 1678,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "14876:1:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_3_by_1",
                                    "typeString": "int_const 3"
                                  },
                                  "value": "3"
                                },
                                "src": "14856:21:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 1680,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "14855:23:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "14851:27:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "14830:48:1"
                      },
                      {
                        "assignments": [
                          1684
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1684,
                            "mutability": "mutable",
                            "name": "result",
                            "nameLocation": "14975:6:1",
                            "nodeType": "VariableDeclaration",
                            "scope": 1695,
                            "src": "14961:20:1",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string"
                            },
                            "typeName": {
                              "id": 1683,
                              "name": "string",
                              "nodeType": "ElementaryTypeName",
                              "src": "14961:6:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_storage_ptr",
                                "typeString": "string"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1691,
                        "initialValue": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1689,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1687,
                                "name": "encodedLen",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1671,
                                "src": "14995:10:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "+",
                              "rightExpression": {
                                "hexValue": "3332",
                                "id": 1688,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "15008:2:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_32_by_1",
                                  "typeString": "int_const 32"
                                },
                                "value": "32"
                              },
                              "src": "14995:15:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1686,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "14984:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
                              "typeString": "function (uint256) pure returns (string memory)"
                            },
                            "typeName": {
                              "id": 1685,
                              "name": "string",
                              "nodeType": "ElementaryTypeName",
                              "src": "14988:6:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_storage_ptr",
                                "typeString": "string"
                              }
                            }
                          },
                          "id": 1690,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "14984:27:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "14961:50:1"
                      },
                      {
                        "AST": {
                          "nodeType": "YulBlock",
                          "src": "15033:1774:1",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "result",
                                    "nodeType": "YulIdentifier",
                                    "src": "15100:6:1"
                                  },
                                  {
                                    "name": "encodedLen",
                                    "nodeType": "YulIdentifier",
                                    "src": "15108:10:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "15093:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "15093:26:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "15093:26:1"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "15176:29:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "table",
                                    "nodeType": "YulIdentifier",
                                    "src": "15196:5:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "15203:1:1",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "15192:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "15192:13:1"
                              },
                              "variables": [
                                {
                                  "name": "tablePtr",
                                  "nodeType": "YulTypedName",
                                  "src": "15180:8:1",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "15247:19:1",
                              "value": {
                                "name": "data",
                                "nodeType": "YulIdentifier",
                                "src": "15262:4:1"
                              },
                              "variables": [
                                {
                                  "name": "dataPtr",
                                  "nodeType": "YulTypedName",
                                  "src": "15251:7:1",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "15280:39:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "dataPtr",
                                    "nodeType": "YulIdentifier",
                                    "src": "15298:7:1"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "data",
                                        "nodeType": "YulIdentifier",
                                        "src": "15313:4:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mload",
                                      "nodeType": "YulIdentifier",
                                      "src": "15307:5:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "15307:11:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "15294:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "15294:25:1"
                              },
                              "variables": [
                                {
                                  "name": "endPtr",
                                  "nodeType": "YulTypedName",
                                  "src": "15284:6:1",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "15380:32:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "result",
                                    "nodeType": "YulIdentifier",
                                    "src": "15401:6:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "15409:2:1",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "15397:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "15397:15:1"
                              },
                              "variables": [
                                {
                                  "name": "resultPtr",
                                  "nodeType": "YulTypedName",
                                  "src": "15384:9:1",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "15544:983:1",
                                "statements": [
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "15563:26:1",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "dataPtr",
                                          "nodeType": "YulIdentifier",
                                          "src": "15578:7:1"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "15587:1:1",
                                          "type": "",
                                          "value": "3"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "15574:3:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "15574:15:1"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "dataPtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "15563:7:1"
                                      }
                                    ]
                                  },
                                  {
                                    "nodeType": "YulVariableDeclaration",
                                    "src": "15642:27:1",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "dataPtr",
                                          "nodeType": "YulIdentifier",
                                          "src": "15661:7:1"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mload",
                                        "nodeType": "YulIdentifier",
                                        "src": "15655:5:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "15655:14:1"
                                    },
                                    "variables": [
                                      {
                                        "name": "input",
                                        "nodeType": "YulTypedName",
                                        "src": "15646:5:1",
                                        "type": ""
                                      }
                                    ]
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "resultPtr",
                                          "nodeType": "YulIdentifier",
                                          "src": "15757:9:1"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "kind": "number",
                                              "nodeType": "YulLiteral",
                                              "src": "15793:3:1",
                                              "type": "",
                                              "value": "248"
                                            },
                                            {
                                              "arguments": [
                                                {
                                                  "arguments": [
                                                    {
                                                      "name": "tablePtr",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "15808:8:1"
                                                    },
                                                    {
                                                      "arguments": [
                                                        {
                                                          "arguments": [
                                                            {
                                                              "kind": "number",
                                                              "nodeType": "YulLiteral",
                                                              "src": "15826:2:1",
                                                              "type": "",
                                                              "value": "18"
                                                            },
                                                            {
                                                              "name": "input",
                                                              "nodeType": "YulIdentifier",
                                                              "src": "15830:5:1"
                                                            }
                                                          ],
                                                          "functionName": {
                                                            "name": "shr",
                                                            "nodeType": "YulIdentifier",
                                                            "src": "15822:3:1"
                                                          },
                                                          "nodeType": "YulFunctionCall",
                                                          "src": "15822:14:1"
                                                        },
                                                        {
                                                          "kind": "number",
                                                          "nodeType": "YulLiteral",
                                                          "src": "15838:4:1",
                                                          "type": "",
                                                          "value": "0x3F"
                                                        }
                                                      ],
                                                      "functionName": {
                                                        "name": "and",
                                                        "nodeType": "YulIdentifier",
                                                        "src": "15818:3:1"
                                                      },
                                                      "nodeType": "YulFunctionCall",
                                                      "src": "15818:25:1"
                                                    }
                                                  ],
                                                  "functionName": {
                                                    "name": "add",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "15804:3:1"
                                                  },
                                                  "nodeType": "YulFunctionCall",
                                                  "src": "15804:40:1"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "mload",
                                                "nodeType": "YulIdentifier",
                                                "src": "15798:5:1"
                                              },
                                              "nodeType": "YulFunctionCall",
                                              "src": "15798:47:1"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "shl",
                                            "nodeType": "YulIdentifier",
                                            "src": "15789:3:1"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "15789:57:1"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "15728:6:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "15728:137:1"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "15728:137:1"
                                  },
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "15883:30:1",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "resultPtr",
                                          "nodeType": "YulIdentifier",
                                          "src": "15900:9:1"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "15911:1:1",
                                          "type": "",
                                          "value": "1"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "15896:3:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "15896:17:1"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "resultPtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "15883:9:1"
                                      }
                                    ]
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "resultPtr",
                                          "nodeType": "YulIdentifier",
                                          "src": "15960:9:1"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "kind": "number",
                                              "nodeType": "YulLiteral",
                                              "src": "15996:3:1",
                                              "type": "",
                                              "value": "248"
                                            },
                                            {
                                              "arguments": [
                                                {
                                                  "arguments": [
                                                    {
                                                      "name": "tablePtr",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "16011:8:1"
                                                    },
                                                    {
                                                      "arguments": [
                                                        {
                                                          "arguments": [
                                                            {
                                                              "kind": "number",
                                                              "nodeType": "YulLiteral",
                                                              "src": "16029:2:1",
                                                              "type": "",
                                                              "value": "12"
                                                            },
                                                            {
                                                              "name": "input",
                                                              "nodeType": "YulIdentifier",
                                                              "src": "16033:5:1"
                                                            }
                                                          ],
                                                          "functionName": {
                                                            "name": "shr",
                                                            "nodeType": "YulIdentifier",
                                                            "src": "16025:3:1"
                                                          },
                                                          "nodeType": "YulFunctionCall",
                                                          "src": "16025:14:1"
                                                        },
                                                        {
                                                          "kind": "number",
                                                          "nodeType": "YulLiteral",
                                                          "src": "16041:4:1",
                                                          "type": "",
                                                          "value": "0x3F"
                                                        }
                                                      ],
                                                      "functionName": {
                                                        "name": "and",
                                                        "nodeType": "YulIdentifier",
                                                        "src": "16021:3:1"
                                                      },
                                                      "nodeType": "YulFunctionCall",
                                                      "src": "16021:25:1"
                                                    }
                                                  ],
                                                  "functionName": {
                                                    "name": "add",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "16007:3:1"
                                                  },
                                                  "nodeType": "YulFunctionCall",
                                                  "src": "16007:40:1"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "mload",
                                                "nodeType": "YulIdentifier",
                                                "src": "16001:5:1"
                                              },
                                              "nodeType": "YulFunctionCall",
                                              "src": "16001:47:1"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "shl",
                                            "nodeType": "YulIdentifier",
                                            "src": "15992:3:1"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "15992:57:1"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "15931:6:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "15931:137:1"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "15931:137:1"
                                  },
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "16086:30:1",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "resultPtr",
                                          "nodeType": "YulIdentifier",
                                          "src": "16103:9:1"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "16114:1:1",
                                          "type": "",
                                          "value": "1"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "16099:3:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "16099:17:1"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "resultPtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "16086:9:1"
                                      }
                                    ]
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "resultPtr",
                                          "nodeType": "YulIdentifier",
                                          "src": "16163:9:1"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "kind": "number",
                                              "nodeType": "YulLiteral",
                                              "src": "16199:3:1",
                                              "type": "",
                                              "value": "248"
                                            },
                                            {
                                              "arguments": [
                                                {
                                                  "arguments": [
                                                    {
                                                      "name": "tablePtr",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "16214:8:1"
                                                    },
                                                    {
                                                      "arguments": [
                                                        {
                                                          "arguments": [
                                                            {
                                                              "kind": "number",
                                                              "nodeType": "YulLiteral",
                                                              "src": "16232:1:1",
                                                              "type": "",
                                                              "value": "6"
                                                            },
                                                            {
                                                              "name": "input",
                                                              "nodeType": "YulIdentifier",
                                                              "src": "16235:5:1"
                                                            }
                                                          ],
                                                          "functionName": {
                                                            "name": "shr",
                                                            "nodeType": "YulIdentifier",
                                                            "src": "16228:3:1"
                                                          },
                                                          "nodeType": "YulFunctionCall",
                                                          "src": "16228:13:1"
                                                        },
                                                        {
                                                          "kind": "number",
                                                          "nodeType": "YulLiteral",
                                                          "src": "16243:4:1",
                                                          "type": "",
                                                          "value": "0x3F"
                                                        }
                                                      ],
                                                      "functionName": {
                                                        "name": "and",
                                                        "nodeType": "YulIdentifier",
                                                        "src": "16224:3:1"
                                                      },
                                                      "nodeType": "YulFunctionCall",
                                                      "src": "16224:24:1"
                                                    }
                                                  ],
                                                  "functionName": {
                                                    "name": "add",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "16210:3:1"
                                                  },
                                                  "nodeType": "YulFunctionCall",
                                                  "src": "16210:39:1"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "mload",
                                                "nodeType": "YulIdentifier",
                                                "src": "16204:5:1"
                                              },
                                              "nodeType": "YulFunctionCall",
                                              "src": "16204:46:1"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "shl",
                                            "nodeType": "YulIdentifier",
                                            "src": "16195:3:1"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "16195:56:1"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "16134:6:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "16134:136:1"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "16134:136:1"
                                  },
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "16288:30:1",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "resultPtr",
                                          "nodeType": "YulIdentifier",
                                          "src": "16305:9:1"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "16316:1:1",
                                          "type": "",
                                          "value": "1"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "16301:3:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "16301:17:1"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "resultPtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "16288:9:1"
                                      }
                                    ]
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "resultPtr",
                                          "nodeType": "YulIdentifier",
                                          "src": "16365:9:1"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "kind": "number",
                                              "nodeType": "YulLiteral",
                                              "src": "16401:3:1",
                                              "type": "",
                                              "value": "248"
                                            },
                                            {
                                              "arguments": [
                                                {
                                                  "arguments": [
                                                    {
                                                      "name": "tablePtr",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "16416:8:1"
                                                    },
                                                    {
                                                      "arguments": [
                                                        {
                                                          "name": "input",
                                                          "nodeType": "YulIdentifier",
                                                          "src": "16430:5:1"
                                                        },
                                                        {
                                                          "kind": "number",
                                                          "nodeType": "YulLiteral",
                                                          "src": "16437:4:1",
                                                          "type": "",
                                                          "value": "0x3F"
                                                        }
                                                      ],
                                                      "functionName": {
                                                        "name": "and",
                                                        "nodeType": "YulIdentifier",
                                                        "src": "16426:3:1"
                                                      },
                                                      "nodeType": "YulFunctionCall",
                                                      "src": "16426:16:1"
                                                    }
                                                  ],
                                                  "functionName": {
                                                    "name": "add",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "16412:3:1"
                                                  },
                                                  "nodeType": "YulFunctionCall",
                                                  "src": "16412:31:1"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "mload",
                                                "nodeType": "YulIdentifier",
                                                "src": "16406:5:1"
                                              },
                                              "nodeType": "YulFunctionCall",
                                              "src": "16406:38:1"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "shl",
                                            "nodeType": "YulIdentifier",
                                            "src": "16397:3:1"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "16397:48:1"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "16336:6:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "16336:128:1"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "16336:128:1"
                                  },
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "16482:30:1",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "resultPtr",
                                          "nodeType": "YulIdentifier",
                                          "src": "16499:9:1"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "16510:1:1",
                                          "type": "",
                                          "value": "1"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "16495:3:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "16495:17:1"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "resultPtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "16482:9:1"
                                      }
                                    ]
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "dataPtr",
                                    "nodeType": "YulIdentifier",
                                    "src": "15508:7:1"
                                  },
                                  {
                                    "name": "endPtr",
                                    "nodeType": "YulIdentifier",
                                    "src": "15517:6:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "lt",
                                  "nodeType": "YulIdentifier",
                                  "src": "15505:2:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "15505:19:1"
                              },
                              "nodeType": "YulForLoop",
                              "post": {
                                "nodeType": "YulBlock",
                                "src": "15525:18:1",
                                "statements": []
                              },
                              "pre": {
                                "nodeType": "YulBlock",
                                "src": "15486:18:1",
                                "statements": []
                              },
                              "src": "15482:1045:1"
                            },
                            {
                              "cases": [
                                {
                                  "body": {
                                    "nodeType": "YulBlock",
                                    "src": "16623:77:1",
                                    "statements": [
                                      {
                                        "expression": {
                                          "arguments": [
                                            {
                                              "arguments": [
                                                {
                                                  "name": "resultPtr",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "16653:9:1"
                                                },
                                                {
                                                  "kind": "number",
                                                  "nodeType": "YulLiteral",
                                                  "src": "16664:1:1",
                                                  "type": "",
                                                  "value": "2"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "sub",
                                                "nodeType": "YulIdentifier",
                                                "src": "16649:3:1"
                                              },
                                              "nodeType": "YulFunctionCall",
                                              "src": "16649:17:1"
                                            },
                                            {
                                              "arguments": [
                                                {
                                                  "kind": "number",
                                                  "nodeType": "YulLiteral",
                                                  "src": "16672:3:1",
                                                  "type": "",
                                                  "value": "240"
                                                },
                                                {
                                                  "kind": "number",
                                                  "nodeType": "YulLiteral",
                                                  "src": "16677:6:1",
                                                  "type": "",
                                                  "value": "0x3d3d"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "shl",
                                                "nodeType": "YulIdentifier",
                                                "src": "16668:3:1"
                                              },
                                              "nodeType": "YulFunctionCall",
                                              "src": "16668:16:1"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "mstore",
                                            "nodeType": "YulIdentifier",
                                            "src": "16642:6:1"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "16642:43:1"
                                        },
                                        "nodeType": "YulExpressionStatement",
                                        "src": "16642:43:1"
                                      }
                                    ]
                                  },
                                  "nodeType": "YulCase",
                                  "src": "16616:84:1",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "16621:1:1",
                                    "type": "",
                                    "value": "1"
                                  }
                                },
                                {
                                  "body": {
                                    "nodeType": "YulBlock",
                                    "src": "16721:75:1",
                                    "statements": [
                                      {
                                        "expression": {
                                          "arguments": [
                                            {
                                              "arguments": [
                                                {
                                                  "name": "resultPtr",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "16751:9:1"
                                                },
                                                {
                                                  "kind": "number",
                                                  "nodeType": "YulLiteral",
                                                  "src": "16762:1:1",
                                                  "type": "",
                                                  "value": "1"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "sub",
                                                "nodeType": "YulIdentifier",
                                                "src": "16747:3:1"
                                              },
                                              "nodeType": "YulFunctionCall",
                                              "src": "16747:17:1"
                                            },
                                            {
                                              "arguments": [
                                                {
                                                  "kind": "number",
                                                  "nodeType": "YulLiteral",
                                                  "src": "16770:3:1",
                                                  "type": "",
                                                  "value": "248"
                                                },
                                                {
                                                  "kind": "number",
                                                  "nodeType": "YulLiteral",
                                                  "src": "16775:4:1",
                                                  "type": "",
                                                  "value": "0x3d"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "shl",
                                                "nodeType": "YulIdentifier",
                                                "src": "16766:3:1"
                                              },
                                              "nodeType": "YulFunctionCall",
                                              "src": "16766:14:1"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "mstore",
                                            "nodeType": "YulIdentifier",
                                            "src": "16740:6:1"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "16740:41:1"
                                        },
                                        "nodeType": "YulExpressionStatement",
                                        "src": "16740:41:1"
                                      }
                                    ]
                                  },
                                  "nodeType": "YulCase",
                                  "src": "16714:82:1",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "16719:1:1",
                                    "type": "",
                                    "value": "2"
                                  }
                                }
                              ],
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "data",
                                        "nodeType": "YulIdentifier",
                                        "src": "16593:4:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mload",
                                      "nodeType": "YulIdentifier",
                                      "src": "16587:5:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "16587:11:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "16600:1:1",
                                    "type": "",
                                    "value": "3"
                                  }
                                ],
                                "functionName": {
                                  "name": "mod",
                                  "nodeType": "YulIdentifier",
                                  "src": "16583:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "16583:19:1"
                              },
                              "nodeType": "YulSwitch",
                              "src": "16576:220:1"
                            }
                          ]
                        },
                        "evmVersion": "london",
                        "externalReferences": [
                          {
                            "declaration": 1654,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "15262:4:1",
                            "valueSize": 1
                          },
                          {
                            "declaration": 1654,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "15313:4:1",
                            "valueSize": 1
                          },
                          {
                            "declaration": 1654,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "16593:4:1",
                            "valueSize": 1
                          },
                          {
                            "declaration": 1671,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "15108:10:1",
                            "valueSize": 1
                          },
                          {
                            "declaration": 1684,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "15100:6:1",
                            "valueSize": 1
                          },
                          {
                            "declaration": 1684,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "15401:6:1",
                            "valueSize": 1
                          },
                          {
                            "declaration": 1667,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "15196:5:1",
                            "valueSize": 1
                          }
                        ],
                        "id": 1692,
                        "nodeType": "InlineAssembly",
                        "src": "15024:1783:1"
                      },
                      {
                        "expression": {
                          "id": 1693,
                          "name": "result",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1684,
                          "src": "16826:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        "functionReturnParameters": 1658,
                        "id": 1694,
                        "nodeType": "Return",
                        "src": "16819:13:1"
                      }
                    ]
                  },
                  "id": 1696,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "encode",
                  "nameLocation": "14593:6:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1655,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1654,
                        "mutability": "mutable",
                        "name": "data",
                        "nameLocation": "14613:4:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1696,
                        "src": "14600:17:1",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 1653,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "14600:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "14599:19:1"
                  },
                  "returnParameters": {
                    "id": 1658,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1657,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1696,
                        "src": "14642:13:1",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 1656,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "14642:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "14641:15:1"
                  },
                  "scope": 1697,
                  "src": "14584:2256:1",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                }
              ],
              "scope": 1698,
              "src": "14445:2398:1",
              "usedErrors": []
            }
          ],
          "src": "39:16806:1"
        },
        "id": 1
      }
    },
    "contracts": {
      "@Allcontracts/Inventory.sol": {
        "Backgrounds": {
          "abi": [
            {
              "inputs": [],
              "name": "blue",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getBlue",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "pure",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getGreen",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "pure",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getPurple",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "pure",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "green",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "purple",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "608060405234801561001057600080fd5b506107c9806100206000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c80632f1fdc3b146100675780635650d70014610085578063cffc5e381461008d578063ed18f0a714610095578063ed44cdd41461009d578063f2f1e132146100a5575b600080fd5b61006f6100ad565b60405161007c9190610173565b60405180910390f35b61006f6100d0565b61006f6100f3565b61006f610116565b61006f610135565b61006f610154565b60606040518061022001604052806101fc81526020016105c16101fc9139905090565b60606040518061022001604052806101fc81526020016103c56101fc9139905090565b60606040518061022001604052806101fc81526020016101c96101fc9139905090565b6040518061022001604052806101fc81526020016103c56101fc913981565b6040518061022001604052806101fc81526020016105c16101fc913981565b6040518061022001604052806101fc81526020016101c96101fc913981565b600060208083528351808285015260005b818110156101a057858101830151858201604001528201610184565b818111156101b2576000604083870101525b50601f01601f191692909201604001939250505056fe6956424f5277304b47676f414141414e5355684555674141414477414141413842414d4141414449307352424141414149474e49556b304141486f6d41414341684141412b6741414149446f414142314d414141366d41414144715941414158634a7936555477414141416255457855526344584c3844584c3844584c3844584c3844584c3844584c3844584c3844584c2f2f2f2f373962375049414141414864464a4f5539726f3466483438506348484252374141414141574a4c5230514968743656656741414141643053553146422b6347464167504257355044516f414141416e5355524256446a4c5932415578414f45474d7a4c38594153686e4238306d576a307150536f394b6a307150536f394c4457426f4152536b784a724e6a597063414141416c64455659644752686447553659334a6c5958526c414449774d6a4d744d4459744d6a42554d4467364d5455364d4455724d4441364d4442546d4c676f414141414a5852465748526b5958526c4f6d31765a476c6d655141794d44497a4c5441324c544977564441344f6a45314f6a41314b7a41774f6a4177497355416c41414141436830525668305a4746305a5470306157316c63335268625841414d6a41794d7930774e6930794d4651774f446f784e546f774e5373774d446f774d48585149557341414141415355564f524b35435949493d6956424f5277304b47676f414141414e5355684555674141414477414141413842414d4141414449307352424141414149474e49556b304141486f6d41414341684141412b6741414149446f414142314d414141366d41414144715941414158634a79365554774141414162554578555263666c7a73666c7a73666c7a73666c7a73666c7a73666c7a73666c7a73666c7a762f2f2f2f50464d4c67414141414864464a4f5539726f3466483438506348484252374141414141574a4c5230514968743656656741414141643053553146422b63474641674f4c367a76395a30414141416e5355524256446a4c5932415578414f45474d7a4c38594153686e4238306d576a307150536f394b6a307150536f394c4457426f4152536b784a724e6a597063414141416c64455659644752686447553659334a6c5958526c414449774d6a4d744d4459744d6a42554d4467364d5451364e4463724d4441364d4443766a387a46414141414a5852465748526b5958526c4f6d31765a476c6d655141794d44497a4c5441324c544977564441344f6a45304f6a51334b7a41774f6a417733744a306551414141436830525668305a4746305a5470306157316c63335268625841414d6a41794d7930774e6930794d4651774f446f784e446f304e7973774d446f774d496e4856615941414141415355564f524b35435949493d6956424f5277304b47676f414141414e5355684555674141414477414141413842414d4141414449307352424141414149474e49556b304141486f6d41414341684141412b6741414149446f414142314d414141366d41414144715941414158634a7936555477414141416255457855526265497662654976626549766265497662654976626549766265497662654976662f2f2f7a5a41534d51414141414864464a4f5539726f3466483438506348484252374141414141574a4c5230514968743656656741414141643053553146422b63474641674f45765348755977414141416e5355524256446a4c5932415578414f45474d7a4c38594153686e4238306d576a307150536f394b6a307150536f394c4457426f4152536b784a724e6a597063414141416c64455659644752686447553659334a6c5958526c414449774d6a4d744d4459744d6a42554d4467364d5451364d5467724d4441364d4441524a374a49414141414a5852465748526b5958526c4f6d31765a476c6d655141794d44497a4c5441324c544977564441344f6a45304f6a45344b7a41774f6a417759486f4b3941414141436830525668305a4746305a5470306157316c63335268625841414d6a41794d7930774e6930794d4651774f446f784e446f784f4373774d446f774d4464764b797341414141415355564f524b35435949493da164736f6c6343000807000a",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x7C9 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x62 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x2F1FDC3B EQ PUSH2 0x67 JUMPI DUP1 PUSH4 0x5650D700 EQ PUSH2 0x85 JUMPI DUP1 PUSH4 0xCFFC5E38 EQ PUSH2 0x8D JUMPI DUP1 PUSH4 0xED18F0A7 EQ PUSH2 0x95 JUMPI DUP1 PUSH4 0xED44CDD4 EQ PUSH2 0x9D JUMPI DUP1 PUSH4 0xF2F1E132 EQ PUSH2 0xA5 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6F PUSH2 0xAD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x7C SWAP2 SWAP1 PUSH2 0x173 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x6F PUSH2 0xD0 JUMP JUMPDEST PUSH2 0x6F PUSH2 0xF3 JUMP JUMPDEST PUSH2 0x6F PUSH2 0x116 JUMP JUMPDEST PUSH2 0x6F PUSH2 0x135 JUMP JUMPDEST PUSH2 0x6F PUSH2 0x154 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH2 0x220 ADD PUSH1 0x40 MSTORE DUP1 PUSH2 0x1FC DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x5C1 PUSH2 0x1FC SWAP2 CODECOPY SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH2 0x220 ADD PUSH1 0x40 MSTORE DUP1 PUSH2 0x1FC DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3C5 PUSH2 0x1FC SWAP2 CODECOPY SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH2 0x220 ADD PUSH1 0x40 MSTORE DUP1 PUSH2 0x1FC DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1C9 PUSH2 0x1FC SWAP2 CODECOPY SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x220 ADD PUSH1 0x40 MSTORE DUP1 PUSH2 0x1FC DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3C5 PUSH2 0x1FC SWAP2 CODECOPY DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x220 ADD PUSH1 0x40 MSTORE DUP1 PUSH2 0x1FC DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x5C1 PUSH2 0x1FC SWAP2 CODECOPY DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x220 ADD PUSH1 0x40 MSTORE DUP1 PUSH2 0x1FC DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1C9 PUSH2 0x1FC SWAP2 CODECOPY DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1A0 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x184 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x1B2 JUMPI PUSH1 0x0 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP INVALID PUSH10 0x56424F5277304B47676F COINBASE COINBASE COINBASE COINBASE 0x4E MSTORE8 SSTORE PUSH9 0x455567414141447741 COINBASE COINBASE COINBASE CODESIZE TIMESTAMP COINBASE 0x4D COINBASE COINBASE COINBASE DIFFICULTY 0x49 ADDRESS PUSH20 0x52424141414149474E49556B304141486F6D4141 NUMBER COINBASE PUSH9 0x4141412B6741414149 DIFFICULTY PUSH16 0x414142314D414141366D414141447159 COINBASE COINBASE COINBASE PC PUSH4 0x4A793655 SLOAD PUSH24 0x414141416255457855526344584C3844584C3844584C3844 PC 0x4C CODESIZE DIFFICULTY PC 0x4C CODESIZE DIFFICULTY PC 0x4C CODESIZE DIFFICULTY PC 0x4C CODESIZE DIFFICULTY PC 0x4C 0x2F 0x2F 0x2F 0x2F CALLDATACOPY CODECOPY PUSH3 0x375049 COINBASE COINBASE COINBASE COINBASE BASEFEE PUSH5 0x464A4F5539 PUSH19 0x6F346648343850634848425237414141414157 0x4A 0x4C MSTORE ADDRESS MLOAD 0x49 PUSH9 0x743656656741414141 PUSH5 0x3053553146 TIMESTAMP 0x2B PUSH4 0x47464167 POP TIMESTAMP JUMPI CALLDATALOAD POP DIFFICULTY MLOAD PUSH16 0x414141416E5355524256446A4C593241 SSTORE PUSH25 0x414F45474D7A4C38594153686E4238306D576A307150536F39 0x4B PUSH11 0x307150536F394C4457426F COINBASE MSTORE MSTORE8 PUSH12 0x784A724E6A59706341414141 PUSH13 0x64455659644752686447553659 CALLER 0x4A PUSH13 0x5958526C414449774D6A4D744D DIFFICULTY MSIZE PUSH21 0x4D6A42554D4467364D5455364D4455724D4441364D DIFFICULTY TIMESTAMP SLOAD PUSH14 0x4C676F414141414A585246574852 PUSH12 0x5958526C4F6D31765A476C6D PUSH6 0x5141794D4449 PUSH27 0x4C5441324C544977564441344F6A45314F6A41314B7A41774F6A41 PUSH24 0x497355416C41414141436830525668305A4746305A547030 PUSH2 0x5731 PUSH13 0x63335268625841414D6A41794D PUSH26 0x30774E6930794D4651774F446F784E546F774E5373774D446F77 0x4D BASEFEE PC MLOAD 0x49 SSTORE PUSH20 0x41414141415355564F524B35435949493D695642 0x4F MSTORE PUSH24 0x304B47676F414141414E5355684555674141414477414141 COINBASE CODESIZE TIMESTAMP COINBASE 0x4D COINBASE COINBASE COINBASE DIFFICULTY 0x49 ADDRESS PUSH20 0x52424141414149474E49556B304141486F6D4141 NUMBER COINBASE PUSH9 0x4141412B6741414149 DIFFICULTY PUSH16 0x414142314D414141366D414141447159 COINBASE COINBASE COINBASE PC PUSH4 0x4A793655 SLOAD PUSH24 0x4141414162554578555263666C7A73666C7A73666C7A7366 PUSH13 0x7A73666C7A73666C7A73666C7A PUSH20 0x666C7A762F2F2F2F50464D4C6741414141486446 0x4A 0x4F SSTORE CODECOPY PUSH19 0x6F346648343850634848425237414141414157 0x4A 0x4C MSTORE ADDRESS MLOAD 0x49 PUSH9 0x743656656741414141 PUSH5 0x3053553146 TIMESTAMP 0x2B PUSH4 0x47464167 0x4F 0x4C CALLDATASIZE PUSH27 0x76395A30414141416E5355524256446A4C5932415578414F45474D PUSH27 0x4C38594153686E4238306D576A307150536F394B6A307150536F39 0x4C DIFFICULTY JUMPI TIMESTAMP PUSH16 0x4152536B784A724E6A59706341414141 PUSH13 0x64455659644752686447553659 CALLER 0x4A PUSH13 0x5958526C414449774D6A4D744D DIFFICULTY MSIZE PUSH21 0x4D6A42554D4467364D5451364E4463724D4441364D DIFFICULTY NUMBER PUSH23 0x6A387A46414141414A5852465748526B5958526C4F6D31 PUSH23 0x5A476C6D655141794D44497A4C5441324C544977564441 CALLVALUE 0x4F PUSH11 0x45304F6A51334B7A41774F PUSH11 0x417733744A306551414141 NUMBER PUSH9 0x30525668305A474630 GAS SLOAD PUSH17 0x306157316C63335268625841414D6A4179 0x4D PUSH26 0x30774E6930794D4651774F446F784E446F304E7973774D446F77 0x4D 0x49 PUSH15 0x4856615941414141415355564F524B CALLDATALOAD NUMBER MSIZE 0x49 0x49 RETURNDATASIZE PUSH10 0x56424F5277304B47676F COINBASE COINBASE COINBASE COINBASE 0x4E MSTORE8 SSTORE PUSH9 0x455567414141447741 COINBASE COINBASE COINBASE CODESIZE TIMESTAMP COINBASE 0x4D COINBASE COINBASE COINBASE DIFFICULTY 0x49 ADDRESS PUSH20 0x52424141414149474E49556B304141486F6D4141 NUMBER COINBASE PUSH9 0x4141412B6741414149 DIFFICULTY PUSH16 0x414142314D414141366D414141447159 COINBASE COINBASE COINBASE PC PUSH4 0x4A793655 SLOAD PUSH24 0x414141416255457855526265497662654976626549766265 0x49 PUSH23 0x62654976626549766265497662654976662F2F2F7A5A41 MSTORE8 0x4D MLOAD COINBASE COINBASE COINBASE COINBASE BASEFEE PUSH5 0x464A4F5539 PUSH19 0x6F346648343850634848425237414141414157 0x4A 0x4C MSTORE ADDRESS MLOAD 0x49 PUSH9 0x743656656741414141 PUSH5 0x3053553146 TIMESTAMP 0x2B PUSH4 0x47464167 0x4F GASLIMIT PUSH23 0x5348755977414141416E5355524256446A4C5932415578 COINBASE 0x4F GASLIMIT SELFBALANCE 0x4D PUSH27 0x4C38594153686E4238306D576A307150536F394B6A307150536F39 0x4C DIFFICULTY JUMPI TIMESTAMP PUSH16 0x4152536B784A724E6A59706341414141 PUSH13 0x64455659644752686447553659 CALLER 0x4A PUSH13 0x5958526C414449774D6A4D744D DIFFICULTY MSIZE PUSH21 0x4D6A42554D4467364D5451364D5467724D4441364D DIFFICULTY COINBASE MSTORE 0x4A CALLDATACOPY 0x4A 0x49 COINBASE COINBASE COINBASE COINBASE 0x4A PC MSTORE CHAINID JUMPI BASEFEE MSTORE PUSH12 0x5958526C4F6D31765A476C6D PUSH6 0x5141794D4449 PUSH27 0x4C5441324C544977564441344F6A45304F6A45344B7A41774F6A41 PUSH24 0x59486F4B3941414141436830525668305A4746305A547030 PUSH2 0x5731 PUSH13 0x63335268625841414D6A41794D PUSH26 0x30774E6930794D4651774F446F784E446F784F4373774D446F77 0x4D DIFFICULTY PUSH5 0x764B797341 COINBASE COINBASE COINBASE COINBASE MSTORE8 SSTORE JUMP 0x4F MSTORE 0x4B CALLDATALOAD NUMBER MSIZE 0x49 0x49 RETURNDATASIZE LOG1 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP EXP ",
              "sourceMap": "74:1954:0:-:0;;;;;;;;;;;;;;;;;;;"
            },
            "deployedBytecode": {
              "functionDebugData": {
                "@blue_4": {
                  "entryPoint": 278,
                  "id": 4,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@getBlue_18": {
                  "entryPoint": 208,
                  "id": 18,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "@getGreen_34": {
                  "entryPoint": 243,
                  "id": 34,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "@getPurple_26": {
                  "entryPoint": 173,
                  "id": 26,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "@green_10": {
                  "entryPoint": 340,
                  "id": 10,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@purple_7": {
                  "entryPoint": 309,
                  "id": 7,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
                  "entryPoint": 371,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                }
              },
              "generatedSources": [
                {
                  "ast": {
                    "nodeType": "YulBlock",
                    "src": "0:613:2",
                    "statements": [
                      {
                        "nodeType": "YulBlock",
                        "src": "6:3:2",
                        "statements": []
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "135:476:2",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "145:12:2",
                              "value": {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "155:2:2",
                                "type": "",
                                "value": "32"
                              },
                              "variables": [
                                {
                                  "name": "_1",
                                  "nodeType": "YulTypedName",
                                  "src": "149:2:2",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "173:9:2"
                                  },
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "184:2:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "166:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "166:21:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "166:21:2"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "196:27:2",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "216:6:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "210:5:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "210:13:2"
                              },
                              "variables": [
                                {
                                  "name": "length",
                                  "nodeType": "YulTypedName",
                                  "src": "200:6:2",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "243:9:2"
                                      },
                                      {
                                        "name": "_1",
                                        "nodeType": "YulIdentifier",
                                        "src": "254:2:2"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "239:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "239:18:2"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "259:6:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "232:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "232:34:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "232:34:2"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "275:10:2",
                              "value": {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "284:1:2",
                                "type": "",
                                "value": "0"
                              },
                              "variables": [
                                {
                                  "name": "i",
                                  "nodeType": "YulTypedName",
                                  "src": "279:1:2",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "344:90:2",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "arguments": [
                                                {
                                                  "name": "headStart",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "373:9:2"
                                                },
                                                {
                                                  "name": "i",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "384:1:2"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "add",
                                                "nodeType": "YulIdentifier",
                                                "src": "369:3:2"
                                              },
                                              "nodeType": "YulFunctionCall",
                                              "src": "369:17:2"
                                            },
                                            {
                                              "kind": "number",
                                              "nodeType": "YulLiteral",
                                              "src": "388:2:2",
                                              "type": "",
                                              "value": "64"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "add",
                                            "nodeType": "YulIdentifier",
                                            "src": "365:3:2"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "365:26:2"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "arguments": [
                                                {
                                                  "arguments": [
                                                    {
                                                      "name": "value0",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "407:6:2"
                                                    },
                                                    {
                                                      "name": "i",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "415:1:2"
                                                    }
                                                  ],
                                                  "functionName": {
                                                    "name": "add",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "403:3:2"
                                                  },
                                                  "nodeType": "YulFunctionCall",
                                                  "src": "403:14:2"
                                                },
                                                {
                                                  "name": "_1",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "419:2:2"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "add",
                                                "nodeType": "YulIdentifier",
                                                "src": "399:3:2"
                                              },
                                              "nodeType": "YulFunctionCall",
                                              "src": "399:23:2"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "mload",
                                            "nodeType": "YulIdentifier",
                                            "src": "393:5:2"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "393:30:2"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "358:6:2"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "358:66:2"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "358:66:2"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "i",
                                    "nodeType": "YulIdentifier",
                                    "src": "305:1:2"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "308:6:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "lt",
                                  "nodeType": "YulIdentifier",
                                  "src": "302:2:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "302:13:2"
                              },
                              "nodeType": "YulForLoop",
                              "post": {
                                "nodeType": "YulBlock",
                                "src": "316:19:2",
                                "statements": [
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "318:15:2",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "i",
                                          "nodeType": "YulIdentifier",
                                          "src": "327:1:2"
                                        },
                                        {
                                          "name": "_1",
                                          "nodeType": "YulIdentifier",
                                          "src": "330:2:2"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "323:3:2"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "323:10:2"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "i",
                                        "nodeType": "YulIdentifier",
                                        "src": "318:1:2"
                                      }
                                    ]
                                  }
                                ]
                              },
                              "pre": {
                                "nodeType": "YulBlock",
                                "src": "298:3:2",
                                "statements": []
                              },
                              "src": "294:140:2"
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "468:66:2",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "arguments": [
                                                {
                                                  "name": "headStart",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "497:9:2"
                                                },
                                                {
                                                  "name": "length",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "508:6:2"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "add",
                                                "nodeType": "YulIdentifier",
                                                "src": "493:3:2"
                                              },
                                              "nodeType": "YulFunctionCall",
                                              "src": "493:22:2"
                                            },
                                            {
                                              "kind": "number",
                                              "nodeType": "YulLiteral",
                                              "src": "517:2:2",
                                              "type": "",
                                              "value": "64"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "add",
                                            "nodeType": "YulIdentifier",
                                            "src": "489:3:2"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "489:31:2"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "522:1:2",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "482:6:2"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "482:42:2"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "482:42:2"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "i",
                                    "nodeType": "YulIdentifier",
                                    "src": "449:1:2"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "452:6:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "446:2:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "446:13:2"
                              },
                              "nodeType": "YulIf",
                              "src": "443:91:2"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "543:62:2",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "559:9:2"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "name": "length",
                                                "nodeType": "YulIdentifier",
                                                "src": "578:6:2"
                                              },
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "586:2:2",
                                                "type": "",
                                                "value": "31"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "add",
                                              "nodeType": "YulIdentifier",
                                              "src": "574:3:2"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "574:15:2"
                                          },
                                          {
                                            "arguments": [
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "595:2:2",
                                                "type": "",
                                                "value": "31"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "not",
                                              "nodeType": "YulIdentifier",
                                              "src": "591:3:2"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "591:7:2"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "and",
                                          "nodeType": "YulIdentifier",
                                          "src": "570:3:2"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "570:29:2"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "555:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "555:45:2"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "602:2:2",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "551:3:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "551:54:2"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "543:4:2"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "104:9:2",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "115:6:2",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "126:4:2",
                            "type": ""
                          }
                        ],
                        "src": "14:597:2"
                      }
                    ]
                  },
                  "contents": "{\n    { }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, _1)\n        let length := mload(value0)\n        mstore(add(headStart, _1), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        if gt(i, length)\n        {\n            mstore(add(add(headStart, length), 64), 0)\n        }\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n}",
                  "id": 2,
                  "language": "Yul",
                  "name": "#utility.yul"
                }
              ],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "608060405234801561001057600080fd5b50600436106100625760003560e01c80632f1fdc3b146100675780635650d70014610085578063cffc5e381461008d578063ed18f0a714610095578063ed44cdd41461009d578063f2f1e132146100a5575b600080fd5b61006f6100ad565b60405161007c9190610173565b60405180910390f35b61006f6100d0565b61006f6100f3565b61006f610116565b61006f610135565b61006f610154565b60606040518061022001604052806101fc81526020016105c16101fc9139905090565b60606040518061022001604052806101fc81526020016103c56101fc9139905090565b60606040518061022001604052806101fc81526020016101c96101fc9139905090565b6040518061022001604052806101fc81526020016103c56101fc913981565b6040518061022001604052806101fc81526020016105c16101fc913981565b6040518061022001604052806101fc81526020016101c96101fc913981565b600060208083528351808285015260005b818110156101a057858101830151858201604001528201610184565b818111156101b2576000604083870101525b50601f01601f191692909201604001939250505056fe6956424f5277304b47676f414141414e5355684555674141414477414141413842414d4141414449307352424141414149474e49556b304141486f6d41414341684141412b6741414149446f414142314d414141366d41414144715941414158634a7936555477414141416255457855526344584c3844584c3844584c3844584c3844584c3844584c3844584c3844584c2f2f2f2f373962375049414141414864464a4f5539726f3466483438506348484252374141414141574a4c5230514968743656656741414141643053553146422b6347464167504257355044516f414141416e5355524256446a4c5932415578414f45474d7a4c38594153686e4238306d576a307150536f394b6a307150536f394c4457426f4152536b784a724e6a597063414141416c64455659644752686447553659334a6c5958526c414449774d6a4d744d4459744d6a42554d4467364d5455364d4455724d4441364d4442546d4c676f414141414a5852465748526b5958526c4f6d31765a476c6d655141794d44497a4c5441324c544977564441344f6a45314f6a41314b7a41774f6a4177497355416c41414141436830525668305a4746305a5470306157316c63335268625841414d6a41794d7930774e6930794d4651774f446f784e546f774e5373774d446f774d48585149557341414141415355564f524b35435949493d6956424f5277304b47676f414141414e5355684555674141414477414141413842414d4141414449307352424141414149474e49556b304141486f6d41414341684141412b6741414149446f414142314d414141366d41414144715941414158634a79365554774141414162554578555263666c7a73666c7a73666c7a73666c7a73666c7a73666c7a73666c7a73666c7a762f2f2f2f50464d4c67414141414864464a4f5539726f3466483438506348484252374141414141574a4c5230514968743656656741414141643053553146422b63474641674f4c367a76395a30414141416e5355524256446a4c5932415578414f45474d7a4c38594153686e4238306d576a307150536f394b6a307150536f394c4457426f4152536b784a724e6a597063414141416c64455659644752686447553659334a6c5958526c414449774d6a4d744d4459744d6a42554d4467364d5451364e4463724d4441364d4443766a387a46414141414a5852465748526b5958526c4f6d31765a476c6d655141794d44497a4c5441324c544977564441344f6a45304f6a51334b7a41774f6a417733744a306551414141436830525668305a4746305a5470306157316c63335268625841414d6a41794d7930774e6930794d4651774f446f784e446f304e7973774d446f774d496e4856615941414141415355564f524b35435949493d6956424f5277304b47676f414141414e5355684555674141414477414141413842414d4141414449307352424141414149474e49556b304141486f6d41414341684141412b6741414149446f414142314d414141366d41414144715941414158634a7936555477414141416255457855526265497662654976626549766265497662654976626549766265497662654976662f2f2f7a5a41534d51414141414864464a4f5539726f3466483438506348484252374141414141574a4c5230514968743656656741414141643053553146422b63474641674f45765348755977414141416e5355524256446a4c5932415578414f45474d7a4c38594153686e4238306d576a307150536f394b6a307150536f394c4457426f4152536b784a724e6a597063414141416c64455659644752686447553659334a6c5958526c414449774d6a4d744d4459744d6a42554d4467364d5451364d5467724d4441364d4441524a374a49414141414a5852465748526b5958526c4f6d31765a476c6d655141794d44497a4c5441324c544977564441344f6a45304f6a45344b7a41774f6a417759486f4b3941414141436830525668305a4746305a5470306157316c63335268625841414d6a41794d7930774e6930794d4651774f446f784e446f784f4373774d446f774d4464764b797341414141415355564f524b35435949493da164736f6c6343000807000a",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x62 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x2F1FDC3B EQ PUSH2 0x67 JUMPI DUP1 PUSH4 0x5650D700 EQ PUSH2 0x85 JUMPI DUP1 PUSH4 0xCFFC5E38 EQ PUSH2 0x8D JUMPI DUP1 PUSH4 0xED18F0A7 EQ PUSH2 0x95 JUMPI DUP1 PUSH4 0xED44CDD4 EQ PUSH2 0x9D JUMPI DUP1 PUSH4 0xF2F1E132 EQ PUSH2 0xA5 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6F PUSH2 0xAD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x7C SWAP2 SWAP1 PUSH2 0x173 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x6F PUSH2 0xD0 JUMP JUMPDEST PUSH2 0x6F PUSH2 0xF3 JUMP JUMPDEST PUSH2 0x6F PUSH2 0x116 JUMP JUMPDEST PUSH2 0x6F PUSH2 0x135 JUMP JUMPDEST PUSH2 0x6F PUSH2 0x154 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH2 0x220 ADD PUSH1 0x40 MSTORE DUP1 PUSH2 0x1FC DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x5C1 PUSH2 0x1FC SWAP2 CODECOPY SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH2 0x220 ADD PUSH1 0x40 MSTORE DUP1 PUSH2 0x1FC DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3C5 PUSH2 0x1FC SWAP2 CODECOPY SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH2 0x220 ADD PUSH1 0x40 MSTORE DUP1 PUSH2 0x1FC DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1C9 PUSH2 0x1FC SWAP2 CODECOPY SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x220 ADD PUSH1 0x40 MSTORE DUP1 PUSH2 0x1FC DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3C5 PUSH2 0x1FC SWAP2 CODECOPY DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x220 ADD PUSH1 0x40 MSTORE DUP1 PUSH2 0x1FC DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x5C1 PUSH2 0x1FC SWAP2 CODECOPY DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x220 ADD PUSH1 0x40 MSTORE DUP1 PUSH2 0x1FC DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1C9 PUSH2 0x1FC SWAP2 CODECOPY DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1A0 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x184 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x1B2 JUMPI PUSH1 0x0 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP INVALID PUSH10 0x56424F5277304B47676F COINBASE COINBASE COINBASE COINBASE 0x4E MSTORE8 SSTORE PUSH9 0x455567414141447741 COINBASE COINBASE COINBASE CODESIZE TIMESTAMP COINBASE 0x4D COINBASE COINBASE COINBASE DIFFICULTY 0x49 ADDRESS PUSH20 0x52424141414149474E49556B304141486F6D4141 NUMBER COINBASE PUSH9 0x4141412B6741414149 DIFFICULTY PUSH16 0x414142314D414141366D414141447159 COINBASE COINBASE COINBASE PC PUSH4 0x4A793655 SLOAD PUSH24 0x414141416255457855526344584C3844584C3844584C3844 PC 0x4C CODESIZE DIFFICULTY PC 0x4C CODESIZE DIFFICULTY PC 0x4C CODESIZE DIFFICULTY PC 0x4C CODESIZE DIFFICULTY PC 0x4C 0x2F 0x2F 0x2F 0x2F CALLDATACOPY CODECOPY PUSH3 0x375049 COINBASE COINBASE COINBASE COINBASE BASEFEE PUSH5 0x464A4F5539 PUSH19 0x6F346648343850634848425237414141414157 0x4A 0x4C MSTORE ADDRESS MLOAD 0x49 PUSH9 0x743656656741414141 PUSH5 0x3053553146 TIMESTAMP 0x2B PUSH4 0x47464167 POP TIMESTAMP JUMPI CALLDATALOAD POP DIFFICULTY MLOAD PUSH16 0x414141416E5355524256446A4C593241 SSTORE PUSH25 0x414F45474D7A4C38594153686E4238306D576A307150536F39 0x4B PUSH11 0x307150536F394C4457426F COINBASE MSTORE MSTORE8 PUSH12 0x784A724E6A59706341414141 PUSH13 0x64455659644752686447553659 CALLER 0x4A PUSH13 0x5958526C414449774D6A4D744D DIFFICULTY MSIZE PUSH21 0x4D6A42554D4467364D5455364D4455724D4441364D DIFFICULTY TIMESTAMP SLOAD PUSH14 0x4C676F414141414A585246574852 PUSH12 0x5958526C4F6D31765A476C6D PUSH6 0x5141794D4449 PUSH27 0x4C5441324C544977564441344F6A45314F6A41314B7A41774F6A41 PUSH24 0x497355416C41414141436830525668305A4746305A547030 PUSH2 0x5731 PUSH13 0x63335268625841414D6A41794D PUSH26 0x30774E6930794D4651774F446F784E546F774E5373774D446F77 0x4D BASEFEE PC MLOAD 0x49 SSTORE PUSH20 0x41414141415355564F524B35435949493D695642 0x4F MSTORE PUSH24 0x304B47676F414141414E5355684555674141414477414141 COINBASE CODESIZE TIMESTAMP COINBASE 0x4D COINBASE COINBASE COINBASE DIFFICULTY 0x49 ADDRESS PUSH20 0x52424141414149474E49556B304141486F6D4141 NUMBER COINBASE PUSH9 0x4141412B6741414149 DIFFICULTY PUSH16 0x414142314D414141366D414141447159 COINBASE COINBASE COINBASE PC PUSH4 0x4A793655 SLOAD PUSH24 0x4141414162554578555263666C7A73666C7A73666C7A7366 PUSH13 0x7A73666C7A73666C7A73666C7A PUSH20 0x666C7A762F2F2F2F50464D4C6741414141486446 0x4A 0x4F SSTORE CODECOPY PUSH19 0x6F346648343850634848425237414141414157 0x4A 0x4C MSTORE ADDRESS MLOAD 0x49 PUSH9 0x743656656741414141 PUSH5 0x3053553146 TIMESTAMP 0x2B PUSH4 0x47464167 0x4F 0x4C CALLDATASIZE PUSH27 0x76395A30414141416E5355524256446A4C5932415578414F45474D PUSH27 0x4C38594153686E4238306D576A307150536F394B6A307150536F39 0x4C DIFFICULTY JUMPI TIMESTAMP PUSH16 0x4152536B784A724E6A59706341414141 PUSH13 0x64455659644752686447553659 CALLER 0x4A PUSH13 0x5958526C414449774D6A4D744D DIFFICULTY MSIZE PUSH21 0x4D6A42554D4467364D5451364E4463724D4441364D DIFFICULTY NUMBER PUSH23 0x6A387A46414141414A5852465748526B5958526C4F6D31 PUSH23 0x5A476C6D655141794D44497A4C5441324C544977564441 CALLVALUE 0x4F PUSH11 0x45304F6A51334B7A41774F PUSH11 0x417733744A306551414141 NUMBER PUSH9 0x30525668305A474630 GAS SLOAD PUSH17 0x306157316C63335268625841414D6A4179 0x4D PUSH26 0x30774E6930794D4651774F446F784E446F304E7973774D446F77 0x4D 0x49 PUSH15 0x4856615941414141415355564F524B CALLDATALOAD NUMBER MSIZE 0x49 0x49 RETURNDATASIZE PUSH10 0x56424F5277304B47676F COINBASE COINBASE COINBASE COINBASE 0x4E MSTORE8 SSTORE PUSH9 0x455567414141447741 COINBASE COINBASE COINBASE CODESIZE TIMESTAMP COINBASE 0x4D COINBASE COINBASE COINBASE DIFFICULTY 0x49 ADDRESS PUSH20 0x52424141414149474E49556B304141486F6D4141 NUMBER COINBASE PUSH9 0x4141412B6741414149 DIFFICULTY PUSH16 0x414142314D414141366D414141447159 COINBASE COINBASE COINBASE PC PUSH4 0x4A793655 SLOAD PUSH24 0x414141416255457855526265497662654976626549766265 0x49 PUSH23 0x62654976626549766265497662654976662F2F2F7A5A41 MSTORE8 0x4D MLOAD COINBASE COINBASE COINBASE COINBASE BASEFEE PUSH5 0x464A4F5539 PUSH19 0x6F346648343850634848425237414141414157 0x4A 0x4C MSTORE ADDRESS MLOAD 0x49 PUSH9 0x743656656741414141 PUSH5 0x3053553146 TIMESTAMP 0x2B PUSH4 0x47464167 0x4F GASLIMIT PUSH23 0x5348755977414141416E5355524256446A4C5932415578 COINBASE 0x4F GASLIMIT SELFBALANCE 0x4D PUSH27 0x4C38594153686E4238306D576A307150536F394B6A307150536F39 0x4C DIFFICULTY JUMPI TIMESTAMP PUSH16 0x4152536B784A724E6A59706341414141 PUSH13 0x64455659644752686447553659 CALLER 0x4A PUSH13 0x5958526C414449774D6A4D744D DIFFICULTY MSIZE PUSH21 0x4D6A42554D4467364D5451364D5467724D4441364D DIFFICULTY COINBASE MSTORE 0x4A CALLDATACOPY 0x4A 0x49 COINBASE COINBASE COINBASE COINBASE 0x4A PC MSTORE CHAINID JUMPI BASEFEE MSTORE PUSH12 0x5958526C4F6D31765A476C6D PUSH6 0x5141794D4449 PUSH27 0x4C5441324C544977564441344F6A45304F6A45344B7A41774F6A41 PUSH24 0x59486F4B3941414141436830525668305A4746305A547030 PUSH2 0x5731 PUSH13 0x63335268625841414D6A41794D PUSH26 0x30774E6930794D4651774F446F784E446F784F4373774D446F77 0x4D DIFFICULTY PUSH5 0x764B797341 COINBASE COINBASE COINBASE COINBASE MSTORE8 SSTORE JUMP 0x4F MSTORE 0x4B CALLDATALOAD NUMBER MSIZE 0x49 0x49 RETURNDATASIZE LOG1 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP EXP ",
              "sourceMap": "74:1954:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1841:89;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1748:85;;;:::i;1938:87::-;;;:::i;102:540::-;;;:::i;649:542::-;;;:::i;1198:541::-;;;:::i;1841:89::-;1883:13;1916:6;;;;;;;;;;;;;;;;;1909:13;;1841:89;:::o;1748:85::-;1788:13;1821:4;;;;;;;;;;;;;;;;;1814:11;;1748:85;:::o;1938:87::-;1979:13;2012:5;;;;;;;;;;;;;;;;;2005:12;;1938:87;:::o;102:540::-;;;;;;;;;;;;;;;;;;;:::o;649:542::-;;;;;;;;;;;;;;;;;;;:::o;1198:541::-;;;;;;;;;;;;;;;;;;;:::o;14:597:2:-;126:4;155:2;184;173:9;166:21;216:6;210:13;259:6;254:2;243:9;239:18;232:34;284:1;294:140;308:6;305:1;302:13;294:140;;;403:14;;;399:23;;393:30;369:17;;;388:2;365:26;358:66;323:10;;294:140;;;452:6;449:1;446:13;443:91;;;522:1;517:2;508:6;497:9;493:22;489:31;482:42;443:91;-1:-1:-1;595:2:2;574:15;-1:-1:-1;;570:29:2;555:45;;;;602:2;551:54;;14:597;-1:-1:-1;;;14:597:2:o"
            },
            "methodIdentifiers": {
              "blue()": "ed18f0a7",
              "getBlue()": "5650d700",
              "getGreen()": "cffc5e38",
              "getPurple()": "2f1fdc3b",
              "green()": "f2f1e132",
              "purple()": "ed44cdd4"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"blue\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBlue\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getGreen\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPurple\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"green\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"purple\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@Allcontracts/Inventory.sol\":\"Backgrounds\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":25},\"remappings\":[]},\"sources\":{\"@Allcontracts/Inventory.sol\":{\"keccak256\":\"0x66c19721ac9af209a955d9063975d0a5247d2970cdea1109c1278b2ebadffd7e\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://e6b7b3fc65f0de45e18ce6196255dcc5c66df0d6f6ee7bb7fc7ae3da6bedc873\",\"dweb:/ipfs/QmTBAqdf2y6N8dDAVCR5yWZiFyn5kFefaFFfFgRXiKeQwD\"]}},\"version\":1}"
        },
        "Hands": {
          "abi": [
            {
              "inputs": [],
              "name": "blue_slime",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "bubble_gum",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "cosmic",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getBlueSlime",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "pure",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getBubbleGum",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "pure",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getCosmic",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "pure",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getGorilla",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "pure",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getGreenGoblin",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "pure",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getGreenSlime",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "pure",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getHand1",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "pure",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getHand2",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "pure",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getHand3",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "pure",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getHand4",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "pure",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getPirate",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "pure",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getPlastic",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "pure",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getRedGoblin",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "pure",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getSkeleton",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "pure",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getSnowTiger",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "pure",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getSquatch",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "pure",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getSteve",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "pure",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getSully",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "pure",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getTiger",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "pure",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getVitiligo",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "pure",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getYellowGoblin",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "pure",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getYeti",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "pure",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getZombie",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "pure",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "gorilla",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "green_goblin",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "green_slime",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "pirate",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "plastic",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "red_goblin",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "skeleton",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "skin_tone_1",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "skin_tone_2",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "skin_tone_3",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "skin_tone_4",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "snow_tiger",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "squatch",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "steve",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "sully",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "tiger",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "vitiligo",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "yellow_goblin",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "yeti",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "zombie",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x46A9 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x22A JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x85EAD00A GT PUSH2 0x12C JUMPI DUP1 PUSH4 0x85EAD00A EQ PUSH2 0x2FD JUMPI DUP1 PUSH4 0x888A0B77 EQ PUSH2 0x305 JUMPI DUP1 PUSH4 0x8A99B7FB EQ PUSH2 0x30D JUMPI DUP1 PUSH4 0x8E4F449B EQ PUSH2 0x315 JUMPI DUP1 PUSH4 0x96B678A4 EQ PUSH2 0x31D JUMPI DUP1 PUSH4 0x99726EC2 EQ PUSH2 0x325 JUMPI DUP1 PUSH4 0x9B45D56D EQ PUSH2 0x32D JUMPI DUP1 PUSH4 0x9E15F495 EQ PUSH2 0x335 JUMPI DUP1 PUSH4 0xA1B9BB53 EQ PUSH2 0x33D JUMPI DUP1 PUSH4 0xA592A451 EQ PUSH2 0x345 JUMPI DUP1 PUSH4 0xAC81D87B EQ PUSH2 0x34D JUMPI DUP1 PUSH4 0xB3F22AF2 EQ PUSH2 0x355 JUMPI DUP1 PUSH4 0xC305B2B2 EQ PUSH2 0x35D JUMPI DUP1 PUSH4 0xC63FB76F EQ PUSH2 0x365 JUMPI DUP1 PUSH4 0xC7C866B2 EQ PUSH2 0x36D JUMPI DUP1 PUSH4 0xD54807E7 EQ PUSH2 0x375 JUMPI DUP1 PUSH4 0xDA2643BC EQ PUSH2 0x37D JUMPI DUP1 PUSH4 0xE6595F42 EQ PUSH2 0x385 JUMPI DUP1 PUSH4 0xE7D01D7A EQ PUSH2 0x38D JUMPI DUP1 PUSH4 0xECC53B5E EQ PUSH2 0x395 JUMPI DUP1 PUSH4 0xECDE9067 EQ PUSH2 0x39D JUMPI DUP1 PUSH4 0xED6F1156 EQ PUSH2 0x3A5 JUMPI DUP1 PUSH4 0xFBE154BB EQ PUSH2 0x3AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x20A41BE EQ PUSH2 0x22F JUMPI DUP1 PUSH4 0x6756729 EQ PUSH2 0x24D JUMPI DUP1 PUSH4 0x80576E1 EQ PUSH2 0x255 JUMPI DUP1 PUSH4 0xE2A8038 EQ PUSH2 0x25D JUMPI DUP1 PUSH4 0xF114E0C EQ PUSH2 0x265 JUMPI DUP1 PUSH4 0x15C466A6 EQ PUSH2 0x26D JUMPI DUP1 PUSH4 0x1E7B565B EQ PUSH2 0x275 JUMPI DUP1 PUSH4 0x233AB6B6 EQ PUSH2 0x27D JUMPI DUP1 PUSH4 0x240CF269 EQ PUSH2 0x285 JUMPI DUP1 PUSH4 0x2817E5BE EQ PUSH2 0x28D JUMPI DUP1 PUSH4 0x32E8E544 EQ PUSH2 0x295 JUMPI DUP1 PUSH4 0x343E613A EQ PUSH2 0x29D JUMPI DUP1 PUSH4 0x34739B2A EQ PUSH2 0x2A5 JUMPI DUP1 PUSH4 0x43CF51FF EQ PUSH2 0x2AD JUMPI DUP1 PUSH4 0x44D333FF EQ PUSH2 0x2B5 JUMPI DUP1 PUSH4 0x45AAD66D EQ PUSH2 0x2BD JUMPI DUP1 PUSH4 0x4E9E4CFA EQ PUSH2 0x2C5 JUMPI DUP1 PUSH4 0x5408E269 EQ PUSH2 0x2CD JUMPI DUP1 PUSH4 0x557DD064 EQ PUSH2 0x2D5 JUMPI DUP1 PUSH4 0x6941464F EQ PUSH2 0x2DD JUMPI DUP1 PUSH4 0x697E9262 EQ PUSH2 0x2E5 JUMPI DUP1 PUSH4 0x7F478D38 EQ PUSH2 0x2ED JUMPI DUP1 PUSH4 0x832E548A EQ PUSH2 0x2F5 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x237 PUSH2 0x3B5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x244 SWAP2 SWAP1 PUSH2 0x9A3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x237 PUSH2 0x3D8 JUMP JUMPDEST PUSH2 0x237 PUSH2 0x3FB JUMP JUMPDEST PUSH2 0x237 PUSH2 0x41E JUMP JUMPDEST PUSH2 0x237 PUSH2 0x43D JUMP JUMPDEST PUSH2 0x237 PUSH2 0x45C JUMP JUMPDEST PUSH2 0x237 PUSH2 0x47B JUMP JUMPDEST PUSH2 0x237 PUSH2 0x49E JUMP JUMPDEST PUSH2 0x237 PUSH2 0x4BD JUMP JUMPDEST PUSH2 0x237 PUSH2 0x4E0 JUMP JUMPDEST PUSH2 0x237 PUSH2 0x503 JUMP JUMPDEST PUSH2 0x237 PUSH2 0x526 JUMP JUMPDEST PUSH2 0x237 PUSH2 0x545 JUMP JUMPDEST PUSH2 0x237 PUSH2 0x568 JUMP JUMPDEST PUSH2 0x237 PUSH2 0x587 JUMP JUMPDEST PUSH2 0x237 PUSH2 0x5A6 JUMP JUMPDEST PUSH2 0x237 PUSH2 0x5C5 JUMP JUMPDEST PUSH2 0x237 PUSH2 0x5E4 JUMP JUMPDEST PUSH2 0x237 PUSH2 0x603 JUMP JUMPDEST PUSH2 0x237 PUSH2 0x626 JUMP JUMPDEST PUSH2 0x237 PUSH2 0x649 JUMP JUMPDEST PUSH2 0x237 PUSH2 0x668 JUMP JUMPDEST PUSH2 0x237 PUSH2 0x687 JUMP JUMPDEST PUSH2 0x237 PUSH2 0x6A6 JUMP JUMPDEST PUSH2 0x237 PUSH2 0x6C5 JUMP JUMPDEST PUSH2 0x237 PUSH2 0x6E8 JUMP JUMPDEST PUSH2 0x237 PUSH2 0x70B JUMP JUMPDEST PUSH2 0x237 PUSH2 0x72E JUMP JUMPDEST PUSH2 0x237 PUSH2 0x74D JUMP JUMPDEST PUSH2 0x237 PUSH2 0x770 JUMP JUMPDEST PUSH2 0x237 PUSH2 0x793 JUMP JUMPDEST PUSH2 0x237 PUSH2 0x7B6 JUMP JUMPDEST PUSH2 0x237 PUSH2 0x7D5 JUMP JUMPDEST PUSH2 0x237 PUSH2 0x7F8 JUMP JUMPDEST PUSH2 0x237 PUSH2 0x817 JUMP JUMPDEST PUSH2 0x237 PUSH2 0x83A JUMP JUMPDEST PUSH2 0x237 PUSH2 0x85D JUMP JUMPDEST PUSH2 0x237 PUSH2 0x87C JUMP JUMPDEST PUSH2 0x237 PUSH2 0x89B JUMP JUMPDEST PUSH2 0x237 PUSH2 0x8BA JUMP JUMPDEST PUSH2 0x237 PUSH2 0x8D9 JUMP JUMPDEST PUSH2 0x237 PUSH2 0x8FC JUMP JUMPDEST PUSH2 0x237 PUSH2 0x91F JUMP JUMPDEST PUSH2 0x237 PUSH2 0x93E JUMP JUMPDEST PUSH2 0x237 PUSH2 0x961 JUMP JUMPDEST PUSH2 0x237 PUSH2 0x980 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH2 0x2C0 ADD PUSH1 0x40 MSTORE DUP1 PUSH2 0x290 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x440D PUSH2 0x290 SWAP2 CODECOPY SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH2 0x260 ADD PUSH1 0x40 MSTORE DUP1 PUSH2 0x230 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3569 PUSH2 0x230 SWAP2 CODECOPY SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH2 0x2A0 ADD PUSH1 0x40 MSTORE DUP1 PUSH2 0x278 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x14B1 PUSH2 0x278 SWAP2 CODECOPY SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x360 ADD PUSH1 0x40 MSTORE DUP1 PUSH2 0x330 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xF4D PUSH2 0x330 SWAP2 CODECOPY DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x220 ADD PUSH1 0x40 MSTORE DUP1 PUSH2 0x1FC DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1729 PUSH2 0x1FC SWAP2 CODECOPY DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x2E0 ADD PUSH1 0x40 MSTORE DUP1 PUSH2 0x2BC DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1BDD PUSH2 0x2BC SWAP2 CODECOPY DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH2 0x2A0 ADD PUSH1 0x40 MSTORE DUP1 PUSH2 0x270 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3CDD PUSH2 0x270 SWAP2 CODECOPY SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x2C0 ADD PUSH1 0x40 MSTORE DUP1 PUSH2 0x290 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x440D PUSH2 0x290 SWAP2 CODECOPY DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH2 0x220 ADD PUSH1 0x40 MSTORE DUP1 PUSH2 0x1FC DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1729 PUSH2 0x1FC SWAP2 CODECOPY SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH2 0x360 ADD PUSH1 0x40 MSTORE DUP1 PUSH2 0x32C DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x323D PUSH2 0x32C SWAP2 CODECOPY SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH2 0x360 ADD PUSH1 0x40 MSTORE DUP1 PUSH2 0x330 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xF4D PUSH2 0x330 SWAP2 CODECOPY SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x300 ADD PUSH1 0x40 MSTORE DUP1 PUSH2 0x2DC DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x9F9 PUSH2 0x2DC SWAP2 CODECOPY DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH2 0x2C0 ADD PUSH1 0x40 MSTORE DUP1 PUSH2 0x290 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x417D PUSH2 0x290 SWAP2 CODECOPY SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x300 ADD PUSH1 0x40 MSTORE DUP1 PUSH2 0x2DC DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x234D PUSH2 0x2DC SWAP2 CODECOPY DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x380 ADD PUSH1 0x40 MSTORE DUP1 PUSH2 0x360 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x29D1 PUSH2 0x360 SWAP2 CODECOPY DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x2E0 ADD PUSH1 0x40 MSTORE DUP1 PUSH2 0x2B8 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1925 PUSH2 0x2B8 SWAP2 CODECOPY DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x360 ADD PUSH1 0x40 MSTORE DUP1 PUSH2 0x32C DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x323D PUSH2 0x32C SWAP2 CODECOPY DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x2A0 ADD PUSH1 0x40 MSTORE DUP1 PUSH2 0x278 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xCD5 PUSH2 0x278 SWAP2 CODECOPY DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH2 0x2C0 ADD PUSH1 0x40 MSTORE DUP1 PUSH2 0x290 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3A4D PUSH2 0x290 SWAP2 CODECOPY SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH2 0x300 ADD PUSH1 0x40 MSTORE DUP1 PUSH2 0x2DC DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x9F9 PUSH2 0x2DC SWAP2 CODECOPY SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x2E0 ADD PUSH1 0x40 MSTORE DUP1 PUSH2 0x2B4 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3799 PUSH2 0x2B4 SWAP2 CODECOPY DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x260 ADD PUSH1 0x40 MSTORE DUP1 PUSH2 0x234 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1E99 PUSH2 0x234 SWAP2 CODECOPY DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x2C0 ADD PUSH1 0x40 MSTORE DUP1 PUSH2 0x290 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x417D PUSH2 0x290 SWAP2 CODECOPY DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x2A0 ADD PUSH1 0x40 MSTORE DUP1 PUSH2 0x278 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x14B1 PUSH2 0x278 SWAP2 CODECOPY DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH2 0x260 ADD PUSH1 0x40 MSTORE DUP1 PUSH2 0x234 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1E99 PUSH2 0x234 SWAP2 CODECOPY SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH2 0x260 ADD PUSH1 0x40 MSTORE DUP1 PUSH2 0x234 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x127D PUSH2 0x234 SWAP2 CODECOPY SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH2 0x2A0 ADD PUSH1 0x40 MSTORE DUP1 PUSH2 0x278 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xCD5 PUSH2 0x278 SWAP2 CODECOPY SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x260 ADD PUSH1 0x40 MSTORE DUP1 PUSH2 0x230 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3F4D PUSH2 0x230 SWAP2 CODECOPY DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH2 0x2E0 ADD PUSH1 0x40 MSTORE DUP1 PUSH2 0x2BC DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1BDD PUSH2 0x2BC SWAP2 CODECOPY SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH2 0x260 ADD PUSH1 0x40 MSTORE DUP1 PUSH2 0x230 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3F4D PUSH2 0x230 SWAP2 CODECOPY SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH2 0x300 ADD PUSH1 0x40 MSTORE DUP1 PUSH2 0x2DC DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x234D PUSH2 0x2DC SWAP2 CODECOPY SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x2A0 ADD PUSH1 0x40 MSTORE DUP1 PUSH2 0x280 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x20CD PUSH2 0x280 SWAP2 CODECOPY DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH2 0x2A0 ADD PUSH1 0x40 MSTORE DUP1 PUSH2 0x280 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x20CD PUSH2 0x280 SWAP2 CODECOPY SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x2A0 ADD PUSH1 0x40 MSTORE DUP1 PUSH2 0x270 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3CDD PUSH2 0x270 SWAP2 CODECOPY DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH2 0x2E0 ADD PUSH1 0x40 MSTORE DUP1 PUSH2 0x2B8 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1925 PUSH2 0x2B8 SWAP2 CODECOPY SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH2 0x2A0 ADD PUSH1 0x40 MSTORE DUP1 PUSH2 0x27C DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2FC1 PUSH2 0x27C SWAP2 CODECOPY SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x2C0 ADD PUSH1 0x40 MSTORE DUP1 PUSH2 0x290 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2D31 PUSH2 0x290 SWAP2 CODECOPY DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x2A0 ADD PUSH1 0x40 MSTORE DUP1 PUSH2 0x27C DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2FC1 PUSH2 0x27C SWAP2 CODECOPY DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x3E0 ADD PUSH1 0x40 MSTORE DUP1 PUSH2 0x3A8 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2629 PUSH2 0x3A8 SWAP2 CODECOPY DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x260 ADD PUSH1 0x40 MSTORE DUP1 PUSH2 0x230 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3569 PUSH2 0x230 SWAP2 CODECOPY DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH2 0x3E0 ADD PUSH1 0x40 MSTORE DUP1 PUSH2 0x3A8 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2629 PUSH2 0x3A8 SWAP2 CODECOPY SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH2 0x2C0 ADD PUSH1 0x40 MSTORE DUP1 PUSH2 0x290 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2D31 PUSH2 0x290 SWAP2 CODECOPY SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x2C0 ADD PUSH1 0x40 MSTORE DUP1 PUSH2 0x290 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3A4D PUSH2 0x290 SWAP2 CODECOPY DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH2 0x380 ADD PUSH1 0x40 MSTORE DUP1 PUSH2 0x360 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x29D1 PUSH2 0x360 SWAP2 CODECOPY SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x260 ADD PUSH1 0x40 MSTORE DUP1 PUSH2 0x234 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x127D PUSH2 0x234 SWAP2 CODECOPY DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH2 0x2E0 ADD PUSH1 0x40 MSTORE DUP1 PUSH2 0x2B4 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3799 PUSH2 0x2B4 SWAP2 CODECOPY SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x9D0 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x9B4 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x9E2 JUMPI PUSH1 0x0 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP INVALID PUSH10 0x56424F5277304B47676F COINBASE COINBASE COINBASE COINBASE 0x4E MSTORE8 SSTORE PUSH9 0x455567414141447741 COINBASE COINBASE COINBASE CODESIZE TIMESTAMP COINBASE 0x4D COINBASE COINBASE COINBASE DIFFICULTY 0x49 ADDRESS PUSH20 0x5242414141414746424D56455541414144723363 COINBASE PUSH7 0x48423367352B37 0x4D PUSH21 0x34322B7A647A31374E72783966697A49544F4F4141 COINBASE COINBASE COINBASE PC MSTORE MSTORE8 SLOAD PUSH13 0x4D41514F62595A674141416274 0x4A MSTORE GASLIMIT CHAINID SSTORE 0x4F 0x4D PUSH23 0x746B6B467577794151525331754D4769554E6469343252 PUSH21 0x5A58594D345153774F6B4378366750542B55762F59 COINBASE PUSH21 0x7951525139515547512B6A2F396E694433386A2F2F PUSH25 0x626F7A44614F5370734F69702B6872764776756A7659786670 PUSH20 0x4F575074676D6F35494F44394B646D646853594B 0x4D NUMBER PUSH12 0x77373061762B675A4A6B4555 CODECOPY NUMBER 0x4A BASEFEE PUSH10 0x2F6D4F30564D4C555563 CALLDATALOAD PUSH20 0x57385A6B6647675745414441377066625A4E3169 PUSH10 0x64644A39756B5378326F ORIGIN NUMBER JUMPI PUSH5 0x4E31687A47 COINBASE SSTORE COINBASE 0x2F PUSH2 0x5964 PUSH26 0x7A33336E46346936573144697455504C44632B38446F77685163 BALANCE GAS ADDRESS CHAINID BASEFEE PUSH11 0x6749766868587342567343 SLOAD PUSH4 0x546A4875 MSTORE CHAINID PUSH18 0x7A623279414F784F6E414B596836554D4F52 0x4B TIMESTAMP CHAINID MSTORE PUSH12 0x4E61596475482B6968567059 SSTORE MLOAD PUSH20 0x574A36516C6D726E415667344778476767726E67 NUMBER JUMP ADDRESS BASEFEE TIMESTAMP TIMESTAMP PUSH2 0x4D4A PUSH2 0x5037 GAS CALLER GASLIMIT PUSH23 0x5A464739595654574E4A6D4B673241754F416A6D69712B PUSH19 0x6F2F44627A525333456A34426B7A356A533842 0x4C NUMBER PUSH7 0x664F3754674A54 PUSH11 0x754F3064666132374B6747 TIMESTAMP PUSH26 0x696B495257706D6D744F48742F437A71365764793336437A5033 PUSH22 0x654342346A567A644D4E426B544E797931754D4C5476 COINBASE JUMPI PUSH18 0x526E584A327773395550476376597A337774 PUSH16 0x7663334A4E664E3942736A6B3677686C CALLDATALOAD PUSH2 0x4F41 CALLDATALOAD PUSH15 0x6E3864446A566D554E79634D33744A PUSH14 0x30444F2B656F6E4F707478543476 CALLER PUSH27 0x722B3578452F4D5A59324F73357539632B363639353039545A4C76 PUSH15 0x2B58396F3739763362723839612B4E PUSH26 0x2B6F78462B6D63702F543638464C384B7A576433466937754879 PUSH11 0x76664D5458476F375A4141 COINBASE COINBASE COINBASE GASLIMIT PUSH13 0x46546B5375516D43436956424F MSTORE PUSH24 0x304B47676F414141414E5355684555674141414473414141 COINBASE CALLDATACOPY TIMESTAMP COINBASE 0x4D COINBASE COINBASE COINBASE COINBASE CALLER NUMBER 0x2B 0x2B COINBASE COINBASE COINBASE COINBASE COINBASE GASLIMIT PUSH13 0x424D564555414141436E706C6C PUSH27 0x636A5931476944477858784D4D4462395A4C444C41414141415852 MSTORE8 SLOAD PUSH13 0x4D41514F62595A67414141585A 0x4A MSTORE GASLIMIT CHAINID SSTORE 0x4F 0x4D PUSH23 0x74307547526843414D4257426E714F4346625343684153 0x4A PUSH19 0x4159346C4F4E742F4B78635145567976675A76 SLOAD BASEFEE 0x2F DIFFICULTY CALLVALUE TIMESTAMP PUSH16 0x505236662F36733165716F347550756B 0x2F 0x4A 0x49 GASLIMIT JUMPI CALLER PUSH25 0x7764643976545A4A2F657849583235673163737472776F4576 PUSH26 0x644651466C31646E41694B4F3646544D51386F7842696D336B64 BALANCE CALLDATALOAD DIFFICULTY PUSH5 0x44464E4E73 CALLDATALOAD CALLVALUE PUSH25 0x52754C67754A6939327A4D49377556416F50534A7935374C69 0x4C MSIZE TIMESTAMP PUSH8 0x626C565571546D7A CALLER PUSH15 0x3442385977553732794B4B41466F62 PUSH14 0x346F3354795234482B384A6E3878 PUSH5 0x7A7A527841 PUSH13 0x753235624977347553577A5179 PUSH25 0x4D6A65566739556664594B3974706D665838674E653058466C PUSH10 0x6D38493547496D34786D JUMP GASLIMIT JUMP MSIZE MLOAD PUSH6 0x2F44424E684E PUSH8 0x343870384D43436C PUSH12 0x3161336370684B4268516767 COINBASE CALLVALUE PUSH22 0x6332694A745A706C7670685244316F5A444148384563 ADDRESS MSIZE PUSH11 0x4A48527545792F6D427237 PUSH12 0x56473435764A524376764B71 BALANCE BASEFEE POP 0x4E JUMPI CALLDATACOPY PUSH21 0x543372695678795A61703576374B527476725A546A PUSH2 0x5750 CALLER PUSH26 0x78785A496F74336C6C59674A5956784E4B786B7369774F2B6362 PUSH26 0x38553873454F4F59577135734239594F6862702B563359583579 PUSH11 0x7461566E7474544F30724E PUSH3 0x48786C PUSH3 0x7A2B69 GAS MSTORE PUSH9 0x5968644C56424A487A PUSH26 0x4778432B4D597872636632463062474D7A4A562F414C566F5569 CALLVALUE PUSH17 0x47306A644141414141456C46546B537551 PUSH14 0x43436956424F5277304B47676F41 COINBASE COINBASE COINBASE 0x4E MSTORE8 SSTORE PUSH9 0x455567414141447341 COINBASE COINBASE COINBASE CALLDATACOPY TIMESTAMP COINBASE 0x4D COINBASE COINBASE COINBASE COINBASE CALLER NUMBER 0x2B 0x2B COINBASE COINBASE COINBASE COINBASE COINBASE SELFBALANCE CHAINID TIMESTAMP 0x4D JUMP GASLIMIT SSTORE COINBASE COINBASE COINBASE DIFFICULTY PUSH6 0x327449314769 NUMBER CALLER PUSH19 0x3646776156354F53554479372B6D3373616662 JUMP MLOAD CALLDATACOPY PUSH2 0x4141 COINBASE COINBASE COINBASE PC MSTORE MSTORE8 SLOAD PUSH13 0x4D41514F62595A674141416668 0x4A MSTORE GASLIMIT CHAINID SSTORE 0x4F 0x4D PUSH23 0x746B6B475332794151525658636F427550737755684B32 PUSH23 0x6F75594131754C49656C33304161354839704F622B6C64 0x2F 0x49 NUMBER 0x49 0x2F SELFBALANCE 0x4E ADDRESS PUSH11 0x5151673250313942413937 0x2F CODECOPY PUSH20 0x36327676366577762F57753630792F3735394D4D 0x4C PUSH7 0x522B7452316765 0x4F CODESIZE PUSH5 0x392F777945 MSTORE8 PUSH12 0x4744382F66354D4A4C6A6B4E CALLVALUE 0x4E 0x4E JUMPI CODECOPY CALLDATALOAD MSTORE8 PUSH16 0x596E79387854625A744351504D555465 PUSH3 0x6B7938 CODECOPY SLOAD 0x49 CALLDATASIZE 0x4D PUSH24 0x74486C73336D526D525733526E496D6E3365374D7A6A5339 MSIZE GAS MLOAD 0x4D PUSH3 0x6E766D 0x4A PUSH5 0x6D4C78694A PUSH13 0x332B4755364D505959744E7134 PUSH3 0x376466 PUSH12 0x63635A6F78636E63314C622B PUSH25 0x5A6C336A6D727658616759527A326F7A585279356B4A653751 PUSH14 0x48587A473534533253465A2B4257 MSTORE NUMBER 0x2B SLOAD PUSH16 0x596154766B6F52505278377271445253 NUMBER CALLDATACOPY BASEFEE CHAINID MSIZE CODESIZE COINBASE PUSH17 0x506971477358544C6D646A434879594F31 NUMBER 0x4D MSIZE 0x4F 0x4A PC 0x4D SSTORE PUSH7 0x3642547530436B SSTORE PUSH24 0x6F2B4B6632613142654E7152345271357A2F562F69517576 PUSH13 0x5537467466547230656241656C CHAINID CODESIZE SLOAD PUSH21 0x46344566375345764C576C692B6433617534687436 0x4D PUSH24 0x5A4F616C387765635441373470484C57507669612B4B7277 PUSH8 0x773337653676532B CHAINID CALLDATALOAD PUSH16 0x4D6D5032646C78467874584E6D79326D 0x49 PUSH23 0x4F776B727857325861676249304B645349323538745174 PUSH22 0x617866633743346B48346C447573646B4E5735744343 0x4A GASLIMIT SSTORE PUSH8 0x536A6B6153705566 0x4D CALLDATALOAD PUSH10 0x54364878533768554D35 ADDRESS POP JUMP MSIZE PUSH19 0x4C476D786733694A4F4E4A6D44316C45677174 PUSH13 0x6F704D6E3979446E4E306D6165 CODESIZE PUSH12 0x65354456446232746E706456 JUMPI PUSH15 0x7476615A6F424D346645516F577632 PUSH13 0x727533716549512B355A64632F PUSH4 0x6F4A6A55 CALLDATACOPY PUSH16 0x4C4A2B7A5434795363726E5376564A42 NUMBER GASLIMIT 0x2F PUSH19 0x362F42792B3577626662316642536D76627662 MSTORE BASEFEE GASLIMIT CALLDATASIZE POP PUSH5 0x715877524B PUSH17 0x2F5263586532694F4D7942485577414141 COINBASE TIMESTAMP 0x4A MSTORE SSTORE CALLDATALOAD GASLIMIT PUSH19 0x6B4A6767673D3D6956424F5277304B47676F41 COINBASE COINBASE COINBASE 0x4E MSTORE8 SSTORE PUSH9 0x455567414141447741 COINBASE COINBASE COINBASE CODESIZE COINBASE PUSH8 0x4D41414142486B6A BASEFEE PUSH9 0x414141414446424D56 GASLIMIT SSTORE COINBASE COINBASE COINBASE DIFFICULTY JUMP PUSH17 0x49533568574D31476944396C4D79744141 COINBASE COINBASE COINBASE PC MSTORE MSTORE8 SLOAD PUSH13 0x4D41514F62595A674141415564 0x4A MSTORE GASLIMIT CHAINID SSTORE 0x4B 0x4D 0x2F PUSH21 0x7A6A464C77314151414F43447A49322F4A6B4A642F TIMESTAMP JUMPI PC ADDRESS NUMBER SLOAD SELFBALANCE PUSH18 0x5168704C56306337503849623143365A5568 PUSH20 0x4E637372564A6441666B4D65534F645936694175 0x4C PUSH22 0x4C673565573970454E2B51672F65335833764F446734 MSTORE SSTORE 0x2B PUSH4 0x3066732B CALLVALUE PUSH20 0x38665846353348356259775A37357255584A5144 PUSH9 0x4D30374233506C6A37 0x4B CHAINID PUSH4 0x65654236 CALLDATALOAD PUSH18 0x7562616B346B483165476762613176313858 PUSH10 0x66754672627A6538434A PUSH2 0x7A7A PUSH15 0x78627A494C573535792F4673394238 0x4E PUSH11 0x35446236306A5678777669 PUSH14 0x575163434D7648596D2B49613844 0x4A PUSH9 0x5A6535434A556F6943 0x4D MSIZE PUSH6 0x5A3839712B69 GASLIMIT 0x4A PUSH26 0x596A4E4C32734D59482B414458617A366244673477676B636349 PUSH25 0x6C3368696A4B517874564D5A3346386B593332446A4855726A PUSH23 0x76575950476F3955764F784D74354A583645306C4F5156 PC 0x4A COINBASE PUSH5 0x3644463169 TIMESTAMP PUSH14 0x596C4666535A7152735A39725555 PUSH5 0x5A4F596A63 BASEFEE 0x49 CALLER PUSH3 0x44786F 0x4D PUSH24 0x44736D4A6D38793158366A38486A6D72317A716E30716D79 CHAINID PUSH2 0x6279 CALLDATACOPY PUSH11 0x54786C5A396B2F56517557 PUSH27 0x764B712B5A7537585171367A43564E6A4252446A4876743971762F MLOAD 0x2B POP SSTORE 0x4C PUSH26 0x5053744B30546741414141424A52553545726B4A6767673D3D69 JUMP TIMESTAMP 0x4F MSTORE PUSH24 0x304B47676F414141414E5355684555674141414477414141 COINBASE CODESIZE TIMESTAMP COINBASE 0x4D COINBASE COINBASE COINBASE DIFFICULTY 0x49 ADDRESS PUSH20 0x5242414141414431424D56455541414141314769 DIFFICULTY PUSH15 0x374F2B7575384C2F2F2F386E753372 PUSH24 0x4141414141585253546C4D41514F62595A67414141586C4A MSTORE GASLIMIT CHAINID SSTORE 0x4F 0x4D PUSH23 0x74303875523369414D4147445267523430494F45474247 PUSH12 0x414A2F3358465067646C7366 CALLDATASIZE PUSH12 0x767479736355335969524777 0x4D 0x2F CALLDATASIZE JUMPI PUSH6 0x2B4C74732B4A PUSH24 0x514D434242536B3778702B73306346344372364337397856 POP POP PUSH3 0x416551 MSTORE8 CALLVALUE CALLER PUSH17 0x7175443178366F646E7A584C6879637954 JUMP SSTORE CODECOPY PUSH14 0x5A373831414342666F714A486368 0x4B 0x4B PUSH17 0x494C426D537035786F4E62636A2B396E39 CALLER MSTORE8 CALLER CODECOPY PUSH10 0x74563237797773594E75 PUSH3 0x4F4B69 PUSH5 0x6F62653639 PUSH4 0x54673449 CODESIZE PUSH4 0x4E505978 0x2B PUSH22 0x62586477685668595A392B737057304E6A6771426B6B 0x2B JUMPI SLOAD COINBASE PUSH9 0x664E38734F4D524653 CODESIZE TIMESTAMP CALLDATALOAD 0x4A 0x2B CALLDATASIZE CHAINID PUSH4 0x51585279 PUSH2 0x3474 PUSH22 0x7752344676366931646E4A4D2F47527272687548684F PUSH24 0x4E373465625A64475138654430484A372F6B3933745A424D GAS DIFFICULTY POP 0x4C SELFBALANCE POP PUSH10 0x2F386A5132334F574D64 PUSH27 0x4C7250573550573175546547697673484166586738574E5055334F PUSH16 0x6B7470454E6930312F5A4576624B3267 SLOAD DIFFICULTY PUSH5 0x5346646D61 PUSH19 0x6F7749656D4E2F344B4C4B64444B3855384653 PUSH16 0x4D7A39593256373053465274522B3837 JUMPI PUSH25 0x57556B2B49736E46374742623258594F643076487236676C37 ADDRESS 0x2B MSIZE PUSH22 0x50694D70436974694C4231456A34627936574F594361 0x49 PUSH19 0x322B2F304B5A465253636E6669716274576E57 GAS JUMP PUSH18 0x69705A577A5662466C55735054396577636E ADDRESS PUSH15 0x3943772B6453704F35695378774141 COINBASE COINBASE COINBASE GASLIMIT PUSH13 0x46546B5375516D43436956424F MSTORE PUSH24 0x304B47676F414141414E5355684555674141414477414141 COINBASE CODESIZE TIMESTAMP COINBASE 0x4D COINBASE COINBASE COINBASE DIFFICULTY 0x49 ADDRESS PUSH20 0x5242414141414746424D56455541414144704B53 PUSH12 0x31476944393177502F384A7A CALLDATASIZE PUSH5 0x3366637678 PUSH27 0x4F4943443652574A534141414141585253546C4D41514F62595A67 COINBASE COINBASE COINBASE MSTORE 0x4E 0x4A MSTORE GASLIMIT CHAINID SSTORE 0x4F 0x4D PUSH23 0x746B4C4678777A414D52585863674958504C5150795041 DIFFICULTY PUSH9 0x7977415746306A6842 JUMP PUSH25 0x6F4144645A5078384B76306A5A6958336E63796B3078502F76 GASLIMIT CALLVALUE MLOAD ADDRESS PUSH3 0x4C5856 JUMP PUSH22 0x386F467834364D64436A377A4B5A3954795A35456D62 PC PUSH21 0x6432732B2F78306A7A486648734D546D7330455350 CALLVALUE CHAINID PUSH27 0x3645425664504445744E4E6E794D3258704A4F6269597861795570 PUSH24 0x357246704579476C5A466D3862383266414A3572466F506D TIMESTAMP PUSH27 0x744158423247456F78533159546B2B43467272484E68793234574C DIFFICULTY PUSH16 0x363678466248564B2F69435033694842 CALLER PUSH24 0x476E6D7659464871574779505137374B75594F3170756968 CALLDATASIZE PUSH13 0x71304E5A37365146446B594866 PC PUSH6 0x6939514C5471 POP COINBASE ORIGIN NUMBER 0x2F PUSH4 0x675A6F57 PUSH11 0x7072314E36642F2B4C6D75 PUSH24 0x3072767235513778747377564D4E6663337A426B49597064 BALANCE SSTORE PUSH27 0x66665974446E786559332B4C2F514E4D3254416634326250636238 CALLDATALOAD 0x4D PUSH5 0x554E626F39 PUSH27 0x38582F77447A535A55724657536369314141414141456C46546B53 PUSH22 0x516D43436956424F5277304B47676F414141414E5355 PUSH9 0x455567414141447741 COINBASE COINBASE COINBASE CODESIZE TIMESTAMP COINBASE 0x4D COINBASE COINBASE COINBASE DIFFICULTY 0x49 ADDRESS PUSH20 0x5242414141414A46424D56455541414142474F43 CALLVALUE PUSH7 0x484230384F446F PUSH26 0x4B434862334E3969556B59724B43713175635433392F65696F61 0x4A SLOAD SLOAD PUSH13 0x4745442B513941414141415852 MSTORE8 SLOAD PUSH13 0x4D41514F62595A674141415A4E 0x4A MSTORE GASLIMIT CHAINID SSTORE 0x4F 0x4D PUSH23 0x7430374675776A41514275444962334257354E6B4F4163 PUSH19 0x7349564B5A6A4B772B414A4B6C7247546F4138 NUMBER MLOAD POP JUMP 0x49 PUSH13 0x586942536D646B59752F626C65 PUSH8 0x6E344F4550684366 PUSH8 0x39495054357A6D63 PUSH20 0x736C6465655A726947597043365363625A673030 PUSH15 0x2F6F6847775734346635457A4E6763 PUSH11 0x415451747963652B68434B 0x4D PUSH26 0x7344546172547674352F68594246426F596C45313645476E7676 MLOAD CALLDATALOAD PUSH6 0x4A426C61346C 0x4F PUSH3 0x466654 CALLER ADDRESS 0x4C SSTORE 0x4B PUSH21 0x6853707A6B357362377362503663446D6A6866312B GAS PUSH21 0x4168704742383353645263354D695A69773643506A PUSH2 0x4B35 GASLIMIT 0x4C POP CHAINID PUSH14 0x67766737377455444F32516E7335 PUSH14 0x4F58464D725A4F6D6B7835575A35 PUSH15 0x2F324F514249415A77704A59785235 PUSH10 0x6D7A483162306E423361 TIMESTAMP PUSH13 0x6C703475374B416A6D2F345456 PUSH15 0x42654241736C655A4A714E2F414D43 0x4D CODESIZE PUSH26 0x4A306A4C46316E7242494744414F6B4E6D5446516E50414D4D34 PUSH12 0x41742F3459612F57646A7279 COINBASE CALLDATALOAD PUSH26 0x51307A6C73566670343947732F4D44594F79716D376F77485653 PUSH15 0x6A3258773232456A4F622F73754933 PUSH2 0x4479 0x2F PUSH20 0x2F474D336D457862326143747967624D6C6F3031 0x4F MSTORE ORIGIN PUSH21 0x622F5944462B386C615779485431654B39597A4879 PUSH13 0x72464C32413468466E3777686E PUSH16 0x6637396D44544C6D367A72597169744C BASEFEE PUSH18 0x3037734C63396275793373723737776D4A5A CALLVALUE CALLER PUSH22 0x35737462504C48385956735768626447755857503448 PUSH4 0x7064732B PUSH22 0x32686F6A6F41414141415355564F524B35435949493D PUSH10 0x56424F5277304B47676F COINBASE COINBASE COINBASE COINBASE 0x4E MSTORE8 SSTORE PUSH9 0x455567414141447741 COINBASE COINBASE COINBASE CODESIZE TIMESTAMP COINBASE 0x4D COINBASE COINBASE COINBASE DIFFICULTY 0x49 ADDRESS PUSH20 0x5242414141414656424D56455541414141644768 PUSH21 0x62563167744A69684A513056396533772B4E6A6A33 0x4F CODESIZE TIMESTAMP PUSH11 0x4141414141585253546C4D COINBASE MLOAD 0x4F PUSH3 0x595A67 COINBASE COINBASE COINBASE PUSH2 0x564A MSTORE GASLIMIT CHAINID SSTORE 0x4F 0x4D PUSH23 0x7430303175777941514257427A412F36615061504A415A NUMBER PUSH13 0x376B4663494A4636674B6A3376 ADDRESS POP PUSH7 0x4D774B37635259 CALLDATALOAD MLOAD 0x4F PUSH25 0x4B4C7636594E304F694C4A2F7263373236334F49736E77622F PUSH15 0x4E583875487643652B657637736565 ORIGIN 0x4D PUSH22 0x582B6D5A4E532F556D36565173367157714E56556C56 PC PUSH12 0x752F354C6D56636853553550 PUSH3 0x552F46 PUSH5 0x437537454A PUSH9 0x48333154356E463857 SELFBALANCE GAS MLOAD BASEFEE JUMPI PUSH10 0x50527A746D2F656D7454 MSTORE8 0x4F PUSH5 0x306A6D6558 JUMPI PUSH16 0x4A6A7036635334717A554B504C4E757A BASEFEE 0x4E PUSH23 0x58463879527A75785163664F5048646E5447454846334E PC MSIZE PUSH22 0x644B76746F34324A4F393447526B6E4573534F653366 PUSH9 0x6D6756625A31623565 PUSH16 0x6D4F7865524A694B566F366C73692F67 PUSH22 0x47306B304553587A696155584F37694336577135674A 0x4A BALANCE PUSH4 0x4D44556C MSIZE SELFBALANCE PUSH5 0x6D6132592F PUSH11 0x47717333683033786D646B PUSH24 0x5137755A4A31634358723545754F55763958713551777767 0x4E MSIZE ADDRESS PUSH17 0x473967504D4958325063754A4862787157 PUSH20 0x7333664947633151775257534D456F4965624A62 JUMP BALANCE PUSH5 0x5469633579 SSTORE PUSH2 0x4A58 PUSH23 0x686D38594A476A437936543858416C6741456A48633433 MSIZE PUSH26 0x2F5864724A7A4B362F634759624C376457683778382F344A3656 CODECOPY CALLER TIMESTAMP PUSH22 0x78742F4D597077394D4A33614858726B793961593254 BALANCE CODECOPY PUSH2 0x2F39 CALLVALUE PUSH21 0x3970686B502F4D4637503431383235352B7A75322B CALLDATACOPY GAS 0x2B PUSH27 0x6E337A32482F7674647A39526F6563334475506A4B5836324F3066 PUSH9 0x302B6D6C3832505662 SLOAD PUSH21 0x2B6F2F2B6C5A726B6A376831695941414141415355 JUMP 0x4F MSTORE 0x4B CALLDATALOAD NUMBER MSIZE 0x49 0x49 RETURNDATASIZE PUSH10 0x56424F5277304B47676F COINBASE COINBASE COINBASE COINBASE 0x4E MSTORE8 SSTORE PUSH9 0x455567414141447741 COINBASE COINBASE COINBASE CODESIZE COINBASE PUSH8 0x4D41414142486B6A BASEFEE PUSH9 0x414141414446424D56 GASLIMIT SSTORE COINBASE COINBASE COINBASE NUMBER PUSH10 0x63457439534349314769 TIMESTAMP PUSH17 0x414C716C4141414141585253546C4D4151 0x4F PUSH3 0x595A67 COINBASE COINBASE COINBASE SSTORE PUSH5 0x4A52454655 0x4B 0x4D 0x2F PUSH21 0x7A6A464C77314151414F43447A49322F4A6B4A642F TIMESTAMP JUMPI PC ADDRESS NUMBER SLOAD SELFBALANCE PUSH18 0x5168704C56306337503849623143365A5568 PUSH20 0x4E637372564A6441666B4D65534F645936694175 0x4C PUSH22 0x4C673565573970454E2B51672F65335833764F446734 MSTORE SSTORE 0x2B PUSH4 0x3066732B CALLVALUE PUSH20 0x38665846353348356259775A37357255584A5144 PUSH9 0x4D30374233506C6A37 0x4B CHAINID PUSH4 0x65654236 CALLDATALOAD PUSH18 0x7562616B346B483165476762613176313858 PUSH10 0x66754672627A6538434A PUSH2 0x7A7A PUSH15 0x78627A494C573535792F4673394238 0x4E PUSH11 0x35446236306A5678777669 PUSH14 0x575163434D7648596D2B49613844 0x4A PUSH9 0x5A6535434A556F6943 0x4D MSIZE PUSH6 0x5A3839712B69 GASLIMIT 0x4A PUSH26 0x596A4E4C32734D59482B414458617A366244673477676B636349 PUSH25 0x6C3368696A4B517874564D5A3346386B593332446A4855726A PUSH23 0x76575950476F3955764F784D74354A583645306C4F5156 PC 0x4A COINBASE PUSH5 0x3644463169 TIMESTAMP PUSH14 0x596C4666535A7152735A39725555 PUSH5 0x5A4F596A63 BASEFEE 0x49 CALLER PUSH3 0x44786F 0x4D PUSH24 0x44736D4A6D38793158366A38486A6D72317A716E30716D79 CHAINID PUSH2 0x6279 CALLDATACOPY PUSH11 0x54786C5A396B2F56517557 PUSH27 0x764B712B5A7537585171367A43564E6A4252446A4876743971762F MLOAD 0x2B POP SSTORE 0x4C PUSH26 0x5053744B30546741414141424A52553545726B4A6767673D3D69 JUMP TIMESTAMP 0x4F MSTORE PUSH24 0x304B47676F414141414E5355684555674141414477414141 COINBASE CODESIZE TIMESTAMP COINBASE 0x4D COINBASE COINBASE COINBASE DIFFICULTY 0x49 ADDRESS PUSH20 0x5242414141414656424D5645554141414335744A MLOAD BALANCE SELFBALANCE PUSH10 0x43576A32764F79712B51 MLOAD DIFFICULTY 0x2B PUSH22 0x626D35612B5A57554141414141585253546C4D41514F PUSH3 0x595A67 COINBASE COINBASE COINBASE PC PUSH13 0x4A524546554F4D7674302B324E PUSH17 0x44414D4275444948627A78467044776366 CODESIZE PUSH5 0x5677446143 PUSH17 0x4232436C6A70727638537A68356D494948 PUSH4 0x56624247 GASLIMIT MLOAD PUSH13 0x5037495149776B2F3852442B47 CALLVALUE CODECOPY PUSH3 0x445952 PUSH13 0x53434452384470304A68496C7A NUMBER JUMPI SELFBALANCE 0x4D PUSH20 0x694C64324241535138694D4B5047577646677576 DIFFICULTY PUSH8 0x732F2B4F616E6C48 PUSH24 0x5A7276574B335068416C7662554D5A7264594A6D7A6A6F6C JUMPI PUSH21 0x57575671766563684650542B544A504B4C44316849 GAS PUSH5 0x5A674E5554 MSTORE8 MSTORE SELFBALANCE PUSH13 0x75464C76765765707833356B53 PUSH26 0x38786F6F585A683346756359786F597A72446C4869596A4F7357 MSIZE TIMESTAMP CALLDATASIZE CODESIZE CALLDATALOAD PUSH18 0x58596D4567326B41464944343168672B7141 0x2F ORIGIN BALANCE CALLDATALOAD PUSH3 0x2F772F SLOAD MSIZE JUMP PUSH11 0x4F416E5450674D2F4A7872 PUSH11 0x525045653663624C426C68 PUSH11 0x4D4F6A6D364B4A34643557 PUSH25 0x516363664943464F4446394A57423863373834742F546B7A39 PUSH18 0x6C6A50376A7A476A5A6353447678646B5642 PUSH26 0x6D462B75544E7A68586E317575655A36755449706E4642384D41 POP PUSH2 0x7052 CALLVALUE PUSH25 0x79386767504C75484B764C5063575558663963683758464C46 PUSH14 0x5658426278616F7A6A6657392F2B PUSH21 0x58533748556A33576B37566C6776473547584C6557 PUSH10 0x35442F534C6C36377571 DIFFICULTY PUSH3 0x627044 SLOAD CODECOPY PUSH2 0x4C6F CODECOPY CALLDATASIZE PUSH20 0x545A37677259734F70396A576D374D5A6435716C PUSH19 0x6C6C5859663054315A57665071447632316F56 SLOAD SLOAD MSTORE8 CALLDATALOAD SSTORE NUMBER PUSH8 0x4141414141456C46 SLOAD PUSH12 0x5375516D43436956424F5277 ADDRESS 0x4B SELFBALANCE PUSH8 0x6F414141414E5355 PUSH9 0x455567414141447741 COINBASE COINBASE COINBASE CODESIZE TIMESTAMP COINBASE 0x4D COINBASE COINBASE COINBASE DIFFICULTY 0x49 ADDRESS PUSH20 0x5242414141414746424D564555414141444C6C6D PUSH20 0x314769423654797977653146544F535465724953 GAS PUSH2 0x6B51 0x4D 0x4C BASEFEE PUSH24 0x304141414141585253546C4D41514F62595A674141416274 0x4A MSTORE GASLIMIT CHAINID SSTORE 0x4F 0x4D PUSH23 0x746B6B467577794151525331754D4769554E6469343252 PUSH21 0x5A58594D345153774F6B4378366750542B55762F59 COINBASE PUSH21 0x7951525139515547512B6A2F396E694433386A2F2F PUSH25 0x626F7A44614F5370734F69702B6872764776756A7659786670 PUSH20 0x4F575074676D6F35494F44394B646D646853594B 0x4D NUMBER PUSH12 0x77373061762B675A4A6B4555 CODECOPY NUMBER 0x4A BASEFEE PUSH10 0x2F6D4F30564D4C555563 CALLDATALOAD PUSH20 0x57385A6B6647675745414441377066625A4E3169 PUSH10 0x64644A39756B5378326F ORIGIN NUMBER JUMPI PUSH5 0x4E31687A47 COINBASE SSTORE COINBASE 0x2F PUSH2 0x5964 PUSH26 0x7A33336E46346936573144697455504C44632B38446F77685163 BALANCE GAS ADDRESS CHAINID BASEFEE PUSH11 0x6749766868587342567343 SLOAD PUSH4 0x546A4875 MSTORE CHAINID PUSH18 0x7A623279414F784F6E414B596836554D4F52 0x4B TIMESTAMP CHAINID MSTORE PUSH12 0x4E61596475482B6968567059 SSTORE MLOAD PUSH20 0x574A36516C6D726E415667344778476767726E67 NUMBER JUMP ADDRESS BASEFEE TIMESTAMP TIMESTAMP PUSH2 0x4D4A PUSH2 0x5037 GAS CALLER GASLIMIT PUSH23 0x5A464739595654574E4A6D4B673241754F416A6D69712B PUSH19 0x6F2F44627A525333456A34426B7A356A533842 0x4C NUMBER PUSH7 0x664F3754674A54 PUSH11 0x754F3064666132374B6747 TIMESTAMP PUSH26 0x696B495257706D6D744F48742F437A71365764793336437A5033 PUSH22 0x654342346A567A644D4E426B544E797931754D4C5476 COINBASE JUMPI PUSH18 0x526E584A327773395550476376597A337774 PUSH16 0x7663334A4E664E3942736A6B3677686C CALLDATALOAD PUSH2 0x4F41 CALLDATALOAD PUSH15 0x6E3864446A566D554E79634D33744A PUSH14 0x30444F2B656F6E4F707478543476 CALLER PUSH27 0x722B3578452F4D5A59324F73357539632B363639353039545A4C76 PUSH15 0x2B58396F3739763362723839612B4E PUSH26 0x2B6F78462B6D63702F543638464C384B7A576433466937754879 PUSH11 0x76664D5458476F375A4141 COINBASE COINBASE COINBASE GASLIMIT PUSH13 0x46546B5375516D43436956424F MSTORE PUSH24 0x304B47676F414141414E5355684555674141414477414141 COINBASE CODESIZE NUMBER COINBASE 0x4D COINBASE COINBASE COINBASE COINBASE 0x4E 0x49 PUSH10 0x6C41414141414E6C424D JUMP GASLIMIT SSTORE COINBASE COINBASE COINBASE COINBASE PUSH17 0x494549774B456B6546436B624554636C48 GASLIMIT CHAINID 0x4D MSTORE SELFBALANCE 0x4A DIFFICULTY 0x4F BALANCE PUSH12 0x324C552F372B763946505673 CALLDATACOPY 0x4D PUSH13 0x5077362F37577966644E523231 NUMBER 0x4F ORIGIN SLOAD SLOAD ADDRESS 0x4E PUSH23 0x4B784E716A53646B634141414141585253546C4D41514F PUSH3 0x595A67 COINBASE COINBASE COINBASE PUSH11 0x5A4A52454655534D667431 MLOAD PUSH22 0x796D7A414D4264424B6C697844674C623733327A7656 PUSH5 0x7A48674150 0x4A COINBASE PUSH18 0x4B4A536242314A4F557A6B312F662B4D5933 PUSH23 0x6E45547051783348304B4557666B762B74316E425A4261 PUSH27 0x6279616C3778317135356235515062434B463764736D584C4E444B 0x2B CALLDATACOPY CALLDATACOPY GASLIMIT DIFFICULTY PUSH10 0x396C6E34546432784C6C PUSH19 0x563066315839726C524D754774693678794950 PUSH5 0x4656693765 0x2B GAS ORIGIN 0x4B PC PUSH18 0x2F4159586B426B4F6C7235674230716A7576 DIFFICULTY CALLDATALOAD PC PUSH9 0x6336705A32786E6A68 CALLDATACOPY CALLDATALOAD PUSH22 0x62484F50684D6A4A74354372543941434F4842574B5A PUSH12 0x55394D744570746D324C6A44 JUMPI CALLDATACOPY COINBASE PUSH23 0x544D7464645551776D7463536C726432673832366B496B PUSH7 0x665735537A6E6A PUSH27 0x4252303772394E4C6D35356F68316E36736C4B7837525772634632 PUSH3 0x4A5A53 PUSH18 0x44755763734C634C79476F626D435041335A CALLER COINBASE CODESIZE PUSH27 0x4F6D5470694C524C5044477454382F3058356F333163424A302B68 PUSH19 0x5857434A78544F7330483746752B735231774E MLOAD PUSH9 0x46517552476C553668 PUSH13 0x6C794975344344355A34327248 PUSH26 0x526472553872516976664F495762614338617557455163304C6B PUSH24 0x78472F416B532B436B736A5069674247545A466338667274 PUSH5 0x6461355065 0x4D PUSH3 0x7A456F PUSH14 0x746D747549575A7371756A33676D COINBASE MSTORE8 BALANCE PUSH27 0x5145764D594F7A6234664F4A473170566830544934694875624E6A JUMPI PUSH26 0x714C532B694F46666D5435635374323647315A65554762416573 PUSH22 0x5A325058444A696A7564357A4968315A6B7258316F50 SLOAD GAS CODECOPY SELFBALANCE PC ORIGIN PUSH9 0x693938784733727631 PUSH8 0x52357A5857586673 PUSH23 0x6D4F3978672B3348423758636A686F617A506E34535532 PUSH6 0x344479382F45 SLOAD PUSH9 0x6B5A426E4B72494657 CALLDATALOAD 0x2F PUSH18 0x476E502F382F2B49466139786D3331314461 0x4F JUMP PUSH18 0x446D76374F2B366179495678674265344668 SSTORE JUMP PUSH25 0x334F2B724572335752784C73643953576D466233486A54696B PC 0x4F CHAINID CALLDATALOAD PUSH21 0x344F2B77516F4C4C44643467343570784555537A32 PUSH21 0x633479772B72564F5534576A4C773541626E416C54 PUSH26 0x49436C6E2B6B317A756F53386F502F4162566A45307171567354 PUSH7 0x4141414141456C CHAINID SLOAD PUSH12 0x5375516D43436956424F5277 ADDRESS 0x4B SELFBALANCE PUSH8 0x6F414141414E5355 PUSH9 0x455567414141447341 COINBASE COINBASE COINBASE CALLDATACOPY TIMESTAMP COINBASE 0x4D COINBASE COINBASE COINBASE COINBASE CALLER NUMBER 0x2B 0x2B COINBASE COINBASE COINBASE COINBASE COINBASE SELFBALANCE CHAINID TIMESTAMP 0x4D JUMP GASLIMIT SSTORE COINBASE COINBASE COINBASE DIFFICULTY CALLDATACOPY PUSH10 0x7773314769444B586742 PUSH11 0x4A514E464751482F754765 COINBASE 0x4D PUSH24 0x724F3042466C4141414141585253546C4D41514F62595A67 COINBASE COINBASE COINBASE PUSH9 0x354A524546554F4D76 PUSH21 0x6B6B46796E44415152536C753846764B7243554565 NUMBER CALLER 0x4A POP PUSH8 0x42596B3679445277 PUSH4 0x594B6964 PUSH24 0x35663656626A466F384E6733694D55434E592B762F743274 CALLDATALOAD PUSH15 0x76397436757272363967642B314D30 CALLDATACOPY SLOAD PUSH5 0x7166766968 0x2F MSIZE CALLDATASIZE 0x4B PUSH9 0x756178704666542B59 SLOAD BASEFEE PUSH14 0x6B434241506172702F456B2B6F44 CALLDATALOAD BASEFEE NUMBER CALLVALUE ORIGIN PUSH6 0x744865542B46 CHAINID NUMBER PUSH3 0x423269 JUMPI PUSH15 0x357764737A304746535137587A7273 0x4C POP MSTORE PUSH18 0x4C567656766F326E586C396C546644413349 PUSH16 0x446C4D433159444966316F7871576E2F DIFFICULTY DIFFICULTY PUSH21 0x4C386469422F7A456239795974697A615338455476 0x2F CODESIZE PUSH8 0x4D39695042423764 SELFBALANCE 0x4C CODECOPY MSIZE PUSH8 0x374D4E452F4B6F6B CODECOPY TIMESTAMP PUSH14 0x6461374E4950384F332F64635769 PUSH23 0x5371785A795531697A5A2B4D327A473332724C61456953 CALLER PUSH23 0x4D6B544E332F484D4C3379554846545239373675635564 PUSH9 0x7A5246414636367067 TIMESTAMP GASLIMIT PUSH15 0x567A465477684177574B74594D4468 PUSH23 0x55344C6C686E3267554942424632642F79564165426C6F PUSH16 0x59443974654E52543759637145547479 CALLDATALOAD PUSH3 0x30744E GAS PUSH25 0x6759706569646F58725555643268506E4A6F59373970425956 ORIGIN PUSH20 0x4A32394A4C30777A544C55683361387858414764 MSTORE PC PUSH24 0x434D544F2F574D4538345756415548486C7A686535527262 GASLIMIT MSTORE PUSH10 0x44636E7A674D4169636E SSTORE PUSH10 0x51615574616D33766175 ADDRESS SELFBALANCE JUMP JUMPI PUSH17 0x706C386B474F5A536F3138506436566779 PUSH18 0x4C4F7475446A66526B57363046755577634C MSTORE MLOAD POP PUSH23 0x362B7148474C6655572F49596C376C434C6E7A4F636832 NUMBER TIMESTAMP NUMBER CALLDATACOPY PUSH26 0x4E76653162476C724F6D654B59564F3761504D6C76522F55466A PUSH13 0x6E5A2F59794F51416443675055 PUSH26 0x354B586D38383876486E67554E6945474D725A74394E64684461 JUMP CODECOPY PUSH22 0x6B3177683262474A2F54764D6439596D6564436A7432 PUSH23 0x6D4E766164372F2F695068636C6350387676504F6C4243 PC PUSH21 0x4A79614749614D7578617235726C315047756A7079 PUSH4 0x63444B31 0x4C PUSH12 0x2B532B70376371713279662F ORIGIN PUSH25 0x624178714A7A6A2B4141414141456C46546B5375516D434369 JUMP TIMESTAMP 0x4F MSTORE PUSH24 0x304B47676F414141414E5355684555674141414477414141 COINBASE CODESIZE TIMESTAMP COINBASE 0x4D COINBASE COINBASE COINBASE DIFFICULTY 0x49 ADDRESS PUSH20 0x5242414141414431424D56455541414144387576 PUSH19 0x36692F59314769442F3550362B76736F354141 COINBASE COINBASE COINBASE PC MSTORE MSTORE8 SLOAD PUSH13 0x4D41514F62595A674141415970 0x4A MSTORE GASLIMIT CHAINID SSTORE 0x4F 0x4D PUSH23 0x743034734E7044414D424E424971574473626342324137 CHAINID DIFFICULTY COINBASE CALLVALUE PUSH11 0x7276365A7A344C4A386C68 0x49 PUSH22 0x306F72456A394567735A542F362F3936583331655872 CHAINID 0x2F PUSH6 0x69756C397257 0x2F CALLER CHAINID TIMESTAMP PC 0x4A CALLDATACOPY PUSH5 0x53676F5852 PUSH7 0x6E676868334170 SLOAD PUSH14 0x445A66734F5A48616D4B7A482F61 0x4D CALLDATACOPY PUSH27 0x717959727479525268474E30494D336C7768585932585672644E4C PUSH27 0x72707A3359784D492B72613568515945587A6C2B725353394D6954 TIMESTAMP PUSH21 0x565A4D523873726A3058363474724963544B334B7A PUSH19 0x726C644C4B56685163654C4D6D2B6C5A693857 BASEFEE GASLIMIT ORIGIN 0x4E PUSH23 0x4C424C4F453762354D2F7A636B5265724161574C697558 CODESIZE CALLDATALOAD PUSH2 0x4B4F COINBASE 0x2B PUSH15 0x707835507753657A444A592F634778 GAS PUSH8 0x4143554C52713435 PUSH17 0x48683131354F505653757154654F513843 GAS PUSH2 0x4C78 MLOAD PUSH12 0x5663515977625A2F764A3266 PUSH27 0x43664C442F4D73756F4F7A67463550683832584D77686763444D67 PUSH3 0x62354C PUSH16 0x7A415470594A33396632733538737538 CODESIZE PUSH21 0x59534F35736C486B64714642575046594E7533644F PC MLOAD PUSH7 0x58537737487337 PUSH22 0x575A6341547334414D337735652F6B724A71424F7659 PUSH21 0x424B724F3563716B6D47325257376E787768525874 PUSH8 0x64545637584A6F64 PUSH19 0x6C777655506159346D397A7863762B47364A6C PUSH22 0x64334F4C4F7977746A4F786E4A72667937763562365A CHAINID JUMPI CALLDATASIZE PUSH7 0x6C5769436A3672 PUSH16 0x584A6E556E7A4C4B3934594E39597236 0x2B MSTORE8 0x2F PUSH13 0x4970616A4F767A372B45414141 COINBASE COINBASE MSTORE8 SSTORE JUMP 0x4F MSTORE 0x4B CALLDATALOAD NUMBER MSIZE 0x49 0x49 RETURNDATASIZE PUSH10 0x56424F5277304B47676F COINBASE COINBASE COINBASE COINBASE 0x4E MSTORE8 SSTORE PUSH9 0x455567414141447341 COINBASE COINBASE COINBASE CALLDATACOPY TIMESTAMP COINBASE 0x4D COINBASE COINBASE COINBASE COINBASE CALLER NUMBER 0x2B 0x2B COINBASE COINBASE COINBASE COINBASE COINBASE GASLIMIT PUSH13 0x424D5645554141414344576B52 SSTORE 0x4C PUSH25 0x6B314769444E6C587176646C47484A41684541414141415852 MSTORE8 SLOAD PUSH13 0x4D41514F62595A674141415864 0x4A MSTORE GASLIMIT CHAINID SSTORE 0x4F 0x4D PUSH23 0x74302B46743943414D426D416B4A6E6A4E66514E676576 CODECOPY 0x4E CALLDATACOPY PUSH11 0x6F41643353415430333258 CALLDATASIZE JUMP ORIGIN 0x49 PUSH26 0x3468515632674A596F7765624364494D58396A563837626D3061 CALLVALUE PUSH8 0x3033636337724E4E PUSH11 0x676B536B6E35365951412B SLOAD GASLIMIT PUSH10 0x6F6A425A75694763374C PUSH14 0x51697A512F464E36526B4A6A7659 CALLDATACOPY PUSH17 0x643071556F4C3056343353733769747263 CODESIZE CALLDATACOPY PUSH10 0x4132747268687A344D31 PUSH18 0x366545756D6163524955627A53674438556B JUMP PUSH8 0x384B327546496475 PUSH19 0x6E64694C757A2B2B6D6354486C594D2B625A78 PUSH4 0x4A734F56 PUSH3 0x635062 ADDRESS ADDRESS ORIGIN 0x4E PUSH20 0x33474733735A32357345344E495A6B696942656D SLOAD JUMPI PUSH4 0x6E783462 0x4A CALLVALUE COINBASE TIMESTAMP MSTORE BASEFEE PUSH20 0x3141734331546D4E2B6677433431724B78316A45 DIFFICULTY PUSH26 0x4867756F45737447644B782B6A2F52785677495052666B614E55 0x2F JUMP PUSH21 0x627745624378376B30414C6F324271654E71544375 0x2F 0x49 GAS CALLDATASIZE CALLVALUE PUSH25 0x46653252534230584248326E4C466A6431385A697A47586C59 0x4D CALLDATACOPY CODESIZE PUSH21 0x5834576F2F736C776F627952627674566A4D307453 0x4F CALLDATASIZE PUSH20 0x686B6352765466314E616561346E357369746E6E MSIZE PUSH18 0x544C7A6E544D7967786E4E686A7548493350 CALLDATACOPY PUSH23 0x5A636A7031516F44356F32355A77396A6553324E495432 PUSH15 0x335966306E45663837466B32396B66 PUSH14 0x3562486E794C79785231336D6E6F PUSH13 0x527061307550334E56376E7333 0x2F PUSH8 0x4B4A535633424565 PUSH6 0x4C7051414141 COINBASE TIMESTAMP 0x4A MSTORE SSTORE CALLDATALOAD GASLIMIT PUSH19 0x6B4A6767673D3D6956424F5277304B47676F41 COINBASE COINBASE COINBASE 0x4E MSTORE8 SSTORE PUSH9 0x455567414141447341 COINBASE COINBASE COINBASE CALLDATACOPY TIMESTAMP COINBASE 0x4D COINBASE COINBASE COINBASE COINBASE CALLER NUMBER 0x2B 0x2B COINBASE COINBASE COINBASE COINBASE COINBASE SELFBALANCE CHAINID TIMESTAMP 0x4D JUMP GASLIMIT SSTORE COINBASE COINBASE COINBASE TIMESTAMP JUMP ORIGIN PUSH5 0x4531476941 PUSH19 0x6A5966506739696B5661312F386572646D7558 TIMESTAMP PC MSIZE POP PUSH4 0x41414141 COINBASE PC MSTORE MSTORE8 SLOAD PUSH13 0x4D41514F62595A674141416656 0x4A MSTORE GASLIMIT CHAINID SSTORE 0x4F 0x4D PUSH23 0x746B6C467932794151686A586359426648665155687138 0x2B PUSH24 0x755941565048324F787A364164594E6D65762F7076796767 MSTORE PUSH7 0x454E5776536768 MSIZE CODECOPY PUSH23 0x59594875662F746E5731392F5432482F364633586D6637 MSIZE POP CALLDATALOAD PUSH13 0x674871503171657343782F6E6F PUSH23 0x75475269556778666E372B4A684E636368724170373375 0x4B JUMP BASEFEE CHAINID 0x2B BASEFEE PUSH10 0x5062624A705352356969 0x4C PUSH27 0x666D486A725A58526D466F34737538324E794B79364D3541312B37 PUSH27 0x626D63655872444F416A4D393978626F776563564D7576777A6E42 PUSH9 0x374448747358446661 PUSH19 0x386E6A6A4E474B6B336D6F6266324C4D2B3863 BALANCE SLOAD CALLDATASIZE CALLDATASIZE SSTORE DIFFICULTY SELFBALANCE 0x4F PUSH6 0x6C436236654C 0x4D PUSH11 0x627A614577362F596E4C44 JUMPI PUSH26 0x5172586A454C7774664A3049705450677352785776586E537743 0x4F PUSH6 0x54513841684D TIMESTAMP PUSH6 0x766142525077 CALLER 0x4D CALLDATASIZE GASLIMIT POP 0x4E PUSH9 0x366F5A6A42524B3769 CALLER 0x2B PUSH8 0x5537744170464D4B POP PUSH10 0x6E396D7451586A616B65 GASLIMIT PUSH2 0x7565 POP PUSH2 0x7638 PUSH9 0x4C7235564F78625830 CALLDATASIZE 0x2B PUSH21 0x7A5944306F76696449764457507450537368615750 PUSH27 0x7348562F454476526B44463756766D447869344F6861335979654A CALLDATACOPY CALLVALUE PUSH19 0x76695041664C2F57375830704E4A38302B5455 PUSH19 0x492B5A713438715731525A3732556C6F464C64 PUSH5 0x71686B6751 CALLDATALOAD CODECOPY 0x4B PUSH11 0x626A785A686663316C3777 PUSH2 0x6E63 PUSH9 0x2B556763306D644D56 PUSH22 0x4F3144554745534970674E4A49304E5968546E555366 PUSH24 0x324B586343686E326F3756436B7461374342655976375932 GASLIMIT 0x4D JUMPI PUSH12 0x6542716D656A6B7957336B2F NUMBER GAS 0x4A PUSH4 0x792F5A67 CALLDATACOPY PUSH25 0x6D364F766157576D316C57657333584A4470724139524F6954 ORIGIN 0x2B PUSH3 0x756261 PUSH20 0x307842353438317036464A4E574F364379766D55 PUSH7 0x6D5354684B6252 ORIGIN PUSH26 0x6B48497A2B303165446D6337717439763536463233735969654A ADDRESS ORIGIN PUSH5 0x713377524B PUSH17 0x2F5265637732662F777350314351414141 COINBASE TIMESTAMP 0x4A MSTORE SSTORE CALLDATALOAD GASLIMIT PUSH19 0x6B4A6767673D3D6956424F5277304B47676F41 COINBASE COINBASE COINBASE 0x4E MSTORE8 SSTORE PUSH9 0x455567414141447341 COINBASE COINBASE COINBASE CALLDATACOPY COINBASE PUSH8 0x4D41414143345378 PUSH16 0x67414141414446424D56455541414142 PUSH15 0x526A4E554C786B3147694172377267 PC COINBASE COINBASE COINBASE COINBASE COINBASE PC MSTORE MSTORE8 SLOAD PUSH13 0x4D41514F62595A67414141555A 0x4A MSTORE GASLIMIT CHAINID SSTORE 0x4B 0x4D 0x2F PUSH21 0x7A6A464C77314151414F43447A49322F4A6F49752F PUSH16 0x704C61424B665578485357726F343250 CODESIZE MSTORE CALLER PUSH18 0x42307935445961705A58714336422F495938 PUSH12 0x4D367831454663584D544279 CODESIZE PUSH21 0x375359662B42412F65335833764F446A3444346F54 PUSH6 0x6C38482F5036 CHAINID PUSH10 0x36762B77354662325047 PUSH24 0x733677345349386257753432424763584639714449434458 CODECOPY PUSH4 0x78345041 CALLDATASIZE PUSH8 0x33752B4E6E64584E PUSH18 0x707A667A55506A7A567155624448744C5462 PUSH13 0x6C48552B46654B6C66474C736F PUSH7 0x63726642706268 MSTORE MSTORE PUSH10 0x58533459343162524F4A PUSH5 0x6954563477 PUSH3 0x6A6365 CALLDATALOAD 0x4C 0x4B MSTORE8 PUSH20 0x755463342F617363536A6A694A79363346454F4D 0x4D CHAINID CALLDATACOPY PUSH6 0x45636636324F ORIGIN POP TIMESTAMP PUSH27 0x69475059347771706F6A6645457A6C7A55786A6366795A6863592B PUSH20 0x744B754F753834673837447A5538354532336970 PUSH7 0x6F6A4A55354357 PUSH4 0x6B7A3034 MSIZE PUSH22 0x6F51633741704C355874574E764E6A616D6A624A776D PUSH7 0x674657346B6574 TIMESTAMP BALANCE GASLIMIT MSTORE8 PUSH12 0x564D2F6E526B2F552F6B3563 0x4E CALLDATASIZE PUSH20 0x396336554D32306E797454645752707150367236 PUSH16 0x56313139725358376433473255545673 ADDRESS PUSH27 0x5A776C513777754B343958376A5034394176492B392B3065394141 COINBASE COINBASE COINBASE GASLIMIT PUSH13 0x46546B5375516D43436956424F MSTORE PUSH24 0x304B47676F414141414E5355684555674141414477414141 COINBASE CODESIZE TIMESTAMP COINBASE 0x4D COINBASE COINBASE COINBASE DIFFICULTY 0x49 ADDRESS PUSH20 0x5242414141414D46424D56455541414143575830 SELFBALANCE BASEFEE JUMP SLOAD PUSH20 0x31476941794D69565A57566C4F546B34364F6978 0x4F PUSH16 0x45372F49794D5448526D6C704B443861 JUMPI NUMBER SELFBALANCE JUMP DIFFICULTY PUSH18 0x51577A364655546255766965364141414141 PC MSTORE MSTORE8 SLOAD PUSH13 0x4D41514F62595A674141415956 0x4A MSTORE GASLIMIT CHAINID SSTORE 0x4F 0x4D PUSH21 0x694741576A5942514D456D4273624143696D49324E SSTORE MSIZE MSTORE8 PUSH9 0x596F41363653656C59 MSTORE8 COINBASE 0x4B COINBASE CALLER PUSH8 0x68577A6676445334 NUMBER JUMP PUSH17 0x677646437855794D525656323561584C63 ADDRESS PUSH22 0x5546794173457269437662493768306C336953656750 POP CALLVALUE COINBASE JUMP CODESIZE PUSH19 0x7A4D7855317348387067337638795876336445 MSTORE PUSH18 0x654F534A7238614B4F73556541776A534953 ORIGIN 0x4C 0x2F 0x4D SELFBALANCE POP MSIZE PC 0x49 COINBASE 0x4C 0x49 PUSH12 0x43776C35416A615A77506645 PUSH12 0x7541595758724473316E466D JUMPI PUSH7 0x73716248544F51 CALLVALUE PUSH12 0x795272694478486C3962686F COINBASE PUSH26 0x6A382B6A696A6E6F323076524D4A6D54334C5948795245702F65 PUSH15 0x37454758753252637768472F686D79 CALLER PUSH13 0x69326434444954316D31374F4A 0x4F PUSH2 0x4765 MSIZE PUSH7 0x5857474D6F6876 JUMPI PUSH5 0x47526B7A36 MSIZE SELFBALANCE MSTORE8 PUSH17 0x6750316C397A38627A367A5A6D5A377577 PUSH24 0x704E74384C616A67466C4E3744784B33764B706558704E45 ORIGIN PUSH15 0x30336D6170765052364F4A4B786D77 PUSH14 0x4256625945574F37336531325736 PUSH14 0x767372747432342B75613975756B 0x2F PUSH10 0x5270704147786E2B4C48 PUSH8 0x516F582B506D4F52 CALLVALUE PUSH23 0x37324738345575594D616D6171716D62576F764D797361 CALLER PUSH2 0x316A POP PUSH10 0x38566D735477706E6F48 0x4A PUSH24 0x2B506D61586C53317343424C382F7A53706D467A34634C57 ORIGIN CHAINID CALLDATACOPY JUMPI GAS JUMP JUMP PC SLOAD PUSH2 0x4855 PUSH12 0x75707936715264735843384B 0x2F PUSH7 0x45574443727765 MLOAD CODESIZE GAS CODESIZE 0x4A PUSH24 0x6E7650504C443150415A2B414F4874686862515479385641 COINBASE COINBASE COINBASE COINBASE GASLIMIT PUSH13 0x46546B5375516D43436956424F MSTORE PUSH24 0x304B47676F414141414E5355684555674141414473414141 COINBASE CALLDATACOPY TIMESTAMP COINBASE 0x4D COINBASE COINBASE COINBASE COINBASE CALLER NUMBER 0x2B 0x2B COINBASE COINBASE COINBASE COINBASE COINBASE DIFFICULTY BALANCE TIMESTAMP 0x4D JUMP GASLIMIT SSTORE COINBASE COINBASE COINBASE TIMESTAMP CALLDATACOPY CALLDATASIZE CHAINID TIMESTAMP PUSH2 0x7754 GASLIMIT BALANCE SELFBALANCE PUSH10 0x444E2F726B6563464278 COINBASE COINBASE COINBASE COINBASE COINBASE PC MSTORE MSTORE8 SLOAD PUSH13 0x4D41514F62595A674141415974 0x4A MSTORE GASLIMIT CHAINID SSTORE 0x4F 0x4D PUSH23 0x74303432747044414D424F424971574473626342324137 CHAINID DIFFICULTY COINBASE CALLVALUE PUSH11 0x7276365A7A34504C345754 PUSH18 0x3446326C46346F2F52494C4755332F586672 PUSH11 0x34767239672F765A56532B CODECOPY PUSH17 0x66627169726B31737077634A6F58377951 MLOAD CALLDATACOPY PUSH8 0x554A374273332B48 0x4D PUSH11 0x6C5246356A2F7447563731 GAS 0x4D PC ORIGIN GAS 0x49 PUSH16 0x776A4736456D547934516A75624C7131 PUSH22 0x4774373130783573596D4766567465776F4D414C3536 0x2F JUMP PUSH17 0x42656D524A693271736B49656558786146 CODECOPY PUSH4 0x57316B4F PUSH17 0x6C5A6C5A3931794F746E4B77674D506C6D SLOAD PUSH7 0x536B7865724467 PUSH3 0x472F6C PUSH8 0x6C76436474386D66 CALLDATALOAD PUSH22 0x51495056674E4C467A58483835614B4F412B6E707835 POP PUSH24 0x53657A444A592F6347785A674143554C5271343570486831 BALANCE CALLDATALOAD 0x4F POP JUMP MSTORE8 PUSH22 0x7154654F5138435A614C78516B5663515977625A2F76 0x4A ORIGIN PUSH7 0x7A43664C422F4D CODESIZE PUSH22 0x6F4F7A674635506A38734F6467444138475A41793279 PC JUMP PUSH15 0x416E5377547635356154767A796237 PUSH27 0x314249366D69636652576F58466F77566732336630705644393948 TIMESTAMP PUSH20 0x752F74354A707842657A67414454446C372B5473 ORIGIN PUSH16 0x4736746933454B67366C79755459725A CHAINID PUSH3 0x755847 NUMBER BALANCE 0x4E PUSH4 0x3252354D PC PUSH5 0x556D683271 PC NUMBER CODECOPY PUSH4 0x2F70446D PUSH2 0x3350 0x4E PUSH24 0x2F5962726D6D7831636F73374C792B4D3757516B742F4C76 0x2F PUSH13 0x72716B3158702B6C574A4B7669 PUSH20 0x687371645366465458764847754C46655753662F TIMESTAMP GAS MSTORE PUSH19 0x576F7A36764867344141414141456C46546B53 PUSH22 0x516D43436956424F5277304B47676F414141414E5355 PUSH9 0x455567414141447741 COINBASE COINBASE COINBASE CODESIZE TIMESTAMP COINBASE 0x4D COINBASE COINBASE COINBASE DIFFICULTY 0x49 ADDRESS PUSH20 0x524241414141456C424D564555414141436E6131 PUSH13 0x79514441314769444A6B6F4A4D 0x4D DIFFICULTY GAS PUSH27 0x4E6462734141414141585253546C4D41514F62595A674141415842 0x4A MSTORE GASLIMIT CHAINID SSTORE 0x4F 0x4D PUSH23 0x74307475746F7A41516747464C727541667034455A4772 NUMBER CALLDATALOAD CHAINID 0x49 COINBASE PUSH16 0x4161582F566862624A4D59734B2B3337 0x4F PUSH4 0x35447876 PUSH12 0x794E34543750542F31544331 CALLVALUE ADDRESS PUSH21 0x314E30546B2F75615635303257663372747A797A74 BASEFEE PUSH5 0x2F5745784A 0x4B PUSH27 0x39787A4647796347434456694A4E7953312B4D3368687A6D623135 CODECOPY 0x2B PUSH16 0x776B6944352F49436A626A5330686359 PUSH13 0x2B393071776E76307167794C54 0x4F 0x2F PUSH19 0x336441536A647455396B6C764B6443796F4F56 0x49 PUSH6 0x6D4346503973 MSTORE8 JUMPI 0x49 CHAINID SSTORE 0x4F GASLIMIT 0x4F PUSH27 0x4C303463446C556D464B35556E6E4449505348357179706735484C PUSH18 0x587A466859476D766D44495748592B334453 PUSH22 0x7653504266596A71437978426E44476838584E71386E 0x4D CALLDATASIZE PUSH26 0x49427253796B4552356A565457796D4178737A636F5845593556 ADDRESS CHAINID COINBASE 0x4B PUSH10 0x736F3535727558415730 PUSH20 0x554264732F336449487A65444179685A36344D34 CALLDATALOAD ORIGIN PUSH13 0x63657159776D5755632F48436E 0x4C PUSH24 0x43485A667A66642F6D5A393563783656586D61566E627932 CALLDATALOAD PUSH17 0x567638337656766C755061754E55753158 PUSH20 0x324E57674D4A74593469566D66626161685A3274 PUSH20 0x4858737974324A757A457938736C335A726A7A66 0x4F MSTORE PC PUSH6 0x4F6F364E2F5A PC CODECOPY 0x2B PUSH20 0x79762B4A39734A76316F6176626847557A764C4D PUSH3 0x5A5050 ORIGIN 0x4C MLOAD 0x2B POP CALLDATACOPY CALLER PUSH10 0x662F4159593256433973 BASEFEE 0x4D PUSH14 0x624141414141456C46546B537551 PUSH14 0x43436956424F5277304B47676F41 COINBASE COINBASE COINBASE 0x4E MSTORE8 SSTORE PUSH9 0x455567414141447741 COINBASE COINBASE COINBASE CODESIZE TIMESTAMP COINBASE 0x4D COINBASE COINBASE COINBASE DIFFICULTY 0x49 ADDRESS PUSH20 0x5242414141414431424D56455541414144323362 PUSH15 0x6C76594931476944343463444A5473 CHAINID 0x4A COINBASE COINBASE COINBASE COINBASE COINBASE PC MSTORE MSTORE8 SLOAD PUSH13 0x4D41514F62595A67414141554A 0x4A MSTORE GASLIMIT CHAINID SSTORE 0x4F 0x4D PUSH23 0x743039474E7779414D426D416B4A766A744C6D427A4139 PUSH9 0x6B6774372B5178302B MSTORE8 PUSH9 0x4D4344783267524D67 ORIGIN PUSH15 0x77784555644A33664D642B48434E73 CODESIZE PUSH4 0x42684B65 SSTORE JUMPI PUSH11 0x6C557A2F4E644C5370562F SELFBALANCE 0x4C PUSH2 0x776B ADDRESS 0x4D CALLVALUE 0x49 PUSH13 0x6834625359767A396A3855566D JUMPI PUSH5 0x6B6470547A TIMESTAMP PUSH18 0x65336A5A753142424F377568564C6C78686A PUSH18 0x35756D5657466C62596A597445752B566F70 PUSH19 0x726A4E693033326A41315246484C3268685674 PUSH9 0x7858577A6862387335 PUSH12 0x5754707A577831634F6C4E6E CALLDATASIZE JUMP PUSH24 0x486537436A7A5741574267667A594A6954674C537A746C51 CALLVALUE CALLVALUE 0x2B MLOAD NUMBER 0x4B COINBASE NUMBER 0x4A PUSH18 0x78482B692F6F705A334159514D4552415468 PUSH20 0x34755A6B725A44516D65454378654357456D5069 COINBASE PUSH17 0x774D314A56707343774D6D62734A4D344F PUSH23 0x374C687738686472734C365930346363537A464B464C58 PUSH15 0x65766E695665354D6B63394D6E5756 PUSH13 0x4652333735636849722B796B43 PUSH9 0x6F735542572B733437 0x2F JUMPI CALLDATACOPY PUSH5 0x63336B6674 JUMPI GASLIMIT 0x2F JUMPI PUSH14 0x544F4337563047773259756C7865 GAS ORIGIN PC PUSH7 0x4D4D39764A2B63 CALLDATASIZE PUSH18 0x6447565250546B2F6F54497A4B5234324B75 PUSH24 0x594538396E442F3444665A524D547635794B723041414141 COINBASE MSTORE8 SSTORE JUMP 0x4F MSTORE 0x4B CALLDATALOAD NUMBER MSIZE 0x49 0x49 RETURNDATASIZE PUSH10 0x56424F5277304B47676F COINBASE COINBASE COINBASE COINBASE 0x4E MSTORE8 SSTORE PUSH9 0x455567414141447741 COINBASE COINBASE COINBASE CODESIZE TIMESTAMP COINBASE 0x4D COINBASE COINBASE COINBASE DIFFICULTY 0x49 ADDRESS PUSH20 0x5242414141414431424D56455541414142373646 TIMESTAMP PUSH2 0x7754 GASLIMIT BALANCE SELFBALANCE PUSH10 0x444E2F726B6563464278 COINBASE COINBASE COINBASE COINBASE COINBASE PC MSTORE MSTORE8 SLOAD PUSH13 0x4D41514F62595A674141415970 0x4A MSTORE GASLIMIT CHAINID SSTORE 0x4F 0x4D PUSH23 0x743034734E7044414D424E424971574473626342324137 CHAINID DIFFICULTY COINBASE CALLVALUE PUSH11 0x7276365A7A344C4A386C68 0x49 PUSH22 0x306F72456A394567735A542F362F3936583331655872 CHAINID 0x2F PUSH6 0x69756C397257 0x2F CALLER CHAINID TIMESTAMP PC 0x4A CALLDATACOPY PUSH5 0x53676F5852 PUSH7 0x6E676868334170 SLOAD PUSH14 0x445A66734F5A48616D4B7A482F61 0x4D CALLDATACOPY PUSH27 0x717959727479525268474E30494D336C7768585932585672644E4C PUSH27 0x72707A3359784D492B72613568515945587A6C2B725353394D6954 TIMESTAMP PUSH21 0x565A4D523873726A3058363474724963544B334B7A PUSH19 0x726C644C4B56685163654C4D6D2B6C5A693857 BASEFEE GASLIMIT ORIGIN 0x4E PUSH23 0x4C424C4F453762354D2F7A636B5265724161574C697558 CODESIZE CALLDATALOAD PUSH2 0x4B4F COINBASE 0x2B PUSH15 0x707835507753657A444A592F634778 GAS PUSH8 0x4143554C52713435 PUSH17 0x48683131354F505653757154654F513843 GAS PUSH2 0x4C78 MLOAD PUSH12 0x5663515977625A2F764A3266 PUSH27 0x43664C442F4D73756F4F7A67463550683832584D77686763444D67 PUSH3 0x62354C PUSH16 0x7A415470594A33396632733538737538 CODESIZE PUSH21 0x59534F35736C486B64714642575046594E7533644F PC MLOAD PUSH7 0x58537737487337 PUSH22 0x575A6341547334414D337735652F6B724A71424F7659 PUSH21 0x424B724F3563716B6D47325257376E787768525874 PUSH8 0x64545637584A6F64 PUSH19 0x6C777655506159346D397A7863762B47364A6C PUSH22 0x64334F4C4F7977746A4F786E4A72667937763562365A CHAINID JUMPI CALLDATASIZE PUSH7 0x6C5769436A3672 PUSH16 0x584A6E556E7A4C4B3934594E39597236 0x2B MSTORE8 0x2F PUSH13 0x4970616A4F767A372B45414141 COINBASE COINBASE MSTORE8 SSTORE JUMP 0x4F MSTORE 0x4B CALLDATALOAD NUMBER MSIZE 0x49 0x49 RETURNDATASIZE PUSH10 0x56424F5277304B47676F COINBASE COINBASE COINBASE COINBASE 0x4E MSTORE8 SSTORE PUSH9 0x455567414141447741 COINBASE COINBASE COINBASE CODESIZE TIMESTAMP COINBASE 0x4D COINBASE COINBASE COINBASE DIFFICULTY 0x49 ADDRESS PUSH20 0x5242414141414431424D56455541414143453166 CODECOPY COINBASE PUSH17 0x7563314769446D39762F626165624E4141 COINBASE COINBASE COINBASE PC MSTORE MSTORE8 SLOAD PUSH13 0x4D41514F62595A674141415970 0x4A MSTORE GASLIMIT CHAINID SSTORE 0x4F 0x4D PUSH23 0x743034734E7044414D424E424971574473626342324137 CHAINID DIFFICULTY COINBASE CALLVALUE PUSH11 0x7276365A7A344C4A386C68 0x49 PUSH22 0x306F72456A394567735A542F362F3936583331655872 CHAINID 0x2F PUSH6 0x69756C397257 0x2F CALLER CHAINID TIMESTAMP PC 0x4A CALLDATACOPY PUSH5 0x53676F5852 PUSH7 0x6E676868334170 SLOAD PUSH14 0x445A66734F5A48616D4B7A482F61 0x4D CALLDATACOPY PUSH27 0x717959727479525268474E30494D336C7768585932585672644E4C PUSH27 0x72707A3359784D492B72613568515945587A6C2B725353394D6954 TIMESTAMP PUSH21 0x565A4D523873726A3058363474724963544B334B7A PUSH19 0x726C644C4B56685163654C4D6D2B6C5A693857 BASEFEE GASLIMIT ORIGIN 0x4E PUSH23 0x4C424C4F453762354D2F7A636B5265724161574C697558 CODESIZE CALLDATALOAD PUSH2 0x4B4F COINBASE 0x2B PUSH15 0x707835507753657A444A592F634778 GAS PUSH8 0x4143554C52713435 PUSH17 0x48683131354F505653757154654F513843 GAS PUSH2 0x4C78 MLOAD PUSH12 0x5663515977625A2F764A3266 PUSH27 0x43664C442F4D73756F4F7A67463550683832584D77686763444D67 PUSH3 0x62354C PUSH16 0x7A415470594A33396632733538737538 CODESIZE PUSH21 0x59534F35736C486B64714642575046594E7533644F PC MLOAD PUSH7 0x58537737487337 PUSH22 0x575A6341547334414D337735652F6B724A71424F7659 PUSH21 0x424B724F3563716B6D47325257376E787768525874 PUSH8 0x64545637584A6F64 PUSH19 0x6C777655506159346D397A7863762B47364A6C PUSH22 0x64334F4C4F7977746A4F786E4A72667937763562365A CHAINID JUMPI CALLDATASIZE PUSH7 0x6C5769436A3672 PUSH16 0x584A6E556E7A4C4B3934594E39597236 0x2B MSTORE8 0x2F PUSH13 0x4970616A4F767A372B45414141 COINBASE COINBASE MSTORE8 SSTORE JUMP 0x4F MSTORE 0x4B CALLDATALOAD NUMBER MSIZE 0x49 0x49 RETURNDATASIZE LOG1 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP EXP ",
              "sourceMap": "2032:18863:0:-:0;;;;;;;;;;;;;;;;;;;"
            },
            "deployedBytecode": {
              "functionDebugData": {
                "@blue_slime_56": {
                  "entryPoint": 1182,
                  "id": 56,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@bubble_gum_50": {
                  "entryPoint": 2141,
                  "id": 50,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@cosmic_101": {
                  "entryPoint": 2203,
                  "id": 101,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@getBlueSlime_160": {
                  "entryPoint": 949,
                  "id": 160,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "@getBubbleGum_144": {
                  "entryPoint": 2300,
                  "id": 144,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "@getCosmic_280": {
                  "entryPoint": 2265,
                  "id": 280,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "@getGorilla_248": {
                  "entryPoint": 1869,
                  "id": 248,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "@getGreenGoblin_176": {
                  "entryPoint": 1349,
                  "id": 176,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "@getGreenSlime_152": {
                  "entryPoint": 1539,
                  "id": 152,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "@getHand1_112": {
                  "entryPoint": 1904,
                  "id": 112,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "@getHand2_120": {
                  "entryPoint": 1768,
                  "id": 120,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "@getHand3_128": {
                  "entryPoint": 1733,
                  "id": 128,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "@getHand4_136": {
                  "entryPoint": 984,
                  "id": 136,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "@getPirate_288": {
                  "entryPoint": 2071,
                  "id": 288,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "@getPlastic_232": {
                  "entryPoint": 1213,
                  "id": 232,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "@getRedGoblin_184": {
                  "entryPoint": 1147,
                  "id": 184,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "@getSkeleton_224": {
                  "entryPoint": 1019,
                  "id": 224,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "@getSnowTiger_216": {
                  "entryPoint": 1283,
                  "id": 216,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "@getSquatch_264": {
                  "entryPoint": 1939,
                  "id": 264,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "@getSteve_272": {
                  "entryPoint": 2432,
                  "id": 272,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "@getSully_200": {
                  "entryPoint": 1248,
                  "id": 200,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "@getTiger_208": {
                  "entryPoint": 2366,
                  "id": 208,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "@getVitiligo_168": {
                  "entryPoint": 2106,
                  "id": 168,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "@getYellowGoblin_192": {
                  "entryPoint": 1803,
                  "id": 192,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "@getYeti_256": {
                  "entryPoint": 1574,
                  "id": 256,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "@getZombie_240": {
                  "entryPoint": 2005,
                  "id": 240,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "@gorilla_89": {
                  "entryPoint": 1116,
                  "id": 89,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@green_goblin_62": {
                  "entryPoint": 1671,
                  "id": 62,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@green_slime_53": {
                  "entryPoint": 2335,
                  "id": 53,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@pirate_104": {
                  "entryPoint": 1446,
                  "id": 104,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@plastic_83": {
                  "entryPoint": 1085,
                  "id": 83,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@red_goblin_65": {
                  "entryPoint": 2040,
                  "id": 65,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@skeleton_80": {
                  "entryPoint": 1702,
                  "id": 80,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@skin_tone_1_47": {
                  "entryPoint": 1838,
                  "id": 47,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@skin_tone_2_44": {
                  "entryPoint": 2401,
                  "id": 44,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@skin_tone_3_41": {
                  "entryPoint": 1640,
                  "id": 41,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@skin_tone_4_38": {
                  "entryPoint": 2234,
                  "id": 38,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@snow_tiger_77": {
                  "entryPoint": 1054,
                  "id": 77,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@squatch_95": {
                  "entryPoint": 1384,
                  "id": 95,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@steve_98": {
                  "entryPoint": 1609,
                  "id": 98,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@sully_71": {
                  "entryPoint": 1477,
                  "id": 71,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@tiger_74": {
                  "entryPoint": 1415,
                  "id": 74,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@vitiligo_59": {
                  "entryPoint": 2172,
                  "id": 59,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@yellow_goblin_68": {
                  "entryPoint": 1508,
                  "id": 68,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@yeti_92": {
                  "entryPoint": 1318,
                  "id": 92,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@zombie_86": {
                  "entryPoint": 1974,
                  "id": 86,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
                  "entryPoint": 2467,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                }
              },
              "generatedSources": [
                {
                  "ast": {
                    "nodeType": "YulBlock",
                    "src": "0:613:2",
                    "statements": [
                      {
                        "nodeType": "YulBlock",
                        "src": "6:3:2",
                        "statements": []
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "135:476:2",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "145:12:2",
                              "value": {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "155:2:2",
                                "type": "",
                                "value": "32"
                              },
                              "variables": [
                                {
                                  "name": "_1",
                                  "nodeType": "YulTypedName",
                                  "src": "149:2:2",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "173:9:2"
                                  },
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "184:2:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "166:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "166:21:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "166:21:2"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "196:27:2",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "216:6:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "210:5:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "210:13:2"
                              },
                              "variables": [
                                {
                                  "name": "length",
                                  "nodeType": "YulTypedName",
                                  "src": "200:6:2",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "243:9:2"
                                      },
                                      {
                                        "name": "_1",
                                        "nodeType": "YulIdentifier",
                                        "src": "254:2:2"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "239:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "239:18:2"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "259:6:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "232:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "232:34:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "232:34:2"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "275:10:2",
                              "value": {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "284:1:2",
                                "type": "",
                                "value": "0"
                              },
                              "variables": [
                                {
                                  "name": "i",
                                  "nodeType": "YulTypedName",
                                  "src": "279:1:2",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "344:90:2",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "arguments": [
                                                {
                                                  "name": "headStart",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "373:9:2"
                                                },
                                                {
                                                  "name": "i",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "384:1:2"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "add",
                                                "nodeType": "YulIdentifier",
                                                "src": "369:3:2"
                                              },
                                              "nodeType": "YulFunctionCall",
                                              "src": "369:17:2"
                                            },
                                            {
                                              "kind": "number",
                                              "nodeType": "YulLiteral",
                                              "src": "388:2:2",
                                              "type": "",
                                              "value": "64"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "add",
                                            "nodeType": "YulIdentifier",
                                            "src": "365:3:2"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "365:26:2"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "arguments": [
                                                {
                                                  "arguments": [
                                                    {
                                                      "name": "value0",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "407:6:2"
                                                    },
                                                    {
                                                      "name": "i",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "415:1:2"
                                                    }
                                                  ],
                                                  "functionName": {
                                                    "name": "add",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "403:3:2"
                                                  },
                                                  "nodeType": "YulFunctionCall",
                                                  "src": "403:14:2"
                                                },
                                                {
                                                  "name": "_1",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "419:2:2"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "add",
                                                "nodeType": "YulIdentifier",
                                                "src": "399:3:2"
                                              },
                                              "nodeType": "YulFunctionCall",
                                              "src": "399:23:2"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "mload",
                                            "nodeType": "YulIdentifier",
                                            "src": "393:5:2"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "393:30:2"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "358:6:2"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "358:66:2"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "358:66:2"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "i",
                                    "nodeType": "YulIdentifier",
                                    "src": "305:1:2"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "308:6:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "lt",
                                  "nodeType": "YulIdentifier",
                                  "src": "302:2:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "302:13:2"
                              },
                              "nodeType": "YulForLoop",
                              "post": {
                                "nodeType": "YulBlock",
                                "src": "316:19:2",
                                "statements": [
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "318:15:2",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "i",
                                          "nodeType": "YulIdentifier",
                                          "src": "327:1:2"
                                        },
                                        {
                                          "name": "_1",
                                          "nodeType": "YulIdentifier",
                                          "src": "330:2:2"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "323:3:2"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "323:10:2"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "i",
                                        "nodeType": "YulIdentifier",
                                        "src": "318:1:2"
                                      }
                                    ]
                                  }
                                ]
                              },
                              "pre": {
                                "nodeType": "YulBlock",
                                "src": "298:3:2",
                                "statements": []
                              },
                              "src": "294:140:2"
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "468:66:2",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "arguments": [
                                                {
                                                  "name": "headStart",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "497:9:2"
                                                },
                                                {
                                                  "name": "length",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "508:6:2"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "add",
                                                "nodeType": "YulIdentifier",
                                                "src": "493:3:2"
                                              },
                                              "nodeType": "YulFunctionCall",
                                              "src": "493:22:2"
                                            },
                                            {
                                              "kind": "number",
                                              "nodeType": "YulLiteral",
                                              "src": "517:2:2",
                                              "type": "",
                                              "value": "64"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "add",
                                            "nodeType": "YulIdentifier",
                                            "src": "489:3:2"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "489:31:2"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "522:1:2",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "482:6:2"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "482:42:2"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "482:42:2"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "i",
                                    "nodeType": "YulIdentifier",
                                    "src": "449:1:2"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "452:6:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "446:2:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "446:13:2"
                              },
                              "nodeType": "YulIf",
                              "src": "443:91:2"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "543:62:2",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "559:9:2"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "name": "length",
                                                "nodeType": "YulIdentifier",
                                                "src": "578:6:2"
                                              },
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "586:2:2",
                                                "type": "",
                                                "value": "31"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "add",
                                              "nodeType": "YulIdentifier",
                                              "src": "574:3:2"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "574:15:2"
                                          },
                                          {
                                            "arguments": [
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "595:2:2",
                                                "type": "",
                                                "value": "31"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "not",
                                              "nodeType": "YulIdentifier",
                                              "src": "591:3:2"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "591:7:2"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "and",
                                          "nodeType": "YulIdentifier",
                                          "src": "570:3:2"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "570:29:2"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "555:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "555:45:2"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "602:2:2",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "551:3:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "551:54:2"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "543:4:2"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "104:9:2",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "115:6:2",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "126:4:2",
                            "type": ""
                          }
                        ],
                        "src": "14:597:2"
                      }
                    ]
                  },
                  "contents": "{\n    { }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, _1)\n        let length := mload(value0)\n        mstore(add(headStart, _1), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        if gt(i, length)\n        {\n            mstore(add(add(headStart, length), 64), 0)\n        }\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n}",
                  "id": 2,
                  "language": "Yul",
                  "name": "#utility.yul"
                }
              ],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x22A JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x85EAD00A GT PUSH2 0x12C JUMPI DUP1 PUSH4 0x85EAD00A EQ PUSH2 0x2FD JUMPI DUP1 PUSH4 0x888A0B77 EQ PUSH2 0x305 JUMPI DUP1 PUSH4 0x8A99B7FB EQ PUSH2 0x30D JUMPI DUP1 PUSH4 0x8E4F449B EQ PUSH2 0x315 JUMPI DUP1 PUSH4 0x96B678A4 EQ PUSH2 0x31D JUMPI DUP1 PUSH4 0x99726EC2 EQ PUSH2 0x325 JUMPI DUP1 PUSH4 0x9B45D56D EQ PUSH2 0x32D JUMPI DUP1 PUSH4 0x9E15F495 EQ PUSH2 0x335 JUMPI DUP1 PUSH4 0xA1B9BB53 EQ PUSH2 0x33D JUMPI DUP1 PUSH4 0xA592A451 EQ PUSH2 0x345 JUMPI DUP1 PUSH4 0xAC81D87B EQ PUSH2 0x34D JUMPI DUP1 PUSH4 0xB3F22AF2 EQ PUSH2 0x355 JUMPI DUP1 PUSH4 0xC305B2B2 EQ PUSH2 0x35D JUMPI DUP1 PUSH4 0xC63FB76F EQ PUSH2 0x365 JUMPI DUP1 PUSH4 0xC7C866B2 EQ PUSH2 0x36D JUMPI DUP1 PUSH4 0xD54807E7 EQ PUSH2 0x375 JUMPI DUP1 PUSH4 0xDA2643BC EQ PUSH2 0x37D JUMPI DUP1 PUSH4 0xE6595F42 EQ PUSH2 0x385 JUMPI DUP1 PUSH4 0xE7D01D7A EQ PUSH2 0x38D JUMPI DUP1 PUSH4 0xECC53B5E EQ PUSH2 0x395 JUMPI DUP1 PUSH4 0xECDE9067 EQ PUSH2 0x39D JUMPI DUP1 PUSH4 0xED6F1156 EQ PUSH2 0x3A5 JUMPI DUP1 PUSH4 0xFBE154BB EQ PUSH2 0x3AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x20A41BE EQ PUSH2 0x22F JUMPI DUP1 PUSH4 0x6756729 EQ PUSH2 0x24D JUMPI DUP1 PUSH4 0x80576E1 EQ PUSH2 0x255 JUMPI DUP1 PUSH4 0xE2A8038 EQ PUSH2 0x25D JUMPI DUP1 PUSH4 0xF114E0C EQ PUSH2 0x265 JUMPI DUP1 PUSH4 0x15C466A6 EQ PUSH2 0x26D JUMPI DUP1 PUSH4 0x1E7B565B EQ PUSH2 0x275 JUMPI DUP1 PUSH4 0x233AB6B6 EQ PUSH2 0x27D JUMPI DUP1 PUSH4 0x240CF269 EQ PUSH2 0x285 JUMPI DUP1 PUSH4 0x2817E5BE EQ PUSH2 0x28D JUMPI DUP1 PUSH4 0x32E8E544 EQ PUSH2 0x295 JUMPI DUP1 PUSH4 0x343E613A EQ PUSH2 0x29D JUMPI DUP1 PUSH4 0x34739B2A EQ PUSH2 0x2A5 JUMPI DUP1 PUSH4 0x43CF51FF EQ PUSH2 0x2AD JUMPI DUP1 PUSH4 0x44D333FF EQ PUSH2 0x2B5 JUMPI DUP1 PUSH4 0x45AAD66D EQ PUSH2 0x2BD JUMPI DUP1 PUSH4 0x4E9E4CFA EQ PUSH2 0x2C5 JUMPI DUP1 PUSH4 0x5408E269 EQ PUSH2 0x2CD JUMPI DUP1 PUSH4 0x557DD064 EQ PUSH2 0x2D5 JUMPI DUP1 PUSH4 0x6941464F EQ PUSH2 0x2DD JUMPI DUP1 PUSH4 0x697E9262 EQ PUSH2 0x2E5 JUMPI DUP1 PUSH4 0x7F478D38 EQ PUSH2 0x2ED JUMPI DUP1 PUSH4 0x832E548A EQ PUSH2 0x2F5 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x237 PUSH2 0x3B5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x244 SWAP2 SWAP1 PUSH2 0x9A3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x237 PUSH2 0x3D8 JUMP JUMPDEST PUSH2 0x237 PUSH2 0x3FB JUMP JUMPDEST PUSH2 0x237 PUSH2 0x41E JUMP JUMPDEST PUSH2 0x237 PUSH2 0x43D JUMP JUMPDEST PUSH2 0x237 PUSH2 0x45C JUMP JUMPDEST PUSH2 0x237 PUSH2 0x47B JUMP JUMPDEST PUSH2 0x237 PUSH2 0x49E JUMP JUMPDEST PUSH2 0x237 PUSH2 0x4BD JUMP JUMPDEST PUSH2 0x237 PUSH2 0x4E0 JUMP JUMPDEST PUSH2 0x237 PUSH2 0x503 JUMP JUMPDEST PUSH2 0x237 PUSH2 0x526 JUMP JUMPDEST PUSH2 0x237 PUSH2 0x545 JUMP JUMPDEST PUSH2 0x237 PUSH2 0x568 JUMP JUMPDEST PUSH2 0x237 PUSH2 0x587 JUMP JUMPDEST PUSH2 0x237 PUSH2 0x5A6 JUMP JUMPDEST PUSH2 0x237 PUSH2 0x5C5 JUMP JUMPDEST PUSH2 0x237 PUSH2 0x5E4 JUMP JUMPDEST PUSH2 0x237 PUSH2 0x603 JUMP JUMPDEST PUSH2 0x237 PUSH2 0x626 JUMP JUMPDEST PUSH2 0x237 PUSH2 0x649 JUMP JUMPDEST PUSH2 0x237 PUSH2 0x668 JUMP JUMPDEST PUSH2 0x237 PUSH2 0x687 JUMP JUMPDEST PUSH2 0x237 PUSH2 0x6A6 JUMP JUMPDEST PUSH2 0x237 PUSH2 0x6C5 JUMP JUMPDEST PUSH2 0x237 PUSH2 0x6E8 JUMP JUMPDEST PUSH2 0x237 PUSH2 0x70B JUMP JUMPDEST PUSH2 0x237 PUSH2 0x72E JUMP JUMPDEST PUSH2 0x237 PUSH2 0x74D JUMP JUMPDEST PUSH2 0x237 PUSH2 0x770 JUMP JUMPDEST PUSH2 0x237 PUSH2 0x793 JUMP JUMPDEST PUSH2 0x237 PUSH2 0x7B6 JUMP JUMPDEST PUSH2 0x237 PUSH2 0x7D5 JUMP JUMPDEST PUSH2 0x237 PUSH2 0x7F8 JUMP JUMPDEST PUSH2 0x237 PUSH2 0x817 JUMP JUMPDEST PUSH2 0x237 PUSH2 0x83A JUMP JUMPDEST PUSH2 0x237 PUSH2 0x85D JUMP JUMPDEST PUSH2 0x237 PUSH2 0x87C JUMP JUMPDEST PUSH2 0x237 PUSH2 0x89B JUMP JUMPDEST PUSH2 0x237 PUSH2 0x8BA JUMP JUMPDEST PUSH2 0x237 PUSH2 0x8D9 JUMP JUMPDEST PUSH2 0x237 PUSH2 0x8FC JUMP JUMPDEST PUSH2 0x237 PUSH2 0x91F JUMP JUMPDEST PUSH2 0x237 PUSH2 0x93E JUMP JUMPDEST PUSH2 0x237 PUSH2 0x961 JUMP JUMPDEST PUSH2 0x237 PUSH2 0x980 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH2 0x2C0 ADD PUSH1 0x40 MSTORE DUP1 PUSH2 0x290 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x440D PUSH2 0x290 SWAP2 CODECOPY SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH2 0x260 ADD PUSH1 0x40 MSTORE DUP1 PUSH2 0x230 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3569 PUSH2 0x230 SWAP2 CODECOPY SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH2 0x2A0 ADD PUSH1 0x40 MSTORE DUP1 PUSH2 0x278 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x14B1 PUSH2 0x278 SWAP2 CODECOPY SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x360 ADD PUSH1 0x40 MSTORE DUP1 PUSH2 0x330 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xF4D PUSH2 0x330 SWAP2 CODECOPY DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x220 ADD PUSH1 0x40 MSTORE DUP1 PUSH2 0x1FC DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1729 PUSH2 0x1FC SWAP2 CODECOPY DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x2E0 ADD PUSH1 0x40 MSTORE DUP1 PUSH2 0x2BC DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1BDD PUSH2 0x2BC SWAP2 CODECOPY DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH2 0x2A0 ADD PUSH1 0x40 MSTORE DUP1 PUSH2 0x270 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3CDD PUSH2 0x270 SWAP2 CODECOPY SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x2C0 ADD PUSH1 0x40 MSTORE DUP1 PUSH2 0x290 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x440D PUSH2 0x290 SWAP2 CODECOPY DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH2 0x220 ADD PUSH1 0x40 MSTORE DUP1 PUSH2 0x1FC DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1729 PUSH2 0x1FC SWAP2 CODECOPY SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH2 0x360 ADD PUSH1 0x40 MSTORE DUP1 PUSH2 0x32C DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x323D PUSH2 0x32C SWAP2 CODECOPY SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH2 0x360 ADD PUSH1 0x40 MSTORE DUP1 PUSH2 0x330 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xF4D PUSH2 0x330 SWAP2 CODECOPY SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x300 ADD PUSH1 0x40 MSTORE DUP1 PUSH2 0x2DC DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x9F9 PUSH2 0x2DC SWAP2 CODECOPY DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH2 0x2C0 ADD PUSH1 0x40 MSTORE DUP1 PUSH2 0x290 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x417D PUSH2 0x290 SWAP2 CODECOPY SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x300 ADD PUSH1 0x40 MSTORE DUP1 PUSH2 0x2DC DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x234D PUSH2 0x2DC SWAP2 CODECOPY DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x380 ADD PUSH1 0x40 MSTORE DUP1 PUSH2 0x360 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x29D1 PUSH2 0x360 SWAP2 CODECOPY DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x2E0 ADD PUSH1 0x40 MSTORE DUP1 PUSH2 0x2B8 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1925 PUSH2 0x2B8 SWAP2 CODECOPY DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x360 ADD PUSH1 0x40 MSTORE DUP1 PUSH2 0x32C DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x323D PUSH2 0x32C SWAP2 CODECOPY DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x2A0 ADD PUSH1 0x40 MSTORE DUP1 PUSH2 0x278 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xCD5 PUSH2 0x278 SWAP2 CODECOPY DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH2 0x2C0 ADD PUSH1 0x40 MSTORE DUP1 PUSH2 0x290 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3A4D PUSH2 0x290 SWAP2 CODECOPY SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH2 0x300 ADD PUSH1 0x40 MSTORE DUP1 PUSH2 0x2DC DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x9F9 PUSH2 0x2DC SWAP2 CODECOPY SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x2E0 ADD PUSH1 0x40 MSTORE DUP1 PUSH2 0x2B4 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3799 PUSH2 0x2B4 SWAP2 CODECOPY DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x260 ADD PUSH1 0x40 MSTORE DUP1 PUSH2 0x234 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1E99 PUSH2 0x234 SWAP2 CODECOPY DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x2C0 ADD PUSH1 0x40 MSTORE DUP1 PUSH2 0x290 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x417D PUSH2 0x290 SWAP2 CODECOPY DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x2A0 ADD PUSH1 0x40 MSTORE DUP1 PUSH2 0x278 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x14B1 PUSH2 0x278 SWAP2 CODECOPY DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH2 0x260 ADD PUSH1 0x40 MSTORE DUP1 PUSH2 0x234 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1E99 PUSH2 0x234 SWAP2 CODECOPY SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH2 0x260 ADD PUSH1 0x40 MSTORE DUP1 PUSH2 0x234 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x127D PUSH2 0x234 SWAP2 CODECOPY SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH2 0x2A0 ADD PUSH1 0x40 MSTORE DUP1 PUSH2 0x278 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xCD5 PUSH2 0x278 SWAP2 CODECOPY SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x260 ADD PUSH1 0x40 MSTORE DUP1 PUSH2 0x230 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3F4D PUSH2 0x230 SWAP2 CODECOPY DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH2 0x2E0 ADD PUSH1 0x40 MSTORE DUP1 PUSH2 0x2BC DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1BDD PUSH2 0x2BC SWAP2 CODECOPY SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH2 0x260 ADD PUSH1 0x40 MSTORE DUP1 PUSH2 0x230 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3F4D PUSH2 0x230 SWAP2 CODECOPY SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH2 0x300 ADD PUSH1 0x40 MSTORE DUP1 PUSH2 0x2DC DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x234D PUSH2 0x2DC SWAP2 CODECOPY SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x2A0 ADD PUSH1 0x40 MSTORE DUP1 PUSH2 0x280 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x20CD PUSH2 0x280 SWAP2 CODECOPY DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH2 0x2A0 ADD PUSH1 0x40 MSTORE DUP1 PUSH2 0x280 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x20CD PUSH2 0x280 SWAP2 CODECOPY SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x2A0 ADD PUSH1 0x40 MSTORE DUP1 PUSH2 0x270 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3CDD PUSH2 0x270 SWAP2 CODECOPY DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH2 0x2E0 ADD PUSH1 0x40 MSTORE DUP1 PUSH2 0x2B8 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1925 PUSH2 0x2B8 SWAP2 CODECOPY SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH2 0x2A0 ADD PUSH1 0x40 MSTORE DUP1 PUSH2 0x27C DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2FC1 PUSH2 0x27C SWAP2 CODECOPY SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x2C0 ADD PUSH1 0x40 MSTORE DUP1 PUSH2 0x290 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2D31 PUSH2 0x290 SWAP2 CODECOPY DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x2A0 ADD PUSH1 0x40 MSTORE DUP1 PUSH2 0x27C DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2FC1 PUSH2 0x27C SWAP2 CODECOPY DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x3E0 ADD PUSH1 0x40 MSTORE DUP1 PUSH2 0x3A8 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2629 PUSH2 0x3A8 SWAP2 CODECOPY DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x260 ADD PUSH1 0x40 MSTORE DUP1 PUSH2 0x230 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3569 PUSH2 0x230 SWAP2 CODECOPY DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH2 0x3E0 ADD PUSH1 0x40 MSTORE DUP1 PUSH2 0x3A8 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2629 PUSH2 0x3A8 SWAP2 CODECOPY SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH2 0x2C0 ADD PUSH1 0x40 MSTORE DUP1 PUSH2 0x290 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2D31 PUSH2 0x290 SWAP2 CODECOPY SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x2C0 ADD PUSH1 0x40 MSTORE DUP1 PUSH2 0x290 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3A4D PUSH2 0x290 SWAP2 CODECOPY DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH2 0x380 ADD PUSH1 0x40 MSTORE DUP1 PUSH2 0x360 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x29D1 PUSH2 0x360 SWAP2 CODECOPY SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x260 ADD PUSH1 0x40 MSTORE DUP1 PUSH2 0x234 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x127D PUSH2 0x234 SWAP2 CODECOPY DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH2 0x2E0 ADD PUSH1 0x40 MSTORE DUP1 PUSH2 0x2B4 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3799 PUSH2 0x2B4 SWAP2 CODECOPY SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x9D0 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x9B4 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x9E2 JUMPI PUSH1 0x0 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP INVALID PUSH10 0x56424F5277304B47676F COINBASE COINBASE COINBASE COINBASE 0x4E MSTORE8 SSTORE PUSH9 0x455567414141447741 COINBASE COINBASE COINBASE CODESIZE TIMESTAMP COINBASE 0x4D COINBASE COINBASE COINBASE DIFFICULTY 0x49 ADDRESS PUSH20 0x5242414141414746424D56455541414144723363 COINBASE PUSH7 0x48423367352B37 0x4D PUSH21 0x34322B7A647A31374E72783966697A49544F4F4141 COINBASE COINBASE COINBASE PC MSTORE MSTORE8 SLOAD PUSH13 0x4D41514F62595A674141416274 0x4A MSTORE GASLIMIT CHAINID SSTORE 0x4F 0x4D PUSH23 0x746B6B467577794151525331754D4769554E6469343252 PUSH21 0x5A58594D345153774F6B4378366750542B55762F59 COINBASE PUSH21 0x7951525139515547512B6A2F396E694433386A2F2F PUSH25 0x626F7A44614F5370734F69702B6872764776756A7659786670 PUSH20 0x4F575074676D6F35494F44394B646D646853594B 0x4D NUMBER PUSH12 0x77373061762B675A4A6B4555 CODECOPY NUMBER 0x4A BASEFEE PUSH10 0x2F6D4F30564D4C555563 CALLDATALOAD PUSH20 0x57385A6B6647675745414441377066625A4E3169 PUSH10 0x64644A39756B5378326F ORIGIN NUMBER JUMPI PUSH5 0x4E31687A47 COINBASE SSTORE COINBASE 0x2F PUSH2 0x5964 PUSH26 0x7A33336E46346936573144697455504C44632B38446F77685163 BALANCE GAS ADDRESS CHAINID BASEFEE PUSH11 0x6749766868587342567343 SLOAD PUSH4 0x546A4875 MSTORE CHAINID PUSH18 0x7A623279414F784F6E414B596836554D4F52 0x4B TIMESTAMP CHAINID MSTORE PUSH12 0x4E61596475482B6968567059 SSTORE MLOAD PUSH20 0x574A36516C6D726E415667344778476767726E67 NUMBER JUMP ADDRESS BASEFEE TIMESTAMP TIMESTAMP PUSH2 0x4D4A PUSH2 0x5037 GAS CALLER GASLIMIT PUSH23 0x5A464739595654574E4A6D4B673241754F416A6D69712B PUSH19 0x6F2F44627A525333456A34426B7A356A533842 0x4C NUMBER PUSH7 0x664F3754674A54 PUSH11 0x754F3064666132374B6747 TIMESTAMP PUSH26 0x696B495257706D6D744F48742F437A71365764793336437A5033 PUSH22 0x654342346A567A644D4E426B544E797931754D4C5476 COINBASE JUMPI PUSH18 0x526E584A327773395550476376597A337774 PUSH16 0x7663334A4E664E3942736A6B3677686C CALLDATALOAD PUSH2 0x4F41 CALLDATALOAD PUSH15 0x6E3864446A566D554E79634D33744A PUSH14 0x30444F2B656F6E4F707478543476 CALLER PUSH27 0x722B3578452F4D5A59324F73357539632B363639353039545A4C76 PUSH15 0x2B58396F3739763362723839612B4E PUSH26 0x2B6F78462B6D63702F543638464C384B7A576433466937754879 PUSH11 0x76664D5458476F375A4141 COINBASE COINBASE COINBASE GASLIMIT PUSH13 0x46546B5375516D43436956424F MSTORE PUSH24 0x304B47676F414141414E5355684555674141414473414141 COINBASE CALLDATACOPY TIMESTAMP COINBASE 0x4D COINBASE COINBASE COINBASE COINBASE CALLER NUMBER 0x2B 0x2B COINBASE COINBASE COINBASE COINBASE COINBASE GASLIMIT PUSH13 0x424D564555414141436E706C6C PUSH27 0x636A5931476944477858784D4D4462395A4C444C41414141415852 MSTORE8 SLOAD PUSH13 0x4D41514F62595A67414141585A 0x4A MSTORE GASLIMIT CHAINID SSTORE 0x4F 0x4D PUSH23 0x74307547526843414D4257426E714F4346625343684153 0x4A PUSH19 0x4159346C4F4E742F4B78635145567976675A76 SLOAD BASEFEE 0x2F DIFFICULTY CALLVALUE TIMESTAMP PUSH16 0x505236662F36733165716F347550756B 0x2F 0x4A 0x49 GASLIMIT JUMPI CALLER PUSH25 0x7764643976545A4A2F657849583235673163737472776F4576 PUSH26 0x644651466C31646E41694B4F3646544D51386F7842696D336B64 BALANCE CALLDATALOAD DIFFICULTY PUSH5 0x44464E4E73 CALLDATALOAD CALLVALUE PUSH25 0x52754C67754A6939327A4D49377556416F50534A7935374C69 0x4C MSIZE TIMESTAMP PUSH8 0x626C565571546D7A CALLER PUSH15 0x3442385977553732794B4B41466F62 PUSH14 0x346F3354795234482B384A6E3878 PUSH5 0x7A7A527841 PUSH13 0x753235624977347553577A5179 PUSH25 0x4D6A65566739556664594B3974706D665838674E653058466C PUSH10 0x6D38493547496D34786D JUMP GASLIMIT JUMP MSIZE MLOAD PUSH6 0x2F44424E684E PUSH8 0x343870384D43436C PUSH12 0x3161336370684B4268516767 COINBASE CALLVALUE PUSH22 0x6332694A745A706C7670685244316F5A444148384563 ADDRESS MSIZE PUSH11 0x4A48527545792F6D427237 PUSH12 0x56473435764A524376764B71 BALANCE BASEFEE POP 0x4E JUMPI CALLDATACOPY PUSH21 0x543372695678795A61703576374B527476725A546A PUSH2 0x5750 CALLER PUSH26 0x78785A496F74336C6C59674A5956784E4B786B7369774F2B6362 PUSH26 0x38553873454F4F59577135734239594F6862702B563359583579 PUSH11 0x7461566E7474544F30724E PUSH3 0x48786C PUSH3 0x7A2B69 GAS MSTORE PUSH9 0x5968644C56424A487A PUSH26 0x4778432B4D597872636632463062474D7A4A562F414C566F5569 CALLVALUE PUSH17 0x47306A644141414141456C46546B537551 PUSH14 0x43436956424F5277304B47676F41 COINBASE COINBASE COINBASE 0x4E MSTORE8 SSTORE PUSH9 0x455567414141447341 COINBASE COINBASE COINBASE CALLDATACOPY TIMESTAMP COINBASE 0x4D COINBASE COINBASE COINBASE COINBASE CALLER NUMBER 0x2B 0x2B COINBASE COINBASE COINBASE COINBASE COINBASE SELFBALANCE CHAINID TIMESTAMP 0x4D JUMP GASLIMIT SSTORE COINBASE COINBASE COINBASE DIFFICULTY PUSH6 0x327449314769 NUMBER CALLER PUSH19 0x3646776156354F53554479372B6D3373616662 JUMP MLOAD CALLDATACOPY PUSH2 0x4141 COINBASE COINBASE COINBASE PC MSTORE MSTORE8 SLOAD PUSH13 0x4D41514F62595A674141416668 0x4A MSTORE GASLIMIT CHAINID SSTORE 0x4F 0x4D PUSH23 0x746B6B475332794151525658636F427550737755684B32 PUSH23 0x6F75594131754C49656C33304161354839704F622B6C64 0x2F 0x49 NUMBER 0x49 0x2F SELFBALANCE 0x4E ADDRESS PUSH11 0x5151673250313942413937 0x2F CODECOPY PUSH20 0x36327676366577762F57753630792F3735394D4D 0x4C PUSH7 0x522B7452316765 0x4F CODESIZE PUSH5 0x392F777945 MSTORE8 PUSH12 0x4744382F66354D4A4C6A6B4E CALLVALUE 0x4E 0x4E JUMPI CODECOPY CALLDATALOAD MSTORE8 PUSH16 0x596E79387854625A744351504D555465 PUSH3 0x6B7938 CODECOPY SLOAD 0x49 CALLDATASIZE 0x4D PUSH24 0x74486C73336D526D525733526E496D6E3365374D7A6A5339 MSIZE GAS MLOAD 0x4D PUSH3 0x6E766D 0x4A PUSH5 0x6D4C78694A PUSH13 0x332B4755364D505959744E7134 PUSH3 0x376466 PUSH12 0x63635A6F78636E63314C622B PUSH25 0x5A6C336A6D727658616759527A326F7A585279356B4A653751 PUSH14 0x48587A473534533253465A2B4257 MSTORE NUMBER 0x2B SLOAD PUSH16 0x596154766B6F52505278377271445253 NUMBER CALLDATACOPY BASEFEE CHAINID MSIZE CODESIZE COINBASE PUSH17 0x506971477358544C6D646A434879594F31 NUMBER 0x4D MSIZE 0x4F 0x4A PC 0x4D SSTORE PUSH7 0x3642547530436B SSTORE PUSH24 0x6F2B4B6632613142654E7152345271357A2F562F69517576 PUSH13 0x5537467466547230656241656C CHAINID CODESIZE SLOAD PUSH21 0x46344566375345764C576C692B6433617534687436 0x4D PUSH24 0x5A4F616C387765635441373470484C57507669612B4B7277 PUSH8 0x773337653676532B CHAINID CALLDATALOAD PUSH16 0x4D6D5032646C78467874584E6D79326D 0x49 PUSH23 0x4F776B727857325861676249304B645349323538745174 PUSH22 0x617866633743346B48346C447573646B4E5735744343 0x4A GASLIMIT SSTORE PUSH8 0x536A6B6153705566 0x4D CALLDATALOAD PUSH10 0x54364878533768554D35 ADDRESS POP JUMP MSIZE PUSH19 0x4C476D786733694A4F4E4A6D44316C45677174 PUSH13 0x6F704D6E3979446E4E306D6165 CODESIZE PUSH12 0x65354456446232746E706456 JUMPI PUSH15 0x7476615A6F424D346645516F577632 PUSH13 0x727533716549512B355A64632F PUSH4 0x6F4A6A55 CALLDATACOPY PUSH16 0x4C4A2B7A5434795363726E5376564A42 NUMBER GASLIMIT 0x2F PUSH19 0x362F42792B3577626662316642536D76627662 MSTORE BASEFEE GASLIMIT CALLDATASIZE POP PUSH5 0x715877524B PUSH17 0x2F5263586532694F4D7942485577414141 COINBASE TIMESTAMP 0x4A MSTORE SSTORE CALLDATALOAD GASLIMIT PUSH19 0x6B4A6767673D3D6956424F5277304B47676F41 COINBASE COINBASE COINBASE 0x4E MSTORE8 SSTORE PUSH9 0x455567414141447741 COINBASE COINBASE COINBASE CODESIZE COINBASE PUSH8 0x4D41414142486B6A BASEFEE PUSH9 0x414141414446424D56 GASLIMIT SSTORE COINBASE COINBASE COINBASE DIFFICULTY JUMP PUSH17 0x49533568574D31476944396C4D79744141 COINBASE COINBASE COINBASE PC MSTORE MSTORE8 SLOAD PUSH13 0x4D41514F62595A674141415564 0x4A MSTORE GASLIMIT CHAINID SSTORE 0x4B 0x4D 0x2F PUSH21 0x7A6A464C77314151414F43447A49322F4A6B4A642F TIMESTAMP JUMPI PC ADDRESS NUMBER SLOAD SELFBALANCE PUSH18 0x5168704C56306337503849623143365A5568 PUSH20 0x4E637372564A6441666B4D65534F645936694175 0x4C PUSH22 0x4C673565573970454E2B51672F65335833764F446734 MSTORE SSTORE 0x2B PUSH4 0x3066732B CALLVALUE PUSH20 0x38665846353348356259775A37357255584A5144 PUSH9 0x4D30374233506C6A37 0x4B CHAINID PUSH4 0x65654236 CALLDATALOAD PUSH18 0x7562616B346B483165476762613176313858 PUSH10 0x66754672627A6538434A PUSH2 0x7A7A PUSH15 0x78627A494C573535792F4673394238 0x4E PUSH11 0x35446236306A5678777669 PUSH14 0x575163434D7648596D2B49613844 0x4A PUSH9 0x5A6535434A556F6943 0x4D MSIZE PUSH6 0x5A3839712B69 GASLIMIT 0x4A PUSH26 0x596A4E4C32734D59482B414458617A366244673477676B636349 PUSH25 0x6C3368696A4B517874564D5A3346386B593332446A4855726A PUSH23 0x76575950476F3955764F784D74354A583645306C4F5156 PC 0x4A COINBASE PUSH5 0x3644463169 TIMESTAMP PUSH14 0x596C4666535A7152735A39725555 PUSH5 0x5A4F596A63 BASEFEE 0x49 CALLER PUSH3 0x44786F 0x4D PUSH24 0x44736D4A6D38793158366A38486A6D72317A716E30716D79 CHAINID PUSH2 0x6279 CALLDATACOPY PUSH11 0x54786C5A396B2F56517557 PUSH27 0x764B712B5A7537585171367A43564E6A4252446A4876743971762F MLOAD 0x2B POP SSTORE 0x4C PUSH26 0x5053744B30546741414141424A52553545726B4A6767673D3D69 JUMP TIMESTAMP 0x4F MSTORE PUSH24 0x304B47676F414141414E5355684555674141414477414141 COINBASE CODESIZE TIMESTAMP COINBASE 0x4D COINBASE COINBASE COINBASE DIFFICULTY 0x49 ADDRESS PUSH20 0x5242414141414431424D56455541414141314769 DIFFICULTY PUSH15 0x374F2B7575384C2F2F2F386E753372 PUSH24 0x4141414141585253546C4D41514F62595A67414141586C4A MSTORE GASLIMIT CHAINID SSTORE 0x4F 0x4D PUSH23 0x74303875523369414D4147445267523430494F45474247 PUSH12 0x414A2F3358465067646C7366 CALLDATASIZE PUSH12 0x767479736355335969524777 0x4D 0x2F CALLDATASIZE JUMPI PUSH6 0x2B4C74732B4A PUSH24 0x514D434242536B3778702B73306346344372364337397856 POP POP PUSH3 0x416551 MSTORE8 CALLVALUE CALLER PUSH17 0x7175443178366F646E7A584C6879637954 JUMP SSTORE CODECOPY PUSH14 0x5A373831414342666F714A486368 0x4B 0x4B PUSH17 0x494C426D537035786F4E62636A2B396E39 CALLER MSTORE8 CALLER CODECOPY PUSH10 0x74563237797773594E75 PUSH3 0x4F4B69 PUSH5 0x6F62653639 PUSH4 0x54673449 CODESIZE PUSH4 0x4E505978 0x2B PUSH22 0x62586477685668595A392B737057304E6A6771426B6B 0x2B JUMPI SLOAD COINBASE PUSH9 0x664E38734F4D524653 CODESIZE TIMESTAMP CALLDATALOAD 0x4A 0x2B CALLDATASIZE CHAINID PUSH4 0x51585279 PUSH2 0x3474 PUSH22 0x7752344676366931646E4A4D2F47527272687548684F PUSH24 0x4E373465625A64475138654430484A372F6B3933745A424D GAS DIFFICULTY POP 0x4C SELFBALANCE POP PUSH10 0x2F386A5132334F574D64 PUSH27 0x4C7250573550573175546547697673484166586738574E5055334F PUSH16 0x6B7470454E6930312F5A4576624B3267 SLOAD DIFFICULTY PUSH5 0x5346646D61 PUSH19 0x6F7749656D4E2F344B4C4B64444B3855384653 PUSH16 0x4D7A39593256373053465274522B3837 JUMPI PUSH25 0x57556B2B49736E46374742623258594F643076487236676C37 ADDRESS 0x2B MSIZE PUSH22 0x50694D70436974694C4231456A34627936574F594361 0x49 PUSH19 0x322B2F304B5A465253636E6669716274576E57 GAS JUMP PUSH18 0x69705A577A5662466C55735054396577636E ADDRESS PUSH15 0x3943772B6453704F35695378774141 COINBASE COINBASE COINBASE GASLIMIT PUSH13 0x46546B5375516D43436956424F MSTORE PUSH24 0x304B47676F414141414E5355684555674141414477414141 COINBASE CODESIZE TIMESTAMP COINBASE 0x4D COINBASE COINBASE COINBASE DIFFICULTY 0x49 ADDRESS PUSH20 0x5242414141414746424D56455541414144704B53 PUSH12 0x31476944393177502F384A7A CALLDATASIZE PUSH5 0x3366637678 PUSH27 0x4F4943443652574A534141414141585253546C4D41514F62595A67 COINBASE COINBASE COINBASE MSTORE 0x4E 0x4A MSTORE GASLIMIT CHAINID SSTORE 0x4F 0x4D PUSH23 0x746B4C4678777A414D52585863674958504C5150795041 DIFFICULTY PUSH9 0x7977415746306A6842 JUMP PUSH25 0x6F4144645A5078384B76306A5A6958336E63796B3078502F76 GASLIMIT CALLVALUE MLOAD ADDRESS PUSH3 0x4C5856 JUMP PUSH22 0x386F467834364D64436A377A4B5A3954795A35456D62 PC PUSH21 0x6432732B2F78306A7A486648734D546D7330455350 CALLVALUE CHAINID PUSH27 0x3645425664504445744E4E6E794D3258704A4F6269597861795570 PUSH24 0x357246704579476C5A466D3862383266414A3572466F506D TIMESTAMP PUSH27 0x744158423247456F78533159546B2B43467272484E68793234574C DIFFICULTY PUSH16 0x363678466248564B2F69435033694842 CALLER PUSH24 0x476E6D7659464871574779505137374B75594F3170756968 CALLDATASIZE PUSH13 0x71304E5A37365146446B594866 PC PUSH6 0x6939514C5471 POP COINBASE ORIGIN NUMBER 0x2F PUSH4 0x675A6F57 PUSH11 0x7072314E36642F2B4C6D75 PUSH24 0x3072767235513778747377564D4E6663337A426B49597064 BALANCE SSTORE PUSH27 0x66665974446E786559332B4C2F514E4D3254416634326250636238 CALLDATALOAD 0x4D PUSH5 0x554E626F39 PUSH27 0x38582F77447A535A55724657536369314141414141456C46546B53 PUSH22 0x516D43436956424F5277304B47676F414141414E5355 PUSH9 0x455567414141447741 COINBASE COINBASE COINBASE CODESIZE TIMESTAMP COINBASE 0x4D COINBASE COINBASE COINBASE DIFFICULTY 0x49 ADDRESS PUSH20 0x5242414141414A46424D56455541414142474F43 CALLVALUE PUSH7 0x484230384F446F PUSH26 0x4B434862334E3969556B59724B43713175635433392F65696F61 0x4A SLOAD SLOAD PUSH13 0x4745442B513941414141415852 MSTORE8 SLOAD PUSH13 0x4D41514F62595A674141415A4E 0x4A MSTORE GASLIMIT CHAINID SSTORE 0x4F 0x4D PUSH23 0x7430374675776A41514275444962334257354E6B4F4163 PUSH19 0x7349564B5A6A4B772B414A4B6C7247546F4138 NUMBER MLOAD POP JUMP 0x49 PUSH13 0x586942536D646B59752F626C65 PUSH8 0x6E344F4550684366 PUSH8 0x39495054357A6D63 PUSH20 0x736C6465655A726947597043365363625A673030 PUSH15 0x2F6F6847775734346635457A4E6763 PUSH11 0x415451747963652B68434B 0x4D PUSH26 0x7344546172547674352F68594246426F596C45313645476E7676 MLOAD CALLDATALOAD PUSH6 0x4A426C61346C 0x4F PUSH3 0x466654 CALLER ADDRESS 0x4C SSTORE 0x4B PUSH21 0x6853707A6B357362377362503663446D6A6866312B GAS PUSH21 0x4168704742383353645263354D695A69773643506A PUSH2 0x4B35 GASLIMIT 0x4C POP CHAINID PUSH14 0x67766737377455444F32516E7335 PUSH14 0x4F58464D725A4F6D6B7835575A35 PUSH15 0x2F324F514249415A77704A59785235 PUSH10 0x6D7A483162306E423361 TIMESTAMP PUSH13 0x6C703475374B416A6D2F345456 PUSH15 0x42654241736C655A4A714E2F414D43 0x4D CODESIZE PUSH26 0x4A306A4C46316E7242494744414F6B4E6D5446516E50414D4D34 PUSH12 0x41742F3459612F57646A7279 COINBASE CALLDATALOAD PUSH26 0x51307A6C73566670343947732F4D44594F79716D376F77485653 PUSH15 0x6A3258773232456A4F622F73754933 PUSH2 0x4479 0x2F PUSH20 0x2F474D336D457862326143747967624D6C6F3031 0x4F MSTORE ORIGIN PUSH21 0x622F5944462B386C615779485431654B39597A4879 PUSH13 0x72464C32413468466E3777686E PUSH16 0x6637396D44544C6D367A72597169744C BASEFEE PUSH18 0x3037734C63396275793373723737776D4A5A CALLVALUE CALLER PUSH22 0x35737462504C48385956735768626447755857503448 PUSH4 0x7064732B PUSH22 0x32686F6A6F41414141415355564F524B35435949493D PUSH10 0x56424F5277304B47676F COINBASE COINBASE COINBASE COINBASE 0x4E MSTORE8 SSTORE PUSH9 0x455567414141447741 COINBASE COINBASE COINBASE CODESIZE TIMESTAMP COINBASE 0x4D COINBASE COINBASE COINBASE DIFFICULTY 0x49 ADDRESS PUSH20 0x5242414141414656424D56455541414141644768 PUSH21 0x62563167744A69684A513056396533772B4E6A6A33 0x4F CODESIZE TIMESTAMP PUSH11 0x4141414141585253546C4D COINBASE MLOAD 0x4F PUSH3 0x595A67 COINBASE COINBASE COINBASE PUSH2 0x564A MSTORE GASLIMIT CHAINID SSTORE 0x4F 0x4D PUSH23 0x7430303175777941514257427A412F36615061504A415A NUMBER PUSH13 0x376B4663494A4636674B6A3376 ADDRESS POP PUSH7 0x4D774B37635259 CALLDATALOAD MLOAD 0x4F PUSH25 0x4B4C7636594E304F694C4A2F7263373236334F49736E77622F PUSH15 0x4E583875487643652B657637736565 ORIGIN 0x4D PUSH22 0x582B6D5A4E532F556D36565173367157714E56556C56 PC PUSH12 0x752F354C6D56636853553550 PUSH3 0x552F46 PUSH5 0x437537454A PUSH9 0x48333154356E463857 SELFBALANCE GAS MLOAD BASEFEE JUMPI PUSH10 0x50527A746D2F656D7454 MSTORE8 0x4F PUSH5 0x306A6D6558 JUMPI PUSH16 0x4A6A7036635334717A554B504C4E757A BASEFEE 0x4E PUSH23 0x58463879527A75785163664F5048646E5447454846334E PC MSIZE PUSH22 0x644B76746F34324A4F393447526B6E4573534F653366 PUSH9 0x6D6756625A31623565 PUSH16 0x6D4F7865524A694B566F366C73692F67 PUSH22 0x47306B304553587A696155584F37694336577135674A 0x4A BALANCE PUSH4 0x4D44556C MSIZE SELFBALANCE PUSH5 0x6D6132592F PUSH11 0x47717333683033786D646B PUSH24 0x5137755A4A31634358723545754F55763958713551777767 0x4E MSIZE ADDRESS PUSH17 0x473967504D4958325063754A4862787157 PUSH20 0x7333664947633151775257534D456F4965624A62 JUMP BALANCE PUSH5 0x5469633579 SSTORE PUSH2 0x4A58 PUSH23 0x686D38594A476A437936543858416C6741456A48633433 MSIZE PUSH26 0x2F5864724A7A4B362F634759624C376457683778382F344A3656 CODECOPY CALLER TIMESTAMP PUSH22 0x78742F4D597077394D4A33614858726B793961593254 BALANCE CODECOPY PUSH2 0x2F39 CALLVALUE PUSH21 0x3970686B502F4D4637503431383235352B7A75322B CALLDATACOPY GAS 0x2B PUSH27 0x6E337A32482F7674647A39526F6563334475506A4B5836324F3066 PUSH9 0x302B6D6C3832505662 SLOAD PUSH21 0x2B6F2F2B6C5A726B6A376831695941414141415355 JUMP 0x4F MSTORE 0x4B CALLDATALOAD NUMBER MSIZE 0x49 0x49 RETURNDATASIZE PUSH10 0x56424F5277304B47676F COINBASE COINBASE COINBASE COINBASE 0x4E MSTORE8 SSTORE PUSH9 0x455567414141447741 COINBASE COINBASE COINBASE CODESIZE COINBASE PUSH8 0x4D41414142486B6A BASEFEE PUSH9 0x414141414446424D56 GASLIMIT SSTORE COINBASE COINBASE COINBASE NUMBER PUSH10 0x63457439534349314769 TIMESTAMP PUSH17 0x414C716C4141414141585253546C4D4151 0x4F PUSH3 0x595A67 COINBASE COINBASE COINBASE SSTORE PUSH5 0x4A52454655 0x4B 0x4D 0x2F PUSH21 0x7A6A464C77314151414F43447A49322F4A6B4A642F TIMESTAMP JUMPI PC ADDRESS NUMBER SLOAD SELFBALANCE PUSH18 0x5168704C56306337503849623143365A5568 PUSH20 0x4E637372564A6441666B4D65534F645936694175 0x4C PUSH22 0x4C673565573970454E2B51672F65335833764F446734 MSTORE SSTORE 0x2B PUSH4 0x3066732B CALLVALUE PUSH20 0x38665846353348356259775A37357255584A5144 PUSH9 0x4D30374233506C6A37 0x4B CHAINID PUSH4 0x65654236 CALLDATALOAD PUSH18 0x7562616B346B483165476762613176313858 PUSH10 0x66754672627A6538434A PUSH2 0x7A7A PUSH15 0x78627A494C573535792F4673394238 0x4E PUSH11 0x35446236306A5678777669 PUSH14 0x575163434D7648596D2B49613844 0x4A PUSH9 0x5A6535434A556F6943 0x4D MSIZE PUSH6 0x5A3839712B69 GASLIMIT 0x4A PUSH26 0x596A4E4C32734D59482B414458617A366244673477676B636349 PUSH25 0x6C3368696A4B517874564D5A3346386B593332446A4855726A PUSH23 0x76575950476F3955764F784D74354A583645306C4F5156 PC 0x4A COINBASE PUSH5 0x3644463169 TIMESTAMP PUSH14 0x596C4666535A7152735A39725555 PUSH5 0x5A4F596A63 BASEFEE 0x49 CALLER PUSH3 0x44786F 0x4D PUSH24 0x44736D4A6D38793158366A38486A6D72317A716E30716D79 CHAINID PUSH2 0x6279 CALLDATACOPY PUSH11 0x54786C5A396B2F56517557 PUSH27 0x764B712B5A7537585171367A43564E6A4252446A4876743971762F MLOAD 0x2B POP SSTORE 0x4C PUSH26 0x5053744B30546741414141424A52553545726B4A6767673D3D69 JUMP TIMESTAMP 0x4F MSTORE PUSH24 0x304B47676F414141414E5355684555674141414477414141 COINBASE CODESIZE TIMESTAMP COINBASE 0x4D COINBASE COINBASE COINBASE DIFFICULTY 0x49 ADDRESS PUSH20 0x5242414141414656424D5645554141414335744A MLOAD BALANCE SELFBALANCE PUSH10 0x43576A32764F79712B51 MLOAD DIFFICULTY 0x2B PUSH22 0x626D35612B5A57554141414141585253546C4D41514F PUSH3 0x595A67 COINBASE COINBASE COINBASE PC PUSH13 0x4A524546554F4D7674302B324E PUSH17 0x44414D4275444948627A78467044776366 CODESIZE PUSH5 0x5677446143 PUSH17 0x4232436C6A70727638537A68356D494948 PUSH4 0x56624247 GASLIMIT MLOAD PUSH13 0x5037495149776B2F3852442B47 CALLVALUE CODECOPY PUSH3 0x445952 PUSH13 0x53434452384470304A68496C7A NUMBER JUMPI SELFBALANCE 0x4D PUSH20 0x694C64324241535138694D4B5047577646677576 DIFFICULTY PUSH8 0x732F2B4F616E6C48 PUSH24 0x5A7276574B335068416C7662554D5A7264594A6D7A6A6F6C JUMPI PUSH21 0x57575671766563684650542B544A504B4C44316849 GAS PUSH5 0x5A674E5554 MSTORE8 MSTORE SELFBALANCE PUSH13 0x75464C76765765707833356B53 PUSH26 0x38786F6F585A683346756359786F597A72446C4869596A4F7357 MSIZE TIMESTAMP CALLDATASIZE CODESIZE CALLDATALOAD PUSH18 0x58596D4567326B41464944343168672B7141 0x2F ORIGIN BALANCE CALLDATALOAD PUSH3 0x2F772F SLOAD MSIZE JUMP PUSH11 0x4F416E5450674D2F4A7872 PUSH11 0x525045653663624C426C68 PUSH11 0x4D4F6A6D364B4A34643557 PUSH25 0x516363664943464F4446394A57423863373834742F546B7A39 PUSH18 0x6C6A50376A7A476A5A6353447678646B5642 PUSH26 0x6D462B75544E7A68586E317575655A36755449706E4642384D41 POP PUSH2 0x7052 CALLVALUE PUSH25 0x79386767504C75484B764C5063575558663963683758464C46 PUSH14 0x5658426278616F7A6A6657392F2B PUSH21 0x58533748556A33576B37566C6776473547584C6557 PUSH10 0x35442F534C6C36377571 DIFFICULTY PUSH3 0x627044 SLOAD CODECOPY PUSH2 0x4C6F CODECOPY CALLDATASIZE PUSH20 0x545A37677259734F70396A576D374D5A6435716C PUSH19 0x6C6C5859663054315A57665071447632316F56 SLOAD SLOAD MSTORE8 CALLDATALOAD SSTORE NUMBER PUSH8 0x4141414141456C46 SLOAD PUSH12 0x5375516D43436956424F5277 ADDRESS 0x4B SELFBALANCE PUSH8 0x6F414141414E5355 PUSH9 0x455567414141447741 COINBASE COINBASE COINBASE CODESIZE TIMESTAMP COINBASE 0x4D COINBASE COINBASE COINBASE DIFFICULTY 0x49 ADDRESS PUSH20 0x5242414141414746424D564555414141444C6C6D PUSH20 0x314769423654797977653146544F535465724953 GAS PUSH2 0x6B51 0x4D 0x4C BASEFEE PUSH24 0x304141414141585253546C4D41514F62595A674141416274 0x4A MSTORE GASLIMIT CHAINID SSTORE 0x4F 0x4D PUSH23 0x746B6B467577794151525331754D4769554E6469343252 PUSH21 0x5A58594D345153774F6B4378366750542B55762F59 COINBASE PUSH21 0x7951525139515547512B6A2F396E694433386A2F2F PUSH25 0x626F7A44614F5370734F69702B6872764776756A7659786670 PUSH20 0x4F575074676D6F35494F44394B646D646853594B 0x4D NUMBER PUSH12 0x77373061762B675A4A6B4555 CODECOPY NUMBER 0x4A BASEFEE PUSH10 0x2F6D4F30564D4C555563 CALLDATALOAD PUSH20 0x57385A6B6647675745414441377066625A4E3169 PUSH10 0x64644A39756B5378326F ORIGIN NUMBER JUMPI PUSH5 0x4E31687A47 COINBASE SSTORE COINBASE 0x2F PUSH2 0x5964 PUSH26 0x7A33336E46346936573144697455504C44632B38446F77685163 BALANCE GAS ADDRESS CHAINID BASEFEE PUSH11 0x6749766868587342567343 SLOAD PUSH4 0x546A4875 MSTORE CHAINID PUSH18 0x7A623279414F784F6E414B596836554D4F52 0x4B TIMESTAMP CHAINID MSTORE PUSH12 0x4E61596475482B6968567059 SSTORE MLOAD PUSH20 0x574A36516C6D726E415667344778476767726E67 NUMBER JUMP ADDRESS BASEFEE TIMESTAMP TIMESTAMP PUSH2 0x4D4A PUSH2 0x5037 GAS CALLER GASLIMIT PUSH23 0x5A464739595654574E4A6D4B673241754F416A6D69712B PUSH19 0x6F2F44627A525333456A34426B7A356A533842 0x4C NUMBER PUSH7 0x664F3754674A54 PUSH11 0x754F3064666132374B6747 TIMESTAMP PUSH26 0x696B495257706D6D744F48742F437A71365764793336437A5033 PUSH22 0x654342346A567A644D4E426B544E797931754D4C5476 COINBASE JUMPI PUSH18 0x526E584A327773395550476376597A337774 PUSH16 0x7663334A4E664E3942736A6B3677686C CALLDATALOAD PUSH2 0x4F41 CALLDATALOAD PUSH15 0x6E3864446A566D554E79634D33744A PUSH14 0x30444F2B656F6E4F707478543476 CALLER PUSH27 0x722B3578452F4D5A59324F73357539632B363639353039545A4C76 PUSH15 0x2B58396F3739763362723839612B4E PUSH26 0x2B6F78462B6D63702F543638464C384B7A576433466937754879 PUSH11 0x76664D5458476F375A4141 COINBASE COINBASE COINBASE GASLIMIT PUSH13 0x46546B5375516D43436956424F MSTORE PUSH24 0x304B47676F414141414E5355684555674141414477414141 COINBASE CODESIZE NUMBER COINBASE 0x4D COINBASE COINBASE COINBASE COINBASE 0x4E 0x49 PUSH10 0x6C41414141414E6C424D JUMP GASLIMIT SSTORE COINBASE COINBASE COINBASE COINBASE PUSH17 0x494549774B456B6546436B624554636C48 GASLIMIT CHAINID 0x4D MSTORE SELFBALANCE 0x4A DIFFICULTY 0x4F BALANCE PUSH12 0x324C552F372B763946505673 CALLDATACOPY 0x4D PUSH13 0x5077362F37577966644E523231 NUMBER 0x4F ORIGIN SLOAD SLOAD ADDRESS 0x4E PUSH23 0x4B784E716A53646B634141414141585253546C4D41514F PUSH3 0x595A67 COINBASE COINBASE COINBASE PUSH11 0x5A4A52454655534D667431 MLOAD PUSH22 0x796D7A414D4264424B6C697844674C623733327A7656 PUSH5 0x7A48674150 0x4A COINBASE PUSH18 0x4B4A536242314A4F557A6B312F662B4D5933 PUSH23 0x6E45547051783348304B4557666B762B74316E425A4261 PUSH27 0x6279616C3778317135356235515062434B463764736D584C4E444B 0x2B CALLDATACOPY CALLDATACOPY GASLIMIT DIFFICULTY PUSH10 0x396C6E34546432784C6C PUSH19 0x563066315839726C524D754774693678794950 PUSH5 0x4656693765 0x2B GAS ORIGIN 0x4B PC PUSH18 0x2F4159586B426B4F6C7235674230716A7576 DIFFICULTY CALLDATALOAD PC PUSH9 0x6336705A32786E6A68 CALLDATACOPY CALLDATALOAD PUSH22 0x62484F50684D6A4A74354372543941434F4842574B5A PUSH12 0x55394D744570746D324C6A44 JUMPI CALLDATACOPY COINBASE PUSH23 0x544D7464645551776D7463536C726432673832366B496B PUSH7 0x665735537A6E6A PUSH27 0x4252303772394E4C6D35356F68316E36736C4B7837525772634632 PUSH3 0x4A5A53 PUSH18 0x44755763734C634C79476F626D435041335A CALLER COINBASE CODESIZE PUSH27 0x4F6D5470694C524C5044477454382F3058356F333163424A302B68 PUSH19 0x5857434A78544F7330483746752B735231774E MLOAD PUSH9 0x46517552476C553668 PUSH13 0x6C794975344344355A34327248 PUSH26 0x526472553872516976664F495762614338617557455163304C6B PUSH24 0x78472F416B532B436B736A5069674247545A466338667274 PUSH5 0x6461355065 0x4D PUSH3 0x7A456F PUSH14 0x746D747549575A7371756A33676D COINBASE MSTORE8 BALANCE PUSH27 0x5145764D594F7A6234664F4A473170566830544934694875624E6A JUMPI PUSH26 0x714C532B694F46666D5435635374323647315A65554762416573 PUSH22 0x5A325058444A696A7564357A4968315A6B7258316F50 SLOAD GAS CODECOPY SELFBALANCE PC ORIGIN PUSH9 0x693938784733727631 PUSH8 0x52357A5857586673 PUSH23 0x6D4F3978672B3348423758636A686F617A506E34535532 PUSH6 0x344479382F45 SLOAD PUSH9 0x6B5A426E4B72494657 CALLDATALOAD 0x2F PUSH18 0x476E502F382F2B49466139786D3331314461 0x4F JUMP PUSH18 0x446D76374F2B366179495678674265344668 SSTORE JUMP PUSH25 0x334F2B724572335752784C73643953576D466233486A54696B PC 0x4F CHAINID CALLDATALOAD PUSH21 0x344F2B77516F4C4C44643467343570784555537A32 PUSH21 0x633479772B72564F5534576A4C773541626E416C54 PUSH26 0x49436C6E2B6B317A756F53386F502F4162566A45307171567354 PUSH7 0x4141414141456C CHAINID SLOAD PUSH12 0x5375516D43436956424F5277 ADDRESS 0x4B SELFBALANCE PUSH8 0x6F414141414E5355 PUSH9 0x455567414141447341 COINBASE COINBASE COINBASE CALLDATACOPY TIMESTAMP COINBASE 0x4D COINBASE COINBASE COINBASE COINBASE CALLER NUMBER 0x2B 0x2B COINBASE COINBASE COINBASE COINBASE COINBASE SELFBALANCE CHAINID TIMESTAMP 0x4D JUMP GASLIMIT SSTORE COINBASE COINBASE COINBASE DIFFICULTY CALLDATACOPY PUSH10 0x7773314769444B586742 PUSH11 0x4A514E464751482F754765 COINBASE 0x4D PUSH24 0x724F3042466C4141414141585253546C4D41514F62595A67 COINBASE COINBASE COINBASE PUSH9 0x354A524546554F4D76 PUSH21 0x6B6B46796E44415152536C753846764B7243554565 NUMBER CALLER 0x4A POP PUSH8 0x42596B3679445277 PUSH4 0x594B6964 PUSH24 0x35663656626A466F384E6733694D55434E592B762F743274 CALLDATALOAD PUSH15 0x76397436757272363967642B314D30 CALLDATACOPY SLOAD PUSH5 0x7166766968 0x2F MSIZE CALLDATASIZE 0x4B PUSH9 0x756178704666542B59 SLOAD BASEFEE PUSH14 0x6B434241506172702F456B2B6F44 CALLDATALOAD BASEFEE NUMBER CALLVALUE ORIGIN PUSH6 0x744865542B46 CHAINID NUMBER PUSH3 0x423269 JUMPI PUSH15 0x357764737A304746535137587A7273 0x4C POP MSTORE PUSH18 0x4C567656766F326E586C396C546644413349 PUSH16 0x446C4D433159444966316F7871576E2F DIFFICULTY DIFFICULTY PUSH21 0x4C386469422F7A456239795974697A615338455476 0x2F CODESIZE PUSH8 0x4D39695042423764 SELFBALANCE 0x4C CODECOPY MSIZE PUSH8 0x374D4E452F4B6F6B CODECOPY TIMESTAMP PUSH14 0x6461374E4950384F332F64635769 PUSH23 0x5371785A795531697A5A2B4D327A473332724C61456953 CALLER PUSH23 0x4D6B544E332F484D4C3379554846545239373675635564 PUSH9 0x7A5246414636367067 TIMESTAMP GASLIMIT PUSH15 0x567A465477684177574B74594D4468 PUSH23 0x55344C6C686E3267554942424632642F79564165426C6F PUSH16 0x59443974654E52543759637145547479 CALLDATALOAD PUSH3 0x30744E GAS PUSH25 0x6759706569646F58725555643268506E4A6F59373970425956 ORIGIN PUSH20 0x4A32394A4C30777A544C55683361387858414764 MSTORE PC PUSH24 0x434D544F2F574D4538345756415548486C7A686535527262 GASLIMIT MSTORE PUSH10 0x44636E7A674D4169636E SSTORE PUSH10 0x51615574616D33766175 ADDRESS SELFBALANCE JUMP JUMPI PUSH17 0x706C386B474F5A536F3138506436566779 PUSH18 0x4C4F7475446A66526B57363046755577634C MSTORE MLOAD POP PUSH23 0x362B7148474C6655572F49596C376C434C6E7A4F636832 NUMBER TIMESTAMP NUMBER CALLDATACOPY PUSH26 0x4E76653162476C724F6D654B59564F3761504D6C76522F55466A PUSH13 0x6E5A2F59794F51416443675055 PUSH26 0x354B586D38383876486E67554E6945474D725A74394E64684461 JUMP CODECOPY PUSH22 0x6B3177683262474A2F54764D6439596D6564436A7432 PUSH23 0x6D4E766164372F2F695068636C6350387676504F6C4243 PC PUSH21 0x4A79614749614D7578617235726C315047756A7079 PUSH4 0x63444B31 0x4C PUSH12 0x2B532B70376371713279662F ORIGIN PUSH25 0x624178714A7A6A2B4141414141456C46546B5375516D434369 JUMP TIMESTAMP 0x4F MSTORE PUSH24 0x304B47676F414141414E5355684555674141414477414141 COINBASE CODESIZE TIMESTAMP COINBASE 0x4D COINBASE COINBASE COINBASE DIFFICULTY 0x49 ADDRESS PUSH20 0x5242414141414431424D56455541414144387576 PUSH19 0x36692F59314769442F3550362B76736F354141 COINBASE COINBASE COINBASE PC MSTORE MSTORE8 SLOAD PUSH13 0x4D41514F62595A674141415970 0x4A MSTORE GASLIMIT CHAINID SSTORE 0x4F 0x4D PUSH23 0x743034734E7044414D424E424971574473626342324137 CHAINID DIFFICULTY COINBASE CALLVALUE PUSH11 0x7276365A7A344C4A386C68 0x49 PUSH22 0x306F72456A394567735A542F362F3936583331655872 CHAINID 0x2F PUSH6 0x69756C397257 0x2F CALLER CHAINID TIMESTAMP PC 0x4A CALLDATACOPY PUSH5 0x53676F5852 PUSH7 0x6E676868334170 SLOAD PUSH14 0x445A66734F5A48616D4B7A482F61 0x4D CALLDATACOPY PUSH27 0x717959727479525268474E30494D336C7768585932585672644E4C PUSH27 0x72707A3359784D492B72613568515945587A6C2B725353394D6954 TIMESTAMP PUSH21 0x565A4D523873726A3058363474724963544B334B7A PUSH19 0x726C644C4B56685163654C4D6D2B6C5A693857 BASEFEE GASLIMIT ORIGIN 0x4E PUSH23 0x4C424C4F453762354D2F7A636B5265724161574C697558 CODESIZE CALLDATALOAD PUSH2 0x4B4F COINBASE 0x2B PUSH15 0x707835507753657A444A592F634778 GAS PUSH8 0x4143554C52713435 PUSH17 0x48683131354F505653757154654F513843 GAS PUSH2 0x4C78 MLOAD PUSH12 0x5663515977625A2F764A3266 PUSH27 0x43664C442F4D73756F4F7A67463550683832584D77686763444D67 PUSH3 0x62354C PUSH16 0x7A415470594A33396632733538737538 CODESIZE PUSH21 0x59534F35736C486B64714642575046594E7533644F PC MLOAD PUSH7 0x58537737487337 PUSH22 0x575A6341547334414D337735652F6B724A71424F7659 PUSH21 0x424B724F3563716B6D47325257376E787768525874 PUSH8 0x64545637584A6F64 PUSH19 0x6C777655506159346D397A7863762B47364A6C PUSH22 0x64334F4C4F7977746A4F786E4A72667937763562365A CHAINID JUMPI CALLDATASIZE PUSH7 0x6C5769436A3672 PUSH16 0x584A6E556E7A4C4B3934594E39597236 0x2B MSTORE8 0x2F PUSH13 0x4970616A4F767A372B45414141 COINBASE COINBASE MSTORE8 SSTORE JUMP 0x4F MSTORE 0x4B CALLDATALOAD NUMBER MSIZE 0x49 0x49 RETURNDATASIZE PUSH10 0x56424F5277304B47676F COINBASE COINBASE COINBASE COINBASE 0x4E MSTORE8 SSTORE PUSH9 0x455567414141447341 COINBASE COINBASE COINBASE CALLDATACOPY TIMESTAMP COINBASE 0x4D COINBASE COINBASE COINBASE COINBASE CALLER NUMBER 0x2B 0x2B COINBASE COINBASE COINBASE COINBASE COINBASE GASLIMIT PUSH13 0x424D5645554141414344576B52 SSTORE 0x4C PUSH25 0x6B314769444E6C587176646C47484A41684541414141415852 MSTORE8 SLOAD PUSH13 0x4D41514F62595A674141415864 0x4A MSTORE GASLIMIT CHAINID SSTORE 0x4F 0x4D PUSH23 0x74302B46743943414D426D416B4A6E6A4E66514E676576 CODECOPY 0x4E CALLDATACOPY PUSH11 0x6F41643353415430333258 CALLDATASIZE JUMP ORIGIN 0x49 PUSH26 0x3468515632674A596F7765624364494D58396A563837626D3061 CALLVALUE PUSH8 0x3033636337724E4E PUSH11 0x676B536B6E35365951412B SLOAD GASLIMIT PUSH10 0x6F6A425A75694763374C PUSH14 0x51697A512F464E36526B4A6A7659 CALLDATACOPY PUSH17 0x643071556F4C3056343353733769747263 CODESIZE CALLDATACOPY PUSH10 0x4132747268687A344D31 PUSH18 0x366545756D6163524955627A53674438556B JUMP PUSH8 0x384B327546496475 PUSH19 0x6E64694C757A2B2B6D6354486C594D2B625A78 PUSH4 0x4A734F56 PUSH3 0x635062 ADDRESS ADDRESS ORIGIN 0x4E PUSH20 0x33474733735A32357345344E495A6B696942656D SLOAD JUMPI PUSH4 0x6E783462 0x4A CALLVALUE COINBASE TIMESTAMP MSTORE BASEFEE PUSH20 0x3141734331546D4E2B6677433431724B78316A45 DIFFICULTY PUSH26 0x4867756F45737447644B782B6A2F52785677495052666B614E55 0x2F JUMP PUSH21 0x627745624378376B30414C6F324271654E71544375 0x2F 0x49 GAS CALLDATASIZE CALLVALUE PUSH25 0x46653252534230584248326E4C466A6431385A697A47586C59 0x4D CALLDATACOPY CODESIZE PUSH21 0x5834576F2F736C776F627952627674566A4D307453 0x4F CALLDATASIZE PUSH20 0x686B6352765466314E616561346E357369746E6E MSIZE PUSH18 0x544C7A6E544D7967786E4E686A7548493350 CALLDATACOPY PUSH23 0x5A636A7031516F44356F32355A77396A6553324E495432 PUSH15 0x335966306E45663837466B32396B66 PUSH14 0x3562486E794C79785231336D6E6F PUSH13 0x527061307550334E56376E7333 0x2F PUSH8 0x4B4A535633424565 PUSH6 0x4C7051414141 COINBASE TIMESTAMP 0x4A MSTORE SSTORE CALLDATALOAD GASLIMIT PUSH19 0x6B4A6767673D3D6956424F5277304B47676F41 COINBASE COINBASE COINBASE 0x4E MSTORE8 SSTORE PUSH9 0x455567414141447341 COINBASE COINBASE COINBASE CALLDATACOPY TIMESTAMP COINBASE 0x4D COINBASE COINBASE COINBASE COINBASE CALLER NUMBER 0x2B 0x2B COINBASE COINBASE COINBASE COINBASE COINBASE SELFBALANCE CHAINID TIMESTAMP 0x4D JUMP GASLIMIT SSTORE COINBASE COINBASE COINBASE TIMESTAMP JUMP ORIGIN PUSH5 0x4531476941 PUSH19 0x6A5966506739696B5661312F386572646D7558 TIMESTAMP PC MSIZE POP PUSH4 0x41414141 COINBASE PC MSTORE MSTORE8 SLOAD PUSH13 0x4D41514F62595A674141416656 0x4A MSTORE GASLIMIT CHAINID SSTORE 0x4F 0x4D PUSH23 0x746B6C467932794151686A586359426648665155687138 0x2B PUSH24 0x755941565048324F787A364164594E6D65762F7076796767 MSTORE PUSH7 0x454E5776536768 MSIZE CODECOPY PUSH23 0x59594875662F746E5731392F5432482F364633586D6637 MSIZE POP CALLDATALOAD PUSH13 0x674871503171657343782F6E6F PUSH23 0x75475269556778666E372B4A684E636368724170373375 0x4B JUMP BASEFEE CHAINID 0x2B BASEFEE PUSH10 0x5062624A705352356969 0x4C PUSH27 0x666D486A725A58526D466F34737538324E794B79364D3541312B37 PUSH27 0x626D63655872444F416A4D393978626F776563564D7576777A6E42 PUSH9 0x374448747358446661 PUSH19 0x386E6A6A4E474B6B336D6F6266324C4D2B3863 BALANCE SLOAD CALLDATASIZE CALLDATASIZE SSTORE DIFFICULTY SELFBALANCE 0x4F PUSH6 0x6C436236654C 0x4D PUSH11 0x627A614577362F596E4C44 JUMPI PUSH26 0x5172586A454C7774664A3049705450677352785776586E537743 0x4F PUSH6 0x54513841684D TIMESTAMP PUSH6 0x766142525077 CALLER 0x4D CALLDATASIZE GASLIMIT POP 0x4E PUSH9 0x366F5A6A42524B3769 CALLER 0x2B PUSH8 0x5537744170464D4B POP PUSH10 0x6E396D7451586A616B65 GASLIMIT PUSH2 0x7565 POP PUSH2 0x7638 PUSH9 0x4C7235564F78625830 CALLDATASIZE 0x2B PUSH21 0x7A5944306F76696449764457507450537368615750 PUSH27 0x7348562F454476526B44463756766D447869344F6861335979654A CALLDATACOPY CALLVALUE PUSH19 0x76695041664C2F57375830704E4A38302B5455 PUSH19 0x492B5A713438715731525A3732556C6F464C64 PUSH5 0x71686B6751 CALLDATALOAD CODECOPY 0x4B PUSH11 0x626A785A686663316C3777 PUSH2 0x6E63 PUSH9 0x2B556763306D644D56 PUSH22 0x4F3144554745534970674E4A49304E5968546E555366 PUSH24 0x324B586343686E326F3756436B7461374342655976375932 GASLIMIT 0x4D JUMPI PUSH12 0x6542716D656A6B7957336B2F NUMBER GAS 0x4A PUSH4 0x792F5A67 CALLDATACOPY PUSH25 0x6D364F766157576D316C57657333584A4470724139524F6954 ORIGIN 0x2B PUSH3 0x756261 PUSH20 0x307842353438317036464A4E574F364379766D55 PUSH7 0x6D5354684B6252 ORIGIN PUSH26 0x6B48497A2B303165446D6337717439763536463233735969654A ADDRESS ORIGIN PUSH5 0x713377524B PUSH17 0x2F5265637732662F777350314351414141 COINBASE TIMESTAMP 0x4A MSTORE SSTORE CALLDATALOAD GASLIMIT PUSH19 0x6B4A6767673D3D6956424F5277304B47676F41 COINBASE COINBASE COINBASE 0x4E MSTORE8 SSTORE PUSH9 0x455567414141447341 COINBASE COINBASE COINBASE CALLDATACOPY COINBASE PUSH8 0x4D41414143345378 PUSH16 0x67414141414446424D56455541414142 PUSH15 0x526A4E554C786B3147694172377267 PC COINBASE COINBASE COINBASE COINBASE COINBASE PC MSTORE MSTORE8 SLOAD PUSH13 0x4D41514F62595A67414141555A 0x4A MSTORE GASLIMIT CHAINID SSTORE 0x4B 0x4D 0x2F PUSH21 0x7A6A464C77314151414F43447A49322F4A6F49752F PUSH16 0x704C61424B665578485357726F343250 CODESIZE MSTORE CALLER PUSH18 0x42307935445961705A58714336422F495938 PUSH12 0x4D367831454663584D544279 CODESIZE PUSH21 0x375359662B42412F65335833764F446A3444346F54 PUSH6 0x6C38482F5036 CHAINID PUSH10 0x36762B77354662325047 PUSH24 0x733677345349386257753432424763584639714449434458 CODECOPY PUSH4 0x78345041 CALLDATASIZE PUSH8 0x33752B4E6E64584E PUSH18 0x707A667A55506A7A567155624448744C5462 PUSH13 0x6C48552B46654B6C66474C736F PUSH7 0x63726642706268 MSTORE MSTORE PUSH10 0x58533459343162524F4A PUSH5 0x6954563477 PUSH3 0x6A6365 CALLDATALOAD 0x4C 0x4B MSTORE8 PUSH20 0x755463342F617363536A6A694A79363346454F4D 0x4D CHAINID CALLDATACOPY PUSH6 0x45636636324F ORIGIN POP TIMESTAMP PUSH27 0x69475059347771706F6A6645457A6C7A55786A6366795A6863592B PUSH20 0x744B754F753834673837447A5538354532336970 PUSH7 0x6F6A4A55354357 PUSH4 0x6B7A3034 MSIZE PUSH22 0x6F51633741704C355874574E764E6A616D6A624A776D PUSH7 0x674657346B6574 TIMESTAMP BALANCE GASLIMIT MSTORE8 PUSH12 0x564D2F6E526B2F552F6B3563 0x4E CALLDATASIZE PUSH20 0x396336554D32306E797454645752707150367236 PUSH16 0x56313139725358376433473255545673 ADDRESS PUSH27 0x5A776C513777754B343958376A5034394176492B392B3065394141 COINBASE COINBASE COINBASE GASLIMIT PUSH13 0x46546B5375516D43436956424F MSTORE PUSH24 0x304B47676F414141414E5355684555674141414477414141 COINBASE CODESIZE TIMESTAMP COINBASE 0x4D COINBASE COINBASE COINBASE DIFFICULTY 0x49 ADDRESS PUSH20 0x5242414141414D46424D56455541414143575830 SELFBALANCE BASEFEE JUMP SLOAD PUSH20 0x31476941794D69565A57566C4F546B34364F6978 0x4F PUSH16 0x45372F49794D5448526D6C704B443861 JUMPI NUMBER SELFBALANCE JUMP DIFFICULTY PUSH18 0x51577A364655546255766965364141414141 PC MSTORE MSTORE8 SLOAD PUSH13 0x4D41514F62595A674141415956 0x4A MSTORE GASLIMIT CHAINID SSTORE 0x4F 0x4D PUSH21 0x694741576A5942514D456D4273624143696D49324E SSTORE MSIZE MSTORE8 PUSH9 0x596F41363653656C59 MSTORE8 COINBASE 0x4B COINBASE CALLER PUSH8 0x68577A6676445334 NUMBER JUMP PUSH17 0x677646437855794D525656323561584C63 ADDRESS PUSH22 0x5546794173457269437662493768306C336953656750 POP CALLVALUE COINBASE JUMP CODESIZE PUSH19 0x7A4D7855317348387067337638795876336445 MSTORE PUSH18 0x654F534A7238614B4F73556541776A534953 ORIGIN 0x4C 0x2F 0x4D SELFBALANCE POP MSIZE PC 0x49 COINBASE 0x4C 0x49 PUSH12 0x43776C35416A615A77506645 PUSH12 0x7541595758724473316E466D JUMPI PUSH7 0x73716248544F51 CALLVALUE PUSH12 0x795272694478486C3962686F COINBASE PUSH26 0x6A382B6A696A6E6F323076524D4A6D54334C5948795245702F65 PUSH15 0x37454758753252637768472F686D79 CALLER PUSH13 0x69326434444954316D31374F4A 0x4F PUSH2 0x4765 MSIZE PUSH7 0x5857474D6F6876 JUMPI PUSH5 0x47526B7A36 MSIZE SELFBALANCE MSTORE8 PUSH17 0x6750316C397A38627A367A5A6D5A377577 PUSH24 0x704E74384C616A67466C4E3744784B33764B706558704E45 ORIGIN PUSH15 0x30336D6170765052364F4A4B786D77 PUSH14 0x4256625945574F37336531325736 PUSH14 0x767372747432342B75613975756B 0x2F PUSH10 0x5270704147786E2B4C48 PUSH8 0x516F582B506D4F52 CALLVALUE PUSH23 0x37324738345575594D616D6171716D62576F764D797361 CALLER PUSH2 0x316A POP PUSH10 0x38566D735477706E6F48 0x4A PUSH24 0x2B506D61586C53317343424C382F7A53706D467A34634C57 ORIGIN CHAINID CALLDATACOPY JUMPI GAS JUMP JUMP PC SLOAD PUSH2 0x4855 PUSH12 0x75707936715264735843384B 0x2F PUSH7 0x45574443727765 MLOAD CODESIZE GAS CODESIZE 0x4A PUSH24 0x6E7650504C443150415A2B414F4874686862515479385641 COINBASE COINBASE COINBASE COINBASE GASLIMIT PUSH13 0x46546B5375516D43436956424F MSTORE PUSH24 0x304B47676F414141414E5355684555674141414473414141 COINBASE CALLDATACOPY TIMESTAMP COINBASE 0x4D COINBASE COINBASE COINBASE COINBASE CALLER NUMBER 0x2B 0x2B COINBASE COINBASE COINBASE COINBASE COINBASE DIFFICULTY BALANCE TIMESTAMP 0x4D JUMP GASLIMIT SSTORE COINBASE COINBASE COINBASE TIMESTAMP CALLDATACOPY CALLDATASIZE CHAINID TIMESTAMP PUSH2 0x7754 GASLIMIT BALANCE SELFBALANCE PUSH10 0x444E2F726B6563464278 COINBASE COINBASE COINBASE COINBASE COINBASE PC MSTORE MSTORE8 SLOAD PUSH13 0x4D41514F62595A674141415974 0x4A MSTORE GASLIMIT CHAINID SSTORE 0x4F 0x4D PUSH23 0x74303432747044414D424F424971574473626342324137 CHAINID DIFFICULTY COINBASE CALLVALUE PUSH11 0x7276365A7A34504C345754 PUSH18 0x3446326C46346F2F52494C4755332F586672 PUSH11 0x34767239672F765A56532B CODECOPY PUSH17 0x66627169726B31737077634A6F58377951 MLOAD CALLDATACOPY PUSH8 0x554A374273332B48 0x4D PUSH11 0x6C5246356A2F7447563731 GAS 0x4D PC ORIGIN GAS 0x49 PUSH16 0x776A4736456D547934516A75624C7131 PUSH22 0x4774373130783573596D4766567465776F4D414C3536 0x2F JUMP PUSH17 0x42656D524A693271736B49656558786146 CODECOPY PUSH4 0x57316B4F PUSH17 0x6C5A6C5A3931794F746E4B77674D506C6D SLOAD PUSH7 0x536B7865724467 PUSH3 0x472F6C PUSH8 0x6C76436474386D66 CALLDATALOAD PUSH22 0x51495056674E4C467A58483835614B4F412B6E707835 POP PUSH24 0x53657A444A592F6347785A674143554C5271343570486831 BALANCE CALLDATALOAD 0x4F POP JUMP MSTORE8 PUSH22 0x7154654F5138435A614C78516B5663515977625A2F76 0x4A ORIGIN PUSH7 0x7A43664C422F4D CODESIZE PUSH22 0x6F4F7A674635506A38734F6467444138475A41793279 PC JUMP PUSH15 0x416E5377547635356154767A796237 PUSH27 0x314249366D69636652576F58466F77566732336630705644393948 TIMESTAMP PUSH20 0x752F74354A707842657A67414454446C372B5473 ORIGIN PUSH16 0x4736746933454B67366C79755459725A CHAINID PUSH3 0x755847 NUMBER BALANCE 0x4E PUSH4 0x3252354D PC PUSH5 0x556D683271 PC NUMBER CODECOPY PUSH4 0x2F70446D PUSH2 0x3350 0x4E PUSH24 0x2F5962726D6D7831636F73374C792B4D3757516B742F4C76 0x2F PUSH13 0x72716B3158702B6C574A4B7669 PUSH20 0x687371645366465458764847754C46655753662F TIMESTAMP GAS MSTORE PUSH19 0x576F7A36764867344141414141456C46546B53 PUSH22 0x516D43436956424F5277304B47676F414141414E5355 PUSH9 0x455567414141447741 COINBASE COINBASE COINBASE CODESIZE TIMESTAMP COINBASE 0x4D COINBASE COINBASE COINBASE DIFFICULTY 0x49 ADDRESS PUSH20 0x524241414141456C424D564555414141436E6131 PUSH13 0x79514441314769444A6B6F4A4D 0x4D DIFFICULTY GAS PUSH27 0x4E6462734141414141585253546C4D41514F62595A674141415842 0x4A MSTORE GASLIMIT CHAINID SSTORE 0x4F 0x4D PUSH23 0x74307475746F7A41516747464C727541667034455A4772 NUMBER CALLDATALOAD CHAINID 0x49 COINBASE PUSH16 0x4161582F566862624A4D59734B2B3337 0x4F PUSH4 0x35447876 PUSH12 0x794E34543750542F31544331 CALLVALUE ADDRESS PUSH21 0x314E30546B2F75615635303257663372747A797A74 BASEFEE PUSH5 0x2F5745784A 0x4B PUSH27 0x39787A4647796347434456694A4E7953312B4D3368687A6D623135 CODECOPY 0x2B PUSH16 0x776B6944352F49436A626A5330686359 PUSH13 0x2B393071776E76307167794C54 0x4F 0x2F PUSH19 0x336441536A647455396B6C764B6443796F4F56 0x49 PUSH6 0x6D4346503973 MSTORE8 JUMPI 0x49 CHAINID SSTORE 0x4F GASLIMIT 0x4F PUSH27 0x4C303463446C556D464B35556E6E4449505348357179706735484C PUSH18 0x587A466859476D766D44495748592B334453 PUSH22 0x7653504266596A71437978426E44476838584E71386E 0x4D CALLDATASIZE PUSH26 0x49427253796B4552356A565457796D4178737A636F5845593556 ADDRESS CHAINID COINBASE 0x4B PUSH10 0x736F3535727558415730 PUSH20 0x554264732F336449487A65444179685A36344D34 CALLDATALOAD ORIGIN PUSH13 0x63657159776D5755632F48436E 0x4C PUSH24 0x43485A667A66642F6D5A393563783656586D61566E627932 CALLDATALOAD PUSH17 0x567638337656766C755061754E55753158 PUSH20 0x324E57674D4A74593469566D66626161685A3274 PUSH20 0x4858737974324A757A457938736C335A726A7A66 0x4F MSTORE PC PUSH6 0x4F6F364E2F5A PC CODECOPY 0x2B PUSH20 0x79762B4A39734A76316F6176626847557A764C4D PUSH3 0x5A5050 ORIGIN 0x4C MLOAD 0x2B POP CALLDATACOPY CALLER PUSH10 0x662F4159593256433973 BASEFEE 0x4D PUSH14 0x624141414141456C46546B537551 PUSH14 0x43436956424F5277304B47676F41 COINBASE COINBASE COINBASE 0x4E MSTORE8 SSTORE PUSH9 0x455567414141447741 COINBASE COINBASE COINBASE CODESIZE TIMESTAMP COINBASE 0x4D COINBASE COINBASE COINBASE DIFFICULTY 0x49 ADDRESS PUSH20 0x5242414141414431424D56455541414144323362 PUSH15 0x6C76594931476944343463444A5473 CHAINID 0x4A COINBASE COINBASE COINBASE COINBASE COINBASE PC MSTORE MSTORE8 SLOAD PUSH13 0x4D41514F62595A67414141554A 0x4A MSTORE GASLIMIT CHAINID SSTORE 0x4F 0x4D PUSH23 0x743039474E7779414D426D416B4A766A744C6D427A4139 PUSH9 0x6B6774372B5178302B MSTORE8 PUSH9 0x4D4344783267524D67 ORIGIN PUSH15 0x77784555644A33664D642B48434E73 CODESIZE PUSH4 0x42684B65 SSTORE JUMPI PUSH11 0x6C557A2F4E644C5370562F SELFBALANCE 0x4C PUSH2 0x776B ADDRESS 0x4D CALLVALUE 0x49 PUSH13 0x6834625359767A396A3855566D JUMPI PUSH5 0x6B6470547A TIMESTAMP PUSH18 0x65336A5A753142424F377568564C6C78686A PUSH18 0x35756D5657466C62596A597445752B566F70 PUSH19 0x726A4E693033326A41315246484C3268685674 PUSH9 0x7858577A6862387335 PUSH12 0x5754707A577831634F6C4E6E CALLDATASIZE JUMP PUSH24 0x486537436A7A5741574267667A594A6954674C537A746C51 CALLVALUE CALLVALUE 0x2B MLOAD NUMBER 0x4B COINBASE NUMBER 0x4A PUSH18 0x78482B692F6F705A334159514D4552415468 PUSH20 0x34755A6B725A44516D65454378654357456D5069 COINBASE PUSH17 0x774D314A56707343774D6D62734A4D344F PUSH23 0x374C687738686472734C365930346363537A464B464C58 PUSH15 0x65766E695665354D6B63394D6E5756 PUSH13 0x4652333735636849722B796B43 PUSH9 0x6F735542572B733437 0x2F JUMPI CALLDATACOPY PUSH5 0x63336B6674 JUMPI GASLIMIT 0x2F JUMPI PUSH14 0x544F4337563047773259756C7865 GAS ORIGIN PC PUSH7 0x4D4D39764A2B63 CALLDATASIZE PUSH18 0x6447565250546B2F6F54497A4B5234324B75 PUSH24 0x594538396E442F3444665A524D547635794B723041414141 COINBASE MSTORE8 SSTORE JUMP 0x4F MSTORE 0x4B CALLDATALOAD NUMBER MSIZE 0x49 0x49 RETURNDATASIZE PUSH10 0x56424F5277304B47676F COINBASE COINBASE COINBASE COINBASE 0x4E MSTORE8 SSTORE PUSH9 0x455567414141447741 COINBASE COINBASE COINBASE CODESIZE TIMESTAMP COINBASE 0x4D COINBASE COINBASE COINBASE DIFFICULTY 0x49 ADDRESS PUSH20 0x5242414141414431424D56455541414142373646 TIMESTAMP PUSH2 0x7754 GASLIMIT BALANCE SELFBALANCE PUSH10 0x444E2F726B6563464278 COINBASE COINBASE COINBASE COINBASE COINBASE PC MSTORE MSTORE8 SLOAD PUSH13 0x4D41514F62595A674141415970 0x4A MSTORE GASLIMIT CHAINID SSTORE 0x4F 0x4D PUSH23 0x743034734E7044414D424E424971574473626342324137 CHAINID DIFFICULTY COINBASE CALLVALUE PUSH11 0x7276365A7A344C4A386C68 0x49 PUSH22 0x306F72456A394567735A542F362F3936583331655872 CHAINID 0x2F PUSH6 0x69756C397257 0x2F CALLER CHAINID TIMESTAMP PC 0x4A CALLDATACOPY PUSH5 0x53676F5852 PUSH7 0x6E676868334170 SLOAD PUSH14 0x445A66734F5A48616D4B7A482F61 0x4D CALLDATACOPY PUSH27 0x717959727479525268474E30494D336C7768585932585672644E4C PUSH27 0x72707A3359784D492B72613568515945587A6C2B725353394D6954 TIMESTAMP PUSH21 0x565A4D523873726A3058363474724963544B334B7A PUSH19 0x726C644C4B56685163654C4D6D2B6C5A693857 BASEFEE GASLIMIT ORIGIN 0x4E PUSH23 0x4C424C4F453762354D2F7A636B5265724161574C697558 CODESIZE CALLDATALOAD PUSH2 0x4B4F COINBASE 0x2B PUSH15 0x707835507753657A444A592F634778 GAS PUSH8 0x4143554C52713435 PUSH17 0x48683131354F505653757154654F513843 GAS PUSH2 0x4C78 MLOAD PUSH12 0x5663515977625A2F764A3266 PUSH27 0x43664C442F4D73756F4F7A67463550683832584D77686763444D67 PUSH3 0x62354C PUSH16 0x7A415470594A33396632733538737538 CODESIZE PUSH21 0x59534F35736C486B64714642575046594E7533644F PC MLOAD PUSH7 0x58537737487337 PUSH22 0x575A6341547334414D337735652F6B724A71424F7659 PUSH21 0x424B724F3563716B6D47325257376E787768525874 PUSH8 0x64545637584A6F64 PUSH19 0x6C777655506159346D397A7863762B47364A6C PUSH22 0x64334F4C4F7977746A4F786E4A72667937763562365A CHAINID JUMPI CALLDATASIZE PUSH7 0x6C5769436A3672 PUSH16 0x584A6E556E7A4C4B3934594E39597236 0x2B MSTORE8 0x2F PUSH13 0x4970616A4F767A372B45414141 COINBASE COINBASE MSTORE8 SSTORE JUMP 0x4F MSTORE 0x4B CALLDATALOAD NUMBER MSIZE 0x49 0x49 RETURNDATASIZE PUSH10 0x56424F5277304B47676F COINBASE COINBASE COINBASE COINBASE 0x4E MSTORE8 SSTORE PUSH9 0x455567414141447741 COINBASE COINBASE COINBASE CODESIZE TIMESTAMP COINBASE 0x4D COINBASE COINBASE COINBASE DIFFICULTY 0x49 ADDRESS PUSH20 0x5242414141414431424D56455541414143453166 CODECOPY COINBASE PUSH17 0x7563314769446D39762F626165624E4141 COINBASE COINBASE COINBASE PC MSTORE MSTORE8 SLOAD PUSH13 0x4D41514F62595A674141415970 0x4A MSTORE GASLIMIT CHAINID SSTORE 0x4F 0x4D PUSH23 0x743034734E7044414D424E424971574473626342324137 CHAINID DIFFICULTY COINBASE CALLVALUE PUSH11 0x7276365A7A344C4A386C68 0x49 PUSH22 0x306F72456A394567735A542F362F3936583331655872 CHAINID 0x2F PUSH6 0x69756C397257 0x2F CALLER CHAINID TIMESTAMP PC 0x4A CALLDATACOPY PUSH5 0x53676F5852 PUSH7 0x6E676868334170 SLOAD PUSH14 0x445A66734F5A48616D4B7A482F61 0x4D CALLDATACOPY PUSH27 0x717959727479525268474E30494D336C7768585932585672644E4C PUSH27 0x72707A3359784D492B72613568515945587A6C2B725353394D6954 TIMESTAMP PUSH21 0x565A4D523873726A3058363474724963544B334B7A PUSH19 0x726C644C4B56685163654C4D6D2B6C5A693857 BASEFEE GASLIMIT ORIGIN 0x4E PUSH23 0x4C424C4F453762354D2F7A636B5265724161574C697558 CODESIZE CALLDATALOAD PUSH2 0x4B4F COINBASE 0x2B PUSH15 0x707835507753657A444A592F634778 GAS PUSH8 0x4143554C52713435 PUSH17 0x48683131354F505653757154654F513843 GAS PUSH2 0x4C78 MLOAD PUSH12 0x5663515977625A2F764A3266 PUSH27 0x43664C442F4D73756F4F7A67463550683832584D77686763444D67 PUSH3 0x62354C PUSH16 0x7A415470594A33396632733538737538 CODESIZE PUSH21 0x59534F35736C486B64714642575046594E7533644F PC MLOAD PUSH7 0x58537737487337 PUSH22 0x575A6341547334414D337735652F6B724A71424F7659 PUSH21 0x424B724F3563716B6D47325257376E787768525874 PUSH8 0x64545637584A6F64 PUSH19 0x6C777655506159346D397A7863762B47364A6C PUSH22 0x64334F4C4F7977746A4F786E4A72667937763562365A CHAINID JUMPI CALLDATASIZE PUSH7 0x6C5769436A3672 PUSH16 0x584A6E556E7A4C4B3934594E39597236 0x2B MSTORE8 0x2F PUSH13 0x4970616A4F767A372B45414141 COINBASE COINBASE MSTORE8 SSTORE JUMP 0x4F MSTORE 0x4B CALLDATALOAD NUMBER MSIZE 0x49 0x49 RETURNDATASIZE LOG1 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP EXP ",
              "sourceMap": "2032:18863:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;19193:96;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;18882:93;;;:::i;20014:94::-;;;:::i;11077:854::-;;;:::i;12613:543::-;;;:::i;13844:735::-;;;:::i;19506:96::-;;;:::i;5889:694::-;;;:::i;20116:92::-;;;:::i;19720:87::-;;;:::i;19910:96::-;;;:::i;14586:764::-;;;:::i;19398:100::-;;;:::i;15357:767::-;;;:::i;10173:897::-;;;:::i;17840:730::-;;;:::i;9321:845::-;;;:::i;8641:673::-;;;:::i;19087:98::-;;;:::i;20414:86::-;;;:::i;16131:725::-;;;:::i;2660:603::-;;;:::i;7269:696::-;;;:::i;11938:668::-;;;:::i;18781:93::-;;;:::i;18680:::-;;;:::i;19610:102::-;;;:::i;3880:599::-;;;:::i;20314:92::-;;;:::i;18579:93::-;;;:::i;20508:92::-;;;:::i;13163:674::-;;;:::i;20216:90::-;;;:::i;7972:662::-;;;:::i;20802:90::-;;;:::i;19297:93::-;;;:::i;4486:694::-;;;:::i;6590:672::-;;;:::i;16863:970::-;;;:::i;2054:599::-;;;:::i;20704:90::-;;;:::i;18983:96::-;;;:::i;5187:695::-;;;:::i;19815:87::-;;;:::i;3270:603::-;;;:::i;20608:88::-;;;:::i;19193:96::-;19238:13;19271:10;;;;;;;;;;;;;;;;;19264:17;;19193:96;:::o;18882:93::-;18923:13;18956:11;;;;;;;;;;;;;;;;;18949:18;;18882:93;:::o;20014:94::-;20058:13;20091:8;;;;;;;;;;;;;;;;;20084:15;;20014:94;:::o;11077:854::-;;;;;;;;;;;;;;;;;;;:::o;12613:543::-;;;;;;;;;;;;;;;;;;;:::o;13844:735::-;;;;;;;;;;;;;;;;;;;:::o;19506:96::-;19551:13;19584:10;;;;;;;;;;;;;;;;;19577:17;;19506:96;:::o;5889:694::-;;;;;;;;;;;;;;;;;;;:::o;20116:92::-;20159:13;20192:7;;;;;;;;;;;;;;;;;20185:14;;20116:92;:::o;19720:87::-;19761:13;19794:5;;;;;;;;;;;;;;;;;19787:12;;19720:87;:::o;19910:96::-;19955:13;19988:10;;;;;;;;;;;;;;;;;19981:17;;19910:96;:::o;14586:764::-;;;;;;;;;;;;;;;;;;;:::o;19398:100::-;19445:13;19478:12;;;;;;;;;;;;;;;;;19471:19;;19398:100;:::o;15357:767::-;;;;;;;;;;;;;;;;;;;:::o;10173:897::-;;;;;;;;;;;;;;;;;;;:::o;17840:730::-;;;;;;;;;;;;;;;;;;;:::o;9321:845::-;;;;;;;;;;;;;;;;;;;:::o;8641:673::-;;;;;;;;;;;;;;;;;;;:::o;19087:98::-;19133:13;19166:11;;;;;;;;;;;;;;;;;19159:18;;19087:98;:::o;20414:86::-;20454:13;20487:4;;;;;;;;;;;;;;;;;20480:11;;20414:86;:::o;16131:725::-;;;;;;;;;;;;;;;;;;;:::o;2660:603::-;;;;;;;;;;;;;;;;;;;:::o;7269:696::-;;;;;;;;;;;;;;;;;;;:::o;11938:668::-;;;;;;;;;;;;;;;;;;;:::o;18781:93::-;18822:13;18855:11;;;;;;;;;;;;;;;;;18848:18;;18781:93;:::o;18680:::-;18721:13;18754:11;;;;;;;;;;;;;;;;;18747:18;;18680:93;:::o;19610:102::-;19658:13;19691;;;;;;;;;;;;;;;;;19684:20;;19610:102;:::o;3880:599::-;;;;;;;;;;;;;;;;;;;:::o;20314:92::-;20357:13;20390:7;;;;;;;;;;;;;;;;;20383:14;;20314:92;:::o;18579:93::-;18620:13;18653:11;;;;;;;;;;;;;;;;;18646:18;;18579:93;:::o;20508:92::-;20551:13;20584:7;;;;;;;;;;;;;;;;;20577:14;;20508:92;:::o;13163:674::-;;;;;;;;;;;;;;;;;;;:::o;20216:90::-;20258:13;20291:6;;;;;;;;;;;;;;;;;20284:13;;20216:90;:::o;7972:662::-;;;;;;;;;;;;;;;;;;;:::o;20802:90::-;20844:13;20877:6;;;;;;;;;;;;;;;;;20870:13;;20802:90;:::o;19297:93::-;19341:13;19374:8;;;;;;;;;;;;;;;;;19367:15;;19297:93;:::o;4486:694::-;;;;;;;;;;;;;;;;;;;:::o;6590:672::-;;;;;;;;;;;;;;;;;;;:::o;16863:970::-;;;;;;;;;;;;;;;;;;;:::o;2054:599::-;;;;;;;;;;;;;;;;;;;:::o;20704:90::-;20746:13;20779:6;;;;;;;;;;;;;;;;;20772:13;;20704:90;:::o;18983:96::-;19028:13;19061:10;;;;;;;;;;;;;;;;;19054:17;;18983:96;:::o;5187:695::-;;;;;;;;;;;;;;;;;;;:::o;19815:87::-;19856:13;19889:5;;;;;;;;;;;;;;;;;19882:12;;19815:87;:::o;3270:603::-;;;;;;;;;;;;;;;;;;;:::o;20608:88::-;20649:13;20682:5;;;;;;;;;;;;;;;;;20675:12;;20608:88;:::o;14:597:2:-;126:4;155:2;184;173:9;166:21;216:6;210:13;259:6;254:2;243:9;239:18;232:34;284:1;294:140;308:6;305:1;302:13;294:140;;;403:14;;;399:23;;393:30;369:17;;;388:2;365:26;358:66;323:10;;294:140;;;452:6;449:1;446:13;443:91;;;522:1;517:2;508:6;497:9;493:22;489:31;482:42;443:91;-1:-1:-1;595:2:2;574:15;-1:-1:-1;;570:29:2;555:45;;;;602:2;551:54;;14:597;-1:-1:-1;;;14:597:2:o"
            },
            "methodIdentifiers": {
              "blue_slime()": "233ab6b6",
              "bubble_gum()": "c63fb76f",
              "cosmic()": "d54807e7",
              "getBlueSlime()": "020a41be",
              "getBubbleGum()": "e7d01d7a",
              "getCosmic()": "e6595f42",
              "getGorilla()": "99726ec2",
              "getGreenGoblin()": "34739b2a",
              "getGreenSlime()": "557dd064",
              "getHand1()": "9b45d56d",
              "getHand2()": "8a99b7fb",
              "getHand3()": "888a0b77",
              "getHand4()": "06756729",
              "getPirate()": "b3f22af2",
              "getPlastic()": "240cf269",
              "getRedGoblin()": "1e7b565b",
              "getSkeleton()": "080576e1",
              "getSnowTiger()": "32e8e544",
              "getSquatch()": "9e15f495",
              "getSteve()": "fbe154bb",
              "getSully()": "2817e5be",
              "getTiger()": "ecde9067",
              "getVitiligo()": "c305b2b2",
              "getYellowGoblin()": "8e4f449b",
              "getYeti()": "6941464f",
              "getZombie()": "a592a451",
              "gorilla()": "15c466a6",
              "green_goblin()": "832e548a",
              "green_slime()": "ecc53b5e",
              "pirate()": "45aad66d",
              "plastic()": "0f114e0c",
              "red_goblin()": "ac81d87b",
              "skeleton()": "85ead00a",
              "skin_tone_1()": "96b678a4",
              "skin_tone_2()": "ed6f1156",
              "skin_tone_3()": "7f478d38",
              "skin_tone_4()": "da2643bc",
              "snow_tiger()": "0e2a8038",
              "squatch()": "43cf51ff",
              "steve()": "697e9262",
              "sully()": "4e9e4cfa",
              "tiger()": "44d333ff",
              "vitiligo()": "c7c866b2",
              "yellow_goblin()": "5408e269",
              "yeti()": "343e613a",
              "zombie()": "a1b9bb53"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"blue_slime\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"bubble_gum\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cosmic\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBlueSlime\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBubbleGum\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCosmic\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getGorilla\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getGreenGoblin\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getGreenSlime\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getHand1\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getHand2\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getHand3\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getHand4\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPirate\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPlastic\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRedGoblin\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getSkeleton\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getSnowTiger\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getSquatch\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getSteve\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getSully\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTiger\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getVitiligo\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getYellowGoblin\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getYeti\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getZombie\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"gorilla\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"green_goblin\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"green_slime\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pirate\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"plastic\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"red_goblin\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"skeleton\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"skin_tone_1\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"skin_tone_2\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"skin_tone_3\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"skin_tone_4\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"snow_tiger\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"squatch\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"steve\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sully\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tiger\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vitiligo\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"yellow_goblin\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"yeti\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"zombie\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@Allcontracts/Inventory.sol\":\"Hands\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":25},\"remappings\":[]},\"sources\":{\"@Allcontracts/Inventory.sol\":{\"keccak256\":\"0x66c19721ac9af209a955d9063975d0a5247d2970cdea1109c1278b2ebadffd7e\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://e6b7b3fc65f0de45e18ce6196255dcc5c66df0d6f6ee7bb7fc7ae3da6bedc873\",\"dweb:/ipfs/QmTBAqdf2y6N8dDAVCR5yWZiFyn5kFefaFFfFgRXiKeQwD\"]}},\"version\":1}"
        },
        "Potato": {
          "abi": [
            {
              "inputs": [],
              "name": "getPotato",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "pure",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "potato",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "608060405234801561001057600080fd5b50610351806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80636e329aa91461003b578063f8dcc9a914610059575b600080fd5b610043610061565b60405161005091906100a3565b60405180910390f35b610043610084565b606060405180610280016040528061024c81526020016100f961024c9139905090565b60405180610280016040528061024c81526020016100f961024c913981565b600060208083528351808285015260005b818110156100d0578581018301518582016040015282016100b4565b818111156100e2576000604083870101525b50601f01601f191692909201604001939250505056fe6956424f5277304b47676f414141414e5355684555674141414473414141413742414d4141414133432b2b41414141414a46424d564555414141444e49536354457850397531582f624142434678502f2f2f2f326644762f7741444d4c7a76656f56433649435741774c68384141414141585253546c4d41514f62595a67414141554e4a524546554f4d76747a7a314f77304151426543774a32425765344464326677426e616577524c65524339644775514249506f426470415a52704536586c6e53636b72636b564a354e545a476e6b5a745062335938752b556376717247586b4e766144627a4a5137576b446532344e6e49596f703342566a513247445154395a6769664b7578775358504c347147324a795a484741656c612b75306d45315172444b4c673255664a475a556655374d48327a6d734d5941354e737471663465723331536a444f6846346d754234724749393444693176656e6a386c587151496e3839473161396d39394830397a6a514f642b6646376142714633615574517a746c513539753255664d3839652b4954766874746d7756437853723156756f2b5363437677686a45533063626e4331526270564836694e6936324f624765547a6d51753342587a366e457a4175567a533933782b4f687178494f6e7a4439385a446f5875464e587635776546463235386474745758774b755464326e595771654b4173737032464a47645773376269586369724a5a7a48633551316a54586b5a4b696e7032684a5766674c663838507a4a6754426531544373654141414141456c46546b5375516d4343a164736f6c6343000807000a",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x351 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6E329AA9 EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0xF8DCC9A9 EQ PUSH2 0x59 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x43 PUSH2 0x61 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x50 SWAP2 SWAP1 PUSH2 0xA3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x43 PUSH2 0x84 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH2 0x280 ADD PUSH1 0x40 MSTORE DUP1 PUSH2 0x24C DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xF9 PUSH2 0x24C SWAP2 CODECOPY SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x280 ADD PUSH1 0x40 MSTORE DUP1 PUSH2 0x24C DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xF9 PUSH2 0x24C SWAP2 CODECOPY DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xD0 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0xB4 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0xE2 JUMPI PUSH1 0x0 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP INVALID PUSH10 0x56424F5277304B47676F COINBASE COINBASE COINBASE COINBASE 0x4E MSTORE8 SSTORE PUSH9 0x455567414141447341 COINBASE COINBASE COINBASE CALLDATACOPY TIMESTAMP COINBASE 0x4D COINBASE COINBASE COINBASE COINBASE CALLER NUMBER 0x2B 0x2B COINBASE COINBASE COINBASE COINBASE COINBASE 0x4A CHAINID TIMESTAMP 0x4D JUMP GASLIMIT SSTORE COINBASE COINBASE COINBASE DIFFICULTY 0x4E 0x49 MSTORE8 PUSH4 0x54457850 CODECOPY PUSH22 0x31582F624142434678502F2F2F2F326644762F774144 0x4D 0x4C PUSH27 0x76656F56433649435741774C68384141414141585253546C4D4151 0x4F PUSH3 0x595A67 COINBASE COINBASE COINBASE SSTORE 0x4E 0x4A MSTORE GASLIMIT CHAINID SSTORE 0x4F 0x4D PUSH23 0x747A7A314F77304151426543774A324257653444643266 PUSH24 0x426E616577524C65524339644775514249506F426470415A MSTORE PUSH17 0x4536586C6E53636B72636B564A354E545A SELFBALANCE PUSH15 0x6B5A745062335938752B5563767172 SELFBALANCE PC PUSH12 0x4E766144627A4A5137576B44 PUSH6 0x32344E6E4959 PUSH16 0x703342566A513247445154395A676966 0x4B PUSH22 0x78775358504C347147324A795A484741656C612B7530 PUSH14 0x45315172444B4C673255664A475A SSTORE PUSH7 0x55374D48327A6D PUSH20 0x4D5941354E737471663465723331536A444F6846 CALLVALUE PUSH14 0x754234724749393444693176656E PUSH11 0x386C587151496E38394731 PUSH2 0x396D CODECOPY CODECOPY BASEFEE ADDRESS CODECOPY PUSH27 0x6A514F642B6646376142714633615574517A746C51353975325566 0x4D CODESIZE CODECOPY PUSH6 0x2B4954766874 PUSH21 0x6D7756437853723156756F2B5363437677686A4553 ADDRESS PUSH4 0x626E4331 MSTORE PUSH3 0x705648 CALLDATASIZE PUSH10 0x4E6936324F624765547A PUSH14 0x51753342587A366E457A4175567A MSTORE8 CODECOPY CALLER PUSH25 0x2B4F687178494F6E7A4439385A446F5875464E587635776546 CHAINID ORIGIN CALLDATALOAD CODESIZE PUSH5 0x7474575877 0x4B PUSH22 0x5464326E595771654B4173737032464A476457733762 PUSH10 0x586369724A5A7A486335 MLOAD BALANCE PUSH11 0x54586B5A4B696E7032684A JUMPI PUSH7 0x674C663838507A 0x4A PUSH8 0x5442653154437365 COINBASE COINBASE COINBASE COINBASE COINBASE GASLIMIT PUSH13 0x46546B5375516D4343A164736F PUSH13 0x6343000807000A000000000000 ",
              "sourceMap": "20899:746:0:-:0;;;;;;;;;;;;;;;;;;;"
            },
            "deployedBytecode": {
              "functionDebugData": {
                "@getPotato_300": {
                  "entryPoint": 97,
                  "id": 300,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "@potato_292": {
                  "entryPoint": 132,
                  "id": 292,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
                  "entryPoint": 163,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                }
              },
              "generatedSources": [
                {
                  "ast": {
                    "nodeType": "YulBlock",
                    "src": "0:613:2",
                    "statements": [
                      {
                        "nodeType": "YulBlock",
                        "src": "6:3:2",
                        "statements": []
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "135:476:2",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "145:12:2",
                              "value": {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "155:2:2",
                                "type": "",
                                "value": "32"
                              },
                              "variables": [
                                {
                                  "name": "_1",
                                  "nodeType": "YulTypedName",
                                  "src": "149:2:2",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "173:9:2"
                                  },
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "184:2:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "166:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "166:21:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "166:21:2"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "196:27:2",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "216:6:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "210:5:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "210:13:2"
                              },
                              "variables": [
                                {
                                  "name": "length",
                                  "nodeType": "YulTypedName",
                                  "src": "200:6:2",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "243:9:2"
                                      },
                                      {
                                        "name": "_1",
                                        "nodeType": "YulIdentifier",
                                        "src": "254:2:2"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "239:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "239:18:2"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "259:6:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "232:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "232:34:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "232:34:2"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "275:10:2",
                              "value": {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "284:1:2",
                                "type": "",
                                "value": "0"
                              },
                              "variables": [
                                {
                                  "name": "i",
                                  "nodeType": "YulTypedName",
                                  "src": "279:1:2",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "344:90:2",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "arguments": [
                                                {
                                                  "name": "headStart",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "373:9:2"
                                                },
                                                {
                                                  "name": "i",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "384:1:2"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "add",
                                                "nodeType": "YulIdentifier",
                                                "src": "369:3:2"
                                              },
                                              "nodeType": "YulFunctionCall",
                                              "src": "369:17:2"
                                            },
                                            {
                                              "kind": "number",
                                              "nodeType": "YulLiteral",
                                              "src": "388:2:2",
                                              "type": "",
                                              "value": "64"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "add",
                                            "nodeType": "YulIdentifier",
                                            "src": "365:3:2"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "365:26:2"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "arguments": [
                                                {
                                                  "arguments": [
                                                    {
                                                      "name": "value0",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "407:6:2"
                                                    },
                                                    {
                                                      "name": "i",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "415:1:2"
                                                    }
                                                  ],
                                                  "functionName": {
                                                    "name": "add",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "403:3:2"
                                                  },
                                                  "nodeType": "YulFunctionCall",
                                                  "src": "403:14:2"
                                                },
                                                {
                                                  "name": "_1",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "419:2:2"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "add",
                                                "nodeType": "YulIdentifier",
                                                "src": "399:3:2"
                                              },
                                              "nodeType": "YulFunctionCall",
                                              "src": "399:23:2"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "mload",
                                            "nodeType": "YulIdentifier",
                                            "src": "393:5:2"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "393:30:2"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "358:6:2"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "358:66:2"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "358:66:2"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "i",
                                    "nodeType": "YulIdentifier",
                                    "src": "305:1:2"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "308:6:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "lt",
                                  "nodeType": "YulIdentifier",
                                  "src": "302:2:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "302:13:2"
                              },
                              "nodeType": "YulForLoop",
                              "post": {
                                "nodeType": "YulBlock",
                                "src": "316:19:2",
                                "statements": [
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "318:15:2",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "i",
                                          "nodeType": "YulIdentifier",
                                          "src": "327:1:2"
                                        },
                                        {
                                          "name": "_1",
                                          "nodeType": "YulIdentifier",
                                          "src": "330:2:2"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "323:3:2"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "323:10:2"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "i",
                                        "nodeType": "YulIdentifier",
                                        "src": "318:1:2"
                                      }
                                    ]
                                  }
                                ]
                              },
                              "pre": {
                                "nodeType": "YulBlock",
                                "src": "298:3:2",
                                "statements": []
                              },
                              "src": "294:140:2"
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "468:66:2",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "arguments": [
                                                {
                                                  "name": "headStart",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "497:9:2"
                                                },
                                                {
                                                  "name": "length",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "508:6:2"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "add",
                                                "nodeType": "YulIdentifier",
                                                "src": "493:3:2"
                                              },
                                              "nodeType": "YulFunctionCall",
                                              "src": "493:22:2"
                                            },
                                            {
                                              "kind": "number",
                                              "nodeType": "YulLiteral",
                                              "src": "517:2:2",
                                              "type": "",
                                              "value": "64"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "add",
                                            "nodeType": "YulIdentifier",
                                            "src": "489:3:2"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "489:31:2"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "522:1:2",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "482:6:2"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "482:42:2"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "482:42:2"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "i",
                                    "nodeType": "YulIdentifier",
                                    "src": "449:1:2"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "452:6:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "446:2:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "446:13:2"
                              },
                              "nodeType": "YulIf",
                              "src": "443:91:2"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "543:62:2",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "559:9:2"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "name": "length",
                                                "nodeType": "YulIdentifier",
                                                "src": "578:6:2"
                                              },
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "586:2:2",
                                                "type": "",
                                                "value": "31"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "add",
                                              "nodeType": "YulIdentifier",
                                              "src": "574:3:2"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "574:15:2"
                                          },
                                          {
                                            "arguments": [
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "595:2:2",
                                                "type": "",
                                                "value": "31"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "not",
                                              "nodeType": "YulIdentifier",
                                              "src": "591:3:2"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "591:7:2"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "and",
                                          "nodeType": "YulIdentifier",
                                          "src": "570:3:2"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "570:29:2"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "555:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "555:45:2"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "602:2:2",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "551:3:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "551:54:2"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "543:4:2"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "104:9:2",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "115:6:2",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "126:4:2",
                            "type": ""
                          }
                        ],
                        "src": "14:597:2"
                      }
                    ]
                  },
                  "contents": "{\n    { }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, _1)\n        let length := mload(value0)\n        mstore(add(headStart, _1), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        if gt(i, length)\n        {\n            mstore(add(add(headStart, length), 64), 0)\n        }\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n}",
                  "id": 2,
                  "language": "Yul",
                  "name": "#utility.yul"
                }
              ],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "608060405234801561001057600080fd5b50600436106100365760003560e01c80636e329aa91461003b578063f8dcc9a914610059575b600080fd5b610043610061565b60405161005091906100a3565b60405180910390f35b610043610084565b606060405180610280016040528061024c81526020016100f961024c9139905090565b60405180610280016040528061024c81526020016100f961024c913981565b600060208083528351808285015260005b818110156100d0578581018301518582016040015282016100b4565b818111156100e2576000604083870101525b50601f01601f191692909201604001939250505056fe6956424f5277304b47676f414141414e5355684555674141414473414141413742414d4141414133432b2b41414141414a46424d564555414141444e49536354457850397531582f624142434678502f2f2f2f326644762f7741444d4c7a76656f56433649435741774c68384141414141585253546c4d41514f62595a67414141554e4a524546554f4d76747a7a314f77304151426543774a32425765344464326677426e616577524c65524339644775514249506f426470415a52704536586c6e53636b72636b564a354e545a476e6b5a745062335938752b556376717247586b4e766144627a4a5137576b446532344e6e49596f703342566a513247445154395a6769664b7578775358504c347147324a795a484741656c612b75306d45315172444b4c673255664a475a556655374d48327a6d734d5941354e737471663465723331536a444f6846346d754234724749393444693176656e6a386c587151496e3839473161396d39394830397a6a514f642b6646376142714633615574517a746c513539753255664d3839652b4954766874746d7756437853723156756f2b5363437677686a45533063626e4331526270564836694e6936324f624765547a6d51753342587a366e457a4175567a533933782b4f687178494f6e7a4439385a446f5875464e587635776546463235386474745758774b755464326e595771654b4173737032464a47645773376269586369724a5a7a48633551316a54586b5a4b696e7032684a5766674c663838507a4a6754426531544373654141414141456c46546b5375516d4343a164736f6c6343000807000a",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6E329AA9 EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0xF8DCC9A9 EQ PUSH2 0x59 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x43 PUSH2 0x61 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x50 SWAP2 SWAP1 PUSH2 0xA3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x43 PUSH2 0x84 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH2 0x280 ADD PUSH1 0x40 MSTORE DUP1 PUSH2 0x24C DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xF9 PUSH2 0x24C SWAP2 CODECOPY SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x280 ADD PUSH1 0x40 MSTORE DUP1 PUSH2 0x24C DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xF9 PUSH2 0x24C SWAP2 CODECOPY DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xD0 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0xB4 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0xE2 JUMPI PUSH1 0x0 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP INVALID PUSH10 0x56424F5277304B47676F COINBASE COINBASE COINBASE COINBASE 0x4E MSTORE8 SSTORE PUSH9 0x455567414141447341 COINBASE COINBASE COINBASE CALLDATACOPY TIMESTAMP COINBASE 0x4D COINBASE COINBASE COINBASE COINBASE CALLER NUMBER 0x2B 0x2B COINBASE COINBASE COINBASE COINBASE COINBASE 0x4A CHAINID TIMESTAMP 0x4D JUMP GASLIMIT SSTORE COINBASE COINBASE COINBASE DIFFICULTY 0x4E 0x49 MSTORE8 PUSH4 0x54457850 CODECOPY PUSH22 0x31582F624142434678502F2F2F2F326644762F774144 0x4D 0x4C PUSH27 0x76656F56433649435741774C68384141414141585253546C4D4151 0x4F PUSH3 0x595A67 COINBASE COINBASE COINBASE SSTORE 0x4E 0x4A MSTORE GASLIMIT CHAINID SSTORE 0x4F 0x4D PUSH23 0x747A7A314F77304151426543774A324257653444643266 PUSH24 0x426E616577524C65524339644775514249506F426470415A MSTORE PUSH17 0x4536586C6E53636B72636B564A354E545A SELFBALANCE PUSH15 0x6B5A745062335938752B5563767172 SELFBALANCE PC PUSH12 0x4E766144627A4A5137576B44 PUSH6 0x32344E6E4959 PUSH16 0x703342566A513247445154395A676966 0x4B PUSH22 0x78775358504C347147324A795A484741656C612B7530 PUSH14 0x45315172444B4C673255664A475A SSTORE PUSH7 0x55374D48327A6D PUSH20 0x4D5941354E737471663465723331536A444F6846 CALLVALUE PUSH14 0x754234724749393444693176656E PUSH11 0x386C587151496E38394731 PUSH2 0x396D CODECOPY CODECOPY BASEFEE ADDRESS CODECOPY PUSH27 0x6A514F642B6646376142714633615574517A746C51353975325566 0x4D CODESIZE CODECOPY PUSH6 0x2B4954766874 PUSH21 0x6D7756437853723156756F2B5363437677686A4553 ADDRESS PUSH4 0x626E4331 MSTORE PUSH3 0x705648 CALLDATASIZE PUSH10 0x4E6936324F624765547A PUSH14 0x51753342587A366E457A4175567A MSTORE8 CODECOPY CALLER PUSH25 0x2B4F687178494F6E7A4439385A446F5875464E587635776546 CHAINID ORIGIN CALLDATALOAD CODESIZE PUSH5 0x7474575877 0x4B PUSH22 0x5464326E595771654B4173737032464A476457733762 PUSH10 0x586369724A5A7A486335 MLOAD BALANCE PUSH11 0x54586B5A4B696E7032684A JUMPI PUSH7 0x674C663838507A 0x4A PUSH8 0x5442653154437365 COINBASE COINBASE COINBASE COINBASE COINBASE GASLIMIT PUSH13 0x46546B5375516D4343A164736F PUSH13 0x6343000807000A000000000000 ",
              "sourceMap": "20899:746:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21553:89;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;20922:622;;;:::i;21553:89::-;21595:13;21628:6;;;;;;;;;;;;;;;;;21621:13;;21553:89;:::o;20922:622::-;;;;;;;;;;;;;;;;;;;:::o;14:597:2:-;126:4;155:2;184;173:9;166:21;216:6;210:13;259:6;254:2;243:9;239:18;232:34;284:1;294:140;308:6;305:1;302:13;294:140;;;403:14;;;399:23;;393:30;369:17;;;388:2;365:26;358:66;323:10;;294:140;;;452:6;449:1;446:13;443:91;;;522:1;517:2;508:6;497:9;493:22;489:31;482:42;443:91;-1:-1:-1;595:2:2;574:15;-1:-1:-1;;570:29:2;555:45;;;;602:2;551:54;;14:597;-1:-1:-1;;;14:597:2:o"
            },
            "methodIdentifiers": {
              "getPotato()": "6e329aa9",
              "potato()": "f8dcc9a9"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"getPotato\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"potato\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@Allcontracts/Inventory.sol\":\"Potato\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":25},\"remappings\":[]},\"sources\":{\"@Allcontracts/Inventory.sol\":{\"keccak256\":\"0x66c19721ac9af209a955d9063975d0a5247d2970cdea1109c1278b2ebadffd7e\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://e6b7b3fc65f0de45e18ce6196255dcc5c66df0d6f6ee7bb7fc7ae3da6bedc873\",\"dweb:/ipfs/QmTBAqdf2y6N8dDAVCR5yWZiFyn5kFefaFFfFgRXiKeQwD\"]}},\"version\":1}"
        }
      },
      "@Allcontracts/InventoryManager.sol": {
        "Base64": {
          "abi": [],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "602d6037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea164736f6c6343000807000a",
              "opcodes": "PUSH1 0x2D PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG1 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP EXP ",
              "sourceMap": "14445:2398:1:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;14445:2398:1;;;;;;;;;;;;;;;;;"
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "73000000000000000000000000000000000000000030146080604052600080fdfea164736f6c6343000807000a",
              "opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG1 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP EXP ",
              "sourceMap": "14445:2398:1:-:0;;;;;;;;"
            },
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"author\":\"Brecht Devos - <brecht@loopring.org>\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Base64\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Provides a function for encoding some bytes in base64NOT BUILT BY ETHERORCS TEAM. Thanks Bretch Devos!\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@Allcontracts/InventoryManager.sol\":\"Base64\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":25},\"remappings\":[]},\"sources\":{\"@Allcontracts/Inventory.sol\":{\"keccak256\":\"0x66c19721ac9af209a955d9063975d0a5247d2970cdea1109c1278b2ebadffd7e\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://e6b7b3fc65f0de45e18ce6196255dcc5c66df0d6f6ee7bb7fc7ae3da6bedc873\",\"dweb:/ipfs/QmTBAqdf2y6N8dDAVCR5yWZiFyn5kFefaFFfFgRXiKeQwD\"]},\"@Allcontracts/InventoryManager.sol\":{\"keccak256\":\"0xc35f5d2df33062580b0ebb1ba2470dcc3cc30c88ec7923544cfcdad00ee7ef9f\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://3fcb1cb38024a5187ccad2d6150342a6c0ef86f7da5963bff4579a655f8a4f6a\",\"dweb:/ipfs/QmTUaraDGXKPVmuwWDMjctZKi3XeTG2RWXVBtuGK7D5xew\"]}},\"version\":1}"
        },
        "InventoryManager": {
          "abi": [
            {
              "inputs": [],
              "stateMutability": "nonpayable",
              "type": "constructor"
            },
            {
              "inputs": [
                {
                  "internalType": "uint8",
                  "name": "",
                  "type": "uint8"
                }
              ],
              "name": "backgrounds",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "footer",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "enum InventoryManager.Part",
                  "name": "part",
                  "type": "uint8"
                },
                {
                  "internalType": "uint8",
                  "name": "id",
                  "type": "uint8"
                }
              ],
              "name": "get",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "svg",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint8",
                  "name": "background_",
                  "type": "uint8"
                },
                {
                  "internalType": "uint8",
                  "name": "hand_type_",
                  "type": "uint8"
                },
                {
                  "internalType": "bool",
                  "name": "hasPotato_",
                  "type": "bool"
                },
                {
                  "internalType": "uint32",
                  "name": "generation_",
                  "type": "uint32"
                },
                {
                  "internalType": "bool",
                  "name": "isActive_",
                  "type": "bool"
                }
              ],
              "name": "getAttributes",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "pure",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint8",
                  "name": "id",
                  "type": "uint8"
                }
              ],
              "name": "getBackgroundName",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "pure",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint8",
                  "name": "id",
                  "type": "uint8"
                }
              ],
              "name": "getHandName",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "pure",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint8",
                  "name": "background_",
                  "type": "uint8"
                },
                {
                  "internalType": "uint8",
                  "name": "hand_type_",
                  "type": "uint8"
                },
                {
                  "internalType": "bool",
                  "name": "hasPotato_",
                  "type": "bool"
                },
                {
                  "internalType": "uint8",
                  "name": "potato_",
                  "type": "uint8"
                }
              ],
              "name": "getSVG",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint8",
                  "name": "background_",
                  "type": "uint8"
                },
                {
                  "internalType": "uint8",
                  "name": "hand_type_",
                  "type": "uint8"
                },
                {
                  "internalType": "bool",
                  "name": "hasPotato_",
                  "type": "bool"
                },
                {
                  "internalType": "uint8",
                  "name": "potato_",
                  "type": "uint8"
                }
              ],
              "name": "getSVGInterface",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint16",
                  "name": "id_",
                  "type": "uint16"
                },
                {
                  "internalType": "uint8",
                  "name": "background_",
                  "type": "uint8"
                },
                {
                  "internalType": "uint8",
                  "name": "hand_type_",
                  "type": "uint8"
                },
                {
                  "internalType": "bool",
                  "name": "hasPotato_",
                  "type": "bool"
                },
                {
                  "internalType": "uint32",
                  "name": "generation_",
                  "type": "uint32"
                },
                {
                  "internalType": "bool",
                  "name": "isActive_",
                  "type": "bool"
                },
                {
                  "internalType": "uint8",
                  "name": "potato_",
                  "type": "uint8"
                }
              ],
              "name": "getTokenURI",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint8",
                  "name": "",
                  "type": "uint8"
                }
              ],
              "name": "hand_types",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "header",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "manager",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint8",
                  "name": "",
                  "type": "uint8"
                }
              ],
              "name": "potatoes",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint8",
                  "name": "count",
                  "type": "uint8"
                },
                {
                  "internalType": "address",
                  "name": "source",
                  "type": "address"
                }
              ],
              "name": "setBackgrounds",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint8",
                  "name": "count",
                  "type": "uint8"
                },
                {
                  "internalType": "address",
                  "name": "source",
                  "type": "address"
                }
              ],
              "name": "setHands",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint8",
                  "name": "count",
                  "type": "uint8"
                },
                {
                  "internalType": "address",
                  "name": "source",
                  "type": "address"
                }
              ],
              "name": "setPotatoes",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {
                "@_421": {
                  "entryPoint": null,
                  "id": 421,
                  "parameterSlots": 0,
                  "returnSlots": 0
                }
              },
              "generatedSources": [],
              "linkReferences": {},
              "object": "608060405234801561001057600080fd5b50600180546001600160a01b031916331790556127bc806100326000396000f3fe608060405234801561001057600080fd5b50600436106100d05760003560e01c80630d7163c6146100d5578063158eb4e5146100f357806322c414eb146101085780632544c8151461011b5780633ce301851461012e578063428bff6b146101365780634342e65214610149578063481c6a751461015c57806352b7652214610187578063646c1464146101b0578063915bb1291461011b57806395fb756a146101c3578063b6046d7c146101ec578063b6934925146101ff578063c349556714610212578063f9ec93d41461023b575b600080fd5b6100dd61024e565b6040516100ea919061243d565b60405180910390f35b610106610101366004611eb2565b61026a565b005b6100dd610116366004611e90565b6102ef565b6100dd610129366004611f5a565b610a69565b6100dd610b06565b610106610144366004611eb2565b610b23565b6100dd610157366004611e90565b610b9a565b60015461016f906001600160a01b031681565b6040516001600160a01b0390911681526020016100ea565b61016f610195366004611e90565b6004602052600090815260409020546001600160a01b031681565b6100dd6101be366004611ef5565b610e5f565b61016f6101d1366004611e90565b6003602052600090815260409020546001600160a01b031681565b6100dd6101fa366004611e01565b610f34565b61010661020d366004611eb2565b610fbf565b61016f610220366004611e90565b6002602052600090815260409020546001600160a01b031681565b6100dd610249366004611d27565b611036565b6040518060c0016040528060a081526020016125e560a0913981565b6001546001600160a01b0316331461029d5760405162461bcd60e51b815260040161029490612470565b60405180910390fd5b60015b8260ff168160ff16116102ea5760ff8116600090815260036020526040902080546001600160a01b0319166001600160a01b038416179055806102e281612542565b9150506102a0565b505050565b606060298260ff1611610a3a57600a8260ff1610156104735760058260ff16101561039f5760038260ff161015610373578160ff1660011461034e5760405180604001604052806005815260200164576869746560d81b81525061036d565b60405180604001604052806005815260200164576869746560d81b8152505b92915050565b8160ff1660031461034e57604051806040016040528060038152602001622a30b760e91b81525061036d565b60078260ff1610156103f6578160ff166005146103d757604051806040016040528060038152602001622a30b760e91b81525061036d565b50506040805180820190915260038152622a30b760e91b602082015290565b8160ff16600714610452578160ff1660081461042f5760405180604001604052806005815260200164213937bbb760d91b81525061036d565b60405180604001604052806005815260200164213937bbb760d91b81525061036d565b5050604080518082019091526005815264213937bbb760d91b602082015290565b600f8260ff161161054457600d8260ff1610156104e6578160ff16600a14610452578160ff16600b146104c35760405180604001604052806005815260200164426c61636b60d81b81525061036d565b60405180604001604052806005815260200164426c61636b60d81b81525061036d565b8160ff16600d14610523578160ff16600e146104c35760405180604001604052806009815260200168566974696c6967696f60b81b81525061036d565b5050604080518082019091526005815264426c61636b60d81b602082015290565b60148260ff161161063f5760128260ff1610156105b2578160ff1660101461058d5760405180604001604052806009815260200168566974696c6967696f60b81b81525061036d565b5050604080518082019091526009815268566974696c6967696f60b81b602082015290565b8160ff16601214610619578160ff166013146105f1576040518060400160405280600b81526020016a477265656e20536c696d6560a81b81525061036d565b6040518060400160405280600a815260200169426c756520536c696d6560b01b81525061036d565b505060408051808201909152600a815269426c756520536c696d6560b01b602082015290565b60198260ff161161073d5760178260ff1610156106b1578160ff1660151461068a576040518060400160405280600b81526020016a477265656e20536c696d6560a81b81525061036d565b505060408051808201909152600b81526a477265656e20536c696d6560a81b602082015290565b8160ff16601714610717578160ff166018146106ef576040518060400160405280600a815260200169427562626c652047756d60b01b81525061036d565b6040518060400160405280600a815260200169427562626c652047756d60b01b81525061036d565b505060408051808201909152600a815269427562626c652047756d60b01b602082015290565b601e8260ff161161083c57601c8260ff1610156107b1578160ff16601a14610789576040518060400160405280600c81526020016b23b932b2b71023b7b13634b760a11b81525061036d565b505060408051808201909152600c81526b23b932b2b71023b7b13634b760a11b602082015290565b8160ff16601c1461081a578160ff16601d146107f2576040518060400160405280600d81526020016c2cb2b63637bb9023b7b13634b760991b81525061036d565b6040518060400160405280600a8152602001692932b21023b7b13634b760b11b81525061036d565b50506040805180820190915260068152655a6f6d62696560d01b602082015290565b60208260ff1611610898578160ff16601f146108775760405180604001604052806007815260200166506c617374696360c81b81525061036d565b505060408051808201909152600581526453756c6c7960d81b602082015290565b60228260ff16116108f5578160ff166021146108d4576040518060400160405280600881526020016729b5b2b632ba37b760c11b81525061036d565b50506040805180820190915260058152642a34b3b2b960d91b602082015290565b60248260ff1611610956578160ff166023146109305760405180604001604052806007815260200166476f72696c6c6160c81b81525061036d565b505060408051808201909152600a81526929b737bb902a34b3b2b960b11b602082015290565b60268260ff16116109b1578160ff1660251461099157604051806040016040528060078152602001660a6e2eac2e8c6d60cb1b81525061036d565b50506040805180820190915260048152635965746960e01b602082015290565b60288260ff1611610a0c578160ff166027146109eb5760405180604001604052806006815260200165436f736d696360d01b81525061036d565b5050604080518082019091526005815264537465766560d81b602082015290565b8160ff1660291415610a3a57505060408051808201909152600681526550697261746560d01b602082015290565b5050604080518082019091526013815272115c9c9bdc8e881259081b9bdd08199bdd5b99606a1b602082015290565b60606040518060c0016040528060a081526020016125e560a09139610a8f600087611036565b610a9a600187611036565b85610ab45760405180602001604052806000815250610abf565b610abf600286611036565b60405180610120016040528060eb81526020016126c560eb9139604051602001610aed959493929190611fe6565b6040516020818303038152906040529050949350505050565b60405180610120016040528060eb81526020016126c560eb913981565b6001546001600160a01b03163314610b4d5760405162461bcd60e51b815260040161029490612470565b60015b8260ff168160ff16116102ea5760ff8116600090815260026020526040902080546001600160a01b0319166001600160a01b03841617905580610b9281612542565b915050610b50565b606060148260ff1611610a3a57600a8260ff161015610cd85760058260ff161015610c455760038260ff161015610c18578160ff16600114610bf85760405180604001604052806004815260200163426c756560e01b81525061036d565b5050604080518082019091526004815263426c756560e01b602082015290565b8160ff16600314610bf85760405180604001604052806004815260200163426c756560e01b81525061036d565b60078260ff161015610c7e578160ff16600514610bf85760405180604001604052806004815260200163426c756560e01b81525061036d565b8160ff16600714610bf8578160ff16600814610cb65760405180604001604052806004815260200163426c756560e01b81525061036d565b60405180604001604052806004815260200163426c756560e01b81525061036d565b600f8260ff1611610da557600d8260ff161015610d28578160ff16600a14610bf8578160ff16600b14610cb6576040518060400160405280600581526020016423b932b2b760d91b81525061036d565b8160ff16600d14610d84578160ff16600e14610d61576040518060400160405280600581526020016423b932b2b760d91b81525061036d565b6040518060400160405280600581526020016423b932b2b760d91b81525061036d565b505060408051808201909152600581526423b932b2b760d91b602082015290565b60128260ff161015610ddf578160ff16601014610d84576040518060400160405280600581526020016423b932b2b760d91b81525061036d565b8160ff16601214610e3d578160ff16601314610e195760405180604001604052806006815260200165507572706c6560d01b81525061036d565b60405180604001604052806006815260200165507572706c6560d01b81525061036d565b5050604080518082019091526006815265507572706c6560d01b602082015290565b6060610e6a86611a22565b610e7386611a53565b85610e9857604051806040016040528060028152602001614e6f60f01b815250610eb5565b6040518060400160405280600381526020016259657360e81b8152505b610ec48663ffffffff16611a6e565b85610ee957604051806040016040528060028152602001614e6f60f01b815250610f06565b6040518060400160405280600381526020016259657360e81b8152505b604051602001610f1a959493929190612252565b604051602081830303815290604052905095945050505050565b60606000610f4c610f4789898987610a69565b611b73565b9050610f92610f5e8a61ffff16611a6e565b82610f6c8b8b8b8b8b610e5f565b604051602001610f7e93929190612172565b604051602081830303815290604052611b73565b604051602001610fa291906123f8565b604051602081830303815290604052915050979650505050505050565b6001546001600160a01b03163314610fe95760405162461bcd60e51b815260040161029490612470565b60015b8260ff168160ff16116102ea5760ff8116600090815260046020526040902080546001600160a01b0319166001600160a01b0384161790558061102e81612542565b915050610fec565b606060008084600281111561104d5761104d6125a2565b1415611075575060ff82166000908152600260205260409020546001600160a01b0316611124565b6001846002811115611089576110896125a2565b14156110b1575060ff82166000908152600360205260409020546001600160a01b0316611124565b60028460028111156110c5576110c56125a2565b14156110ed575060ff82166000908152600460205260409020546001600160a01b0316611124565b60405162461bcd60e51b815260206004820152600c60248201526b1a5b9d985b1a59081c185c9d60a21b6044820152606401610294565b6060600085600281111561113a5761113a6125a2565b141561124a578360ff166001111580156111585750600b8460ff1611155b156111835750604080518082019091526009815268676574426c7565282960b81b6020820152611912565b8360ff16600b10801561119a575060118460ff1611155b156111c6575060408051808201909152600a815269676574477265656e282960b01b6020820152611912565b8360ff1660111080156111dd575060148460ff1611155b1561120a575060408051808201909152600b81526a676574507572706c65282960a81b6020820152611912565b60405162461bcd60e51b8152602060048201526015602482015274125b9d985b1a5908109858dad9dc9bdd5b99081259605a1b6044820152606401610294565b600185600281111561125e5761125e6125a2565b14156118d4578360ff1660011115801561127c575060038460ff1611155b156112a8575060408051808201909152600a81526967657448616e6431282960b01b6020820152611912565b8360ff1660031080156112bf575060068460ff1611155b156112eb575060408051808201909152600a81526967657448616e6432282960b01b6020820152611912565b8360ff1660061080156113025750600a8460ff1611155b1561132e575060408051808201909152600a81526967657448616e6433282960b01b6020820152611912565b8360ff16600a1080156113455750600e8460ff1611155b15611371575060408051808201909152600a81526967657448616e6434282960b01b6020820152611912565b8360ff16600e108015611388575060118460ff1611155b156113b7575060408051808201909152600d81526c676574566974696c69676f282960981b6020820152611912565b8360ff1660111080156113ce575060138460ff1611155b156113fe575060408051808201909152600e81526d676574426c7565536c696d65282960901b6020820152611912565b8360ff166013108015611415575060168460ff1611155b15611446575060408051808201909152600f81526e676574477265656e536c696d65282960881b6020820152611912565b8360ff16601610801561145d575060198460ff1611155b1561148d575060408051808201909152600e81526d676574427562626c6547756d282960901b6020820152611912565b8360ff1660191080156114a45750601b8460ff1611155b156114d6575060408051808201909152601081526f676574477265656e476f626c696e282960801b6020820152611912565b8360ff16601b1080156114ed5750601c8460ff1611155b1561151a575060408051808201909152600b81526a6765745a6f6d626965282960a81b6020820152611912565b8360ff16601c1080156115315750601d8460ff1611155b15611561575060408051808201909152600e81526d676574526564476f626c696e282960901b6020820152611912565b8360ff16601d1080156115785750601e8460ff1611155b156115ab575060408051808201909152601181527067657459656c6c6f77476f626c696e282960781b6020820152611912565b8360ff16601e1080156115c25750601f8460ff1611155b156115ee575060408051808201909152600a81526967657453756c6c79282960b01b6020820152611912565b8360ff16601f108015611605575060208460ff1611155b15611633575060408051808201909152600c81526b676574506c6173746963282960a01b6020820152611912565b8360ff16602010801561164a575060218460ff1611155b15611676575060408051808201909152600a8152696765745469676572282960b01b6020820152611912565b8360ff16602110801561168d575060228460ff1611155b156116bc575060408051808201909152600d81526c676574536b656c65746f6e282960981b6020820152611912565b8360ff1660221080156116d3575060238460ff1611155b15611703575060408051808201909152600e81526d676574536e6f775469676572282960901b6020820152611912565b8360ff16602310801561171a575060248460ff1611155b15611748575060408051808201909152600c81526b676574476f72696c6c61282960a01b6020820152611912565b8360ff16602410801561175f575060258460ff1611155b1561178a575060408051808201909152600981526867657459657469282960b81b6020820152611912565b8360ff1660251080156117a1575060268460ff1611155b156117cf575060408051808201909152600c81526b67657453717561746368282960a01b6020820152611912565b8360ff1660261080156117e6575060278460ff1611155b15611812575060408051808201909152600a8152696765745374657665282960b01b6020820152611912565b8360ff166027108015611829575060288460ff1611155b15611856575060408051808201909152600b81526a676574436f736d6963282960a81b6020820152611912565b8360ff16602810801561186d575060298460ff1611155b1561189a575060408051808201909152600b81526a676574506972617465282960a81b6020820152611912565b60405162461bcd60e51b815260206004820152600f60248201526e125b9d985b1a590812185b99081259608a1b6044820152606401610294565b60028560028111156118e8576118e86125a2565b14156110ed575060408051808201909152600b81526a676574506f7461746f282960a81b60208201525b6040805160048152602481019182905260009182916001600160a01b0386169161193d908690611fca565b60408051918290039091206020830180516001600160e01b03166001600160e01b0319909216919091179052516119749190611fca565b600060405180830381855afa9150503d80600081146119af576040519150601f19603f3d011682016040523d82523d6000602084013e6119b4565b606091505b5091509150816119fb5760405162461bcd60e51b81526020600482015260126024820152716661696c656420746f20676574206461746160701b6044820152606401610294565b611a1781806020019051810190611a129190611d60565b611cda565b979650505050505050565b6060611a2d82610b9a565b604051602001611a3d91906123b2565b6040516020818303038152906040529050919050565b6060611a5e826102ef565b604051602001611a3d9190612113565b606081611a925750506040805180820190915260018152600360fc1b602082015290565b8160005b8115611abc5780611aa681612527565b9150611ab59050600a836124ad565b9150611a96565b6000816001600160401b03811115611ad657611ad66125ce565b6040519080825280601f01601f191660200182016040528015611b00576020820181803683370190505b5090505b8415611b6b57611b156001836124e0565b9150611b22600a86612562565b611b2d906030612495565b60f81b818381518110611b4257611b426125b8565b60200101906001600160f81b031916908160001a905350611b64600a866124ad565b9450611b04565b949350505050565b6060815160001415611b9357505060408051602081019091526000815290565b60006040518060600160405280604081526020016126856040913990506000600384516002611bc29190612495565b611bcc91906124ad565b611bd79060046124c1565b90506000611be6826020612495565b6001600160401b03811115611bfd57611bfd6125ce565b6040519080825280601f01601f191660200182016040528015611c27576020820181803683370190505b509050818152600183018586518101602084015b81831015611c955760039283018051603f601282901c811687015160f890811b8552600c83901c8216880151811b6001860152600683901c8216880151811b60028601529116860151901b93820193909352600401611c3b565b600389510660018114611caf5760028114611cc057611ccc565b613d3d60f01b600119830152611ccc565b603d60f81b6000198301525b509398975050505050505050565b606081604051602001611a3d9190612051565b80358015158114611cfd57600080fd5b919050565b803563ffffffff81168114611cfd57600080fd5b803560ff81168114611cfd57600080fd5b60008060408385031215611d3a57600080fd5b823560038110611d4957600080fd5b9150611d5760208401611d16565b90509250929050565b600060208284031215611d7257600080fd5b81516001600160401b0380821115611d8957600080fd5b818401915084601f830112611d9d57600080fd5b815181811115611daf57611daf6125ce565b604051601f8201601f19908116603f01168101908382118183101715611dd757611dd76125ce565b81604052828152876020848701011115611df057600080fd5b611a178360208301602088016124f7565b600080600080600080600060e0888a031215611e1c57600080fd5b873561ffff81168114611e2e57600080fd5b9650611e3c60208901611d16565b9550611e4a60408901611d16565b9450611e5860608901611ced565b9350611e6660808901611d02565b9250611e7460a08901611ced565b9150611e8260c08901611d16565b905092959891949750929550565b600060208284031215611ea257600080fd5b611eab82611d16565b9392505050565b60008060408385031215611ec557600080fd5b611ece83611d16565b915060208301356001600160a01b0381168114611eea57600080fd5b809150509250929050565b600080600080600060a08688031215611f0d57600080fd5b611f1686611d16565b9450611f2460208701611d16565b9350611f3260408701611ced565b9250611f4060608701611d02565b9150611f4e60808701611ced565b90509295509295909350565b60008060008060808587031215611f7057600080fd5b611f7985611d16565b9350611f8760208601611d16565b9250611f9560408601611ced565b9150611fa360608601611d16565b905092959194509250565b60008151611fc08185602086016124f7565b9290920192915050565b60008251611fdc8184602087016124f7565b9190910192915050565b60008651611ff8818460208b016124f7565b86519083019061200c818360208b016124f7565b865191019061201f818360208a016124f7565b85519101906120328183602089016124f7565b84519101906120458183602088016124f7565b01979650505050505050565b7f3c696d6167652077696474683d22363022206865696768743d2236302220696d81527f6167652d72656e646572696e673d22706978656c61746564222070726573657260208201527f7665417370656374526174696f3d22784d6964594d69642220786c696e6b3a6860408201527a1c99598f4899185d184e9a5b5859d94bdc1b99ced8985cd94d8d0b602a1b6060820152600082516120f981607b8501602087016124f7565b6211179f60e91b607b939091019283015250607e01919050565b7f7b2274726169745f74797065223a2248616e642054797065222c202276616c7581526432911d101160d91b6020820152600082516121598160258501602087016124f7565b61227d60f01b6025939091019283015250602701919050565b707b226e616d65223a2022546f6b656e202360781b8152835160009061219f8160118501602089016124f7565b7f222c20226465736372697074696f6e223a2022412073696d706c6520546f6b656011918401918201527f6e222c2022696d616765223a2022646174613a696d6167652f7376672b786d6c6031820152670ed8985cd94d8d0b60c21b605182015284516122138160598401602089016124f7565b6201116160ed1b60599290910191820152835161223781605c8401602088016124f7565b607d60f81b605c9290910191820152605d0195945050505050565b6e2261747472696275746573223a205b60881b8152855160009061227d81600f850160208b016124f7565b600b60fa1b600f91840191820152865161229e816010840160208b016124f7565b7f2c7b2274726169745f74797065223a2022506f7461746f222c202276616c75656010929091019182015262111d1160e91b603082015285516122e8816033840160208a016124f7565b7f227d2c7b22646973706c61795f74797065223a20226e756d626572222c227472603392909101918201527f6169745f74797065223a202247656e65726174696f6e222c202276616c7565226053820152611d1160f11b60738201526123a661239761239161235a6075850189611fae565b7f227d2c7b2274726169745f74797065223a2022416374697665222c202276616c8152643ab2911d1160d91b602082015260250190565b86611fae565b62227d5d60e81b815260030190565b98975050505050505050565b7f7b2274726169745f74797065223a224261636b67726f756e64222c202276616c8152643ab2911d1160d91b6020820152600082516121598160258501602087016124f7565b7f646174613a6170706c69636174696f6e2f6a736f6e3b6261736536342c00000081526000825161243081601d8501602087016124f7565b91909101601d0192915050565b602081526000825180602084015261245c8160408501602087016124f7565b601f01601f19169190910160400192915050565b6020808252600b908201526a3737ba1036b0b730b3b2b960a91b604082015260600190565b600082198211156124a8576124a8612576565b500190565b6000826124bc576124bc61258c565b500490565b60008160001904831182151516156124db576124db612576565b500290565b6000828210156124f2576124f2612576565b500390565b60005b838110156125125781810151838201526020016124fa565b83811115612521576000848401525b50505050565b600060001982141561253b5761253b612576565b5060010190565b600060ff821660ff81141561255957612559612576565b60010192915050565b6000826125715761257161258c565b500690565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052602160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fdfe3c7376672069643d226261636b6275726e6572222077696474683d223130302522206865696768743d2231303025222076657273696f6e3d22312e31222076696577426f783d223020302036302036302220786d6c6e733d22687474703a2f2f7777772e77332e6f72672f323030302f7376672220786d6c6e733a786c696e6b3d22687474703a2f2f7777772e77332e6f72672f313939392f786c696e6b223e4142434445464748494a4b4c4d4e4f505152535455565758595a6162636465666768696a6b6c6d6e6f707172737475767778797a303132333435363738392b2f3c7374796c653e236261636b6275726e65727b73686170652d72656e646572696e673a20637269737065646765733b20696d6167652d72656e646572696e673a202d7765626b69742d63726973702d65646765733b20696d6167652d72656e646572696e673a202d6d6f7a2d63726973702d65646765733b20696d6167652d72656e646572696e673a2063726973702d65646765733b20696d6167652d72656e646572696e673a20706978656c617465643b202d6d732d696e746572706f6c6174696f6e2d6d6f64653a206e6561726573742d6e65696768626f723b7d3c2f7374796c653e3c2f7376673ea164736f6c6343000807000a",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR SWAP1 SSTORE PUSH2 0x27BC DUP1 PUSH2 0x32 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xD0 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xD7163C6 EQ PUSH2 0xD5 JUMPI DUP1 PUSH4 0x158EB4E5 EQ PUSH2 0xF3 JUMPI DUP1 PUSH4 0x22C414EB EQ PUSH2 0x108 JUMPI DUP1 PUSH4 0x2544C815 EQ PUSH2 0x11B JUMPI DUP1 PUSH4 0x3CE30185 EQ PUSH2 0x12E JUMPI DUP1 PUSH4 0x428BFF6B EQ PUSH2 0x136 JUMPI DUP1 PUSH4 0x4342E652 EQ PUSH2 0x149 JUMPI DUP1 PUSH4 0x481C6A75 EQ PUSH2 0x15C JUMPI DUP1 PUSH4 0x52B76522 EQ PUSH2 0x187 JUMPI DUP1 PUSH4 0x646C1464 EQ PUSH2 0x1B0 JUMPI DUP1 PUSH4 0x915BB129 EQ PUSH2 0x11B JUMPI DUP1 PUSH4 0x95FB756A EQ PUSH2 0x1C3 JUMPI DUP1 PUSH4 0xB6046D7C EQ PUSH2 0x1EC JUMPI DUP1 PUSH4 0xB6934925 EQ PUSH2 0x1FF JUMPI DUP1 PUSH4 0xC3495567 EQ PUSH2 0x212 JUMPI DUP1 PUSH4 0xF9EC93D4 EQ PUSH2 0x23B JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDD PUSH2 0x24E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xEA SWAP2 SWAP1 PUSH2 0x243D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x106 PUSH2 0x101 CALLDATASIZE PUSH1 0x4 PUSH2 0x1EB2 JUMP JUMPDEST PUSH2 0x26A JUMP JUMPDEST STOP JUMPDEST PUSH2 0xDD PUSH2 0x116 CALLDATASIZE PUSH1 0x4 PUSH2 0x1E90 JUMP JUMPDEST PUSH2 0x2EF JUMP JUMPDEST PUSH2 0xDD PUSH2 0x129 CALLDATASIZE PUSH1 0x4 PUSH2 0x1F5A JUMP JUMPDEST PUSH2 0xA69 JUMP JUMPDEST PUSH2 0xDD PUSH2 0xB06 JUMP JUMPDEST PUSH2 0x106 PUSH2 0x144 CALLDATASIZE PUSH1 0x4 PUSH2 0x1EB2 JUMP JUMPDEST PUSH2 0xB23 JUMP JUMPDEST PUSH2 0xDD PUSH2 0x157 CALLDATASIZE PUSH1 0x4 PUSH2 0x1E90 JUMP JUMPDEST PUSH2 0xB9A JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0x16F SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xEA JUMP JUMPDEST PUSH2 0x16F PUSH2 0x195 CALLDATASIZE PUSH1 0x4 PUSH2 0x1E90 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0xDD PUSH2 0x1BE CALLDATASIZE PUSH1 0x4 PUSH2 0x1EF5 JUMP JUMPDEST PUSH2 0xE5F JUMP JUMPDEST PUSH2 0x16F PUSH2 0x1D1 CALLDATASIZE PUSH1 0x4 PUSH2 0x1E90 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0xDD PUSH2 0x1FA CALLDATASIZE PUSH1 0x4 PUSH2 0x1E01 JUMP JUMPDEST PUSH2 0xF34 JUMP JUMPDEST PUSH2 0x106 PUSH2 0x20D CALLDATASIZE PUSH1 0x4 PUSH2 0x1EB2 JUMP JUMPDEST PUSH2 0xFBF JUMP JUMPDEST PUSH2 0x16F PUSH2 0x220 CALLDATASIZE PUSH1 0x4 PUSH2 0x1E90 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0xDD PUSH2 0x249 CALLDATASIZE PUSH1 0x4 PUSH2 0x1D27 JUMP JUMPDEST PUSH2 0x1036 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0xC0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xA0 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x25E5 PUSH1 0xA0 SWAP2 CODECOPY DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x29D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x294 SWAP1 PUSH2 0x2470 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 JUMPDEST DUP3 PUSH1 0xFF AND DUP2 PUSH1 0xFF AND GT PUSH2 0x2EA JUMPI PUSH1 0xFF DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND OR SWAP1 SSTORE DUP1 PUSH2 0x2E2 DUP2 PUSH2 0x2542 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x2A0 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x29 DUP3 PUSH1 0xFF AND GT PUSH2 0xA3A JUMPI PUSH1 0xA DUP3 PUSH1 0xFF AND LT ISZERO PUSH2 0x473 JUMPI PUSH1 0x5 DUP3 PUSH1 0xFF AND LT ISZERO PUSH2 0x39F JUMPI PUSH1 0x3 DUP3 PUSH1 0xFF AND LT ISZERO PUSH2 0x373 JUMPI DUP2 PUSH1 0xFF AND PUSH1 0x1 EQ PUSH2 0x34E JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH5 0x5768697465 PUSH1 0xD8 SHL DUP2 MSTORE POP PUSH2 0x36D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH5 0x5768697465 PUSH1 0xD8 SHL DUP2 MSTORE POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP2 PUSH1 0xFF AND PUSH1 0x3 EQ PUSH2 0x34E JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x2A30B7 PUSH1 0xE9 SHL DUP2 MSTORE POP PUSH2 0x36D JUMP JUMPDEST PUSH1 0x7 DUP3 PUSH1 0xFF AND LT ISZERO PUSH2 0x3F6 JUMPI DUP2 PUSH1 0xFF AND PUSH1 0x5 EQ PUSH2 0x3D7 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x2A30B7 PUSH1 0xE9 SHL DUP2 MSTORE POP PUSH2 0x36D JUMP JUMPDEST POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x3 DUP2 MSTORE PUSH3 0x2A30B7 PUSH1 0xE9 SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST DUP2 PUSH1 0xFF AND PUSH1 0x7 EQ PUSH2 0x452 JUMPI DUP2 PUSH1 0xFF AND PUSH1 0x8 EQ PUSH2 0x42F JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH5 0x213937BBB7 PUSH1 0xD9 SHL DUP2 MSTORE POP PUSH2 0x36D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH5 0x213937BBB7 PUSH1 0xD9 SHL DUP2 MSTORE POP PUSH2 0x36D JUMP JUMPDEST POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x5 DUP2 MSTORE PUSH5 0x213937BBB7 PUSH1 0xD9 SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0xF DUP3 PUSH1 0xFF AND GT PUSH2 0x544 JUMPI PUSH1 0xD DUP3 PUSH1 0xFF AND LT ISZERO PUSH2 0x4E6 JUMPI DUP2 PUSH1 0xFF AND PUSH1 0xA EQ PUSH2 0x452 JUMPI DUP2 PUSH1 0xFF AND PUSH1 0xB EQ PUSH2 0x4C3 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH5 0x426C61636B PUSH1 0xD8 SHL DUP2 MSTORE POP PUSH2 0x36D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH5 0x426C61636B PUSH1 0xD8 SHL DUP2 MSTORE POP PUSH2 0x36D JUMP JUMPDEST DUP2 PUSH1 0xFF AND PUSH1 0xD EQ PUSH2 0x523 JUMPI DUP2 PUSH1 0xFF AND PUSH1 0xE EQ PUSH2 0x4C3 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x9 DUP2 MSTORE PUSH1 0x20 ADD PUSH9 0x566974696C6967696F PUSH1 0xB8 SHL DUP2 MSTORE POP PUSH2 0x36D JUMP JUMPDEST POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x5 DUP2 MSTORE PUSH5 0x426C61636B PUSH1 0xD8 SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x14 DUP3 PUSH1 0xFF AND GT PUSH2 0x63F JUMPI PUSH1 0x12 DUP3 PUSH1 0xFF AND LT ISZERO PUSH2 0x5B2 JUMPI DUP2 PUSH1 0xFF AND PUSH1 0x10 EQ PUSH2 0x58D JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x9 DUP2 MSTORE PUSH1 0x20 ADD PUSH9 0x566974696C6967696F PUSH1 0xB8 SHL DUP2 MSTORE POP PUSH2 0x36D JUMP JUMPDEST POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x9 DUP2 MSTORE PUSH9 0x566974696C6967696F PUSH1 0xB8 SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST DUP2 PUSH1 0xFF AND PUSH1 0x12 EQ PUSH2 0x619 JUMPI DUP2 PUSH1 0xFF AND PUSH1 0x13 EQ PUSH2 0x5F1 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xB DUP2 MSTORE PUSH1 0x20 ADD PUSH11 0x477265656E20536C696D65 PUSH1 0xA8 SHL DUP2 MSTORE POP PUSH2 0x36D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xA DUP2 MSTORE PUSH1 0x20 ADD PUSH10 0x426C756520536C696D65 PUSH1 0xB0 SHL DUP2 MSTORE POP PUSH2 0x36D JUMP JUMPDEST POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0xA DUP2 MSTORE PUSH10 0x426C756520536C696D65 PUSH1 0xB0 SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x19 DUP3 PUSH1 0xFF AND GT PUSH2 0x73D JUMPI PUSH1 0x17 DUP3 PUSH1 0xFF AND LT ISZERO PUSH2 0x6B1 JUMPI DUP2 PUSH1 0xFF AND PUSH1 0x15 EQ PUSH2 0x68A JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xB DUP2 MSTORE PUSH1 0x20 ADD PUSH11 0x477265656E20536C696D65 PUSH1 0xA8 SHL DUP2 MSTORE POP PUSH2 0x36D JUMP JUMPDEST POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0xB DUP2 MSTORE PUSH11 0x477265656E20536C696D65 PUSH1 0xA8 SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST DUP2 PUSH1 0xFF AND PUSH1 0x17 EQ PUSH2 0x717 JUMPI DUP2 PUSH1 0xFF AND PUSH1 0x18 EQ PUSH2 0x6EF JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xA DUP2 MSTORE PUSH1 0x20 ADD PUSH10 0x427562626C652047756D PUSH1 0xB0 SHL DUP2 MSTORE POP PUSH2 0x36D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xA DUP2 MSTORE PUSH1 0x20 ADD PUSH10 0x427562626C652047756D PUSH1 0xB0 SHL DUP2 MSTORE POP PUSH2 0x36D JUMP JUMPDEST POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0xA DUP2 MSTORE PUSH10 0x427562626C652047756D PUSH1 0xB0 SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x1E DUP3 PUSH1 0xFF AND GT PUSH2 0x83C JUMPI PUSH1 0x1C DUP3 PUSH1 0xFF AND LT ISZERO PUSH2 0x7B1 JUMPI DUP2 PUSH1 0xFF AND PUSH1 0x1A EQ PUSH2 0x789 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xC DUP2 MSTORE PUSH1 0x20 ADD PUSH12 0x23B932B2B71023B7B13634B7 PUSH1 0xA1 SHL DUP2 MSTORE POP PUSH2 0x36D JUMP JUMPDEST POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0xC DUP2 MSTORE PUSH12 0x23B932B2B71023B7B13634B7 PUSH1 0xA1 SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST DUP2 PUSH1 0xFF AND PUSH1 0x1C EQ PUSH2 0x81A JUMPI DUP2 PUSH1 0xFF AND PUSH1 0x1D EQ PUSH2 0x7F2 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xD DUP2 MSTORE PUSH1 0x20 ADD PUSH13 0x2CB2B63637BB9023B7B13634B7 PUSH1 0x99 SHL DUP2 MSTORE POP PUSH2 0x36D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xA DUP2 MSTORE PUSH1 0x20 ADD PUSH10 0x2932B21023B7B13634B7 PUSH1 0xB1 SHL DUP2 MSTORE POP PUSH2 0x36D JUMP JUMPDEST POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x6 DUP2 MSTORE PUSH6 0x5A6F6D626965 PUSH1 0xD0 SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP3 PUSH1 0xFF AND GT PUSH2 0x898 JUMPI DUP2 PUSH1 0xFF AND PUSH1 0x1F EQ PUSH2 0x877 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x7 DUP2 MSTORE PUSH1 0x20 ADD PUSH7 0x506C6173746963 PUSH1 0xC8 SHL DUP2 MSTORE POP PUSH2 0x36D JUMP JUMPDEST POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x5 DUP2 MSTORE PUSH5 0x53756C6C79 PUSH1 0xD8 SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x22 DUP3 PUSH1 0xFF AND GT PUSH2 0x8F5 JUMPI DUP2 PUSH1 0xFF AND PUSH1 0x21 EQ PUSH2 0x8D4 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x8 DUP2 MSTORE PUSH1 0x20 ADD PUSH8 0x29B5B2B632BA37B7 PUSH1 0xC1 SHL DUP2 MSTORE POP PUSH2 0x36D JUMP JUMPDEST POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x5 DUP2 MSTORE PUSH5 0x2A34B3B2B9 PUSH1 0xD9 SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x24 DUP3 PUSH1 0xFF AND GT PUSH2 0x956 JUMPI DUP2 PUSH1 0xFF AND PUSH1 0x23 EQ PUSH2 0x930 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x7 DUP2 MSTORE PUSH1 0x20 ADD PUSH7 0x476F72696C6C61 PUSH1 0xC8 SHL DUP2 MSTORE POP PUSH2 0x36D JUMP JUMPDEST POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0xA DUP2 MSTORE PUSH10 0x29B737BB902A34B3B2B9 PUSH1 0xB1 SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x26 DUP3 PUSH1 0xFF AND GT PUSH2 0x9B1 JUMPI DUP2 PUSH1 0xFF AND PUSH1 0x25 EQ PUSH2 0x991 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x7 DUP2 MSTORE PUSH1 0x20 ADD PUSH7 0xA6E2EAC2E8C6D PUSH1 0xCB SHL DUP2 MSTORE POP PUSH2 0x36D JUMP JUMPDEST POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x4 DUP2 MSTORE PUSH4 0x59657469 PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x28 DUP3 PUSH1 0xFF AND GT PUSH2 0xA0C JUMPI DUP2 PUSH1 0xFF AND PUSH1 0x27 EQ PUSH2 0x9EB JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x6 DUP2 MSTORE PUSH1 0x20 ADD PUSH6 0x436F736D6963 PUSH1 0xD0 SHL DUP2 MSTORE POP PUSH2 0x36D JUMP JUMPDEST POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x5 DUP2 MSTORE PUSH5 0x5374657665 PUSH1 0xD8 SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST DUP2 PUSH1 0xFF AND PUSH1 0x29 EQ ISZERO PUSH2 0xA3A JUMPI POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x6 DUP2 MSTORE PUSH6 0x506972617465 PUSH1 0xD0 SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x13 DUP2 MSTORE PUSH19 0x115C9C9BDC8E881259081B9BDD08199BDD5B99 PUSH1 0x6A SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0xC0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xA0 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x25E5 PUSH1 0xA0 SWAP2 CODECOPY PUSH2 0xA8F PUSH1 0x0 DUP8 PUSH2 0x1036 JUMP JUMPDEST PUSH2 0xA9A PUSH1 0x1 DUP8 PUSH2 0x1036 JUMP JUMPDEST DUP6 PUSH2 0xAB4 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0xABF JUMP JUMPDEST PUSH2 0xABF PUSH1 0x2 DUP7 PUSH2 0x1036 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x120 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xEB DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x26C5 PUSH1 0xEB SWAP2 CODECOPY PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xAED SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1FE6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x120 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xEB DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x26C5 PUSH1 0xEB SWAP2 CODECOPY DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xB4D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x294 SWAP1 PUSH2 0x2470 JUMP JUMPDEST PUSH1 0x1 JUMPDEST DUP3 PUSH1 0xFF AND DUP2 PUSH1 0xFF AND GT PUSH2 0x2EA JUMPI PUSH1 0xFF DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND OR SWAP1 SSTORE DUP1 PUSH2 0xB92 DUP2 PUSH2 0x2542 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xB50 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x14 DUP3 PUSH1 0xFF AND GT PUSH2 0xA3A JUMPI PUSH1 0xA DUP3 PUSH1 0xFF AND LT ISZERO PUSH2 0xCD8 JUMPI PUSH1 0x5 DUP3 PUSH1 0xFF AND LT ISZERO PUSH2 0xC45 JUMPI PUSH1 0x3 DUP3 PUSH1 0xFF AND LT ISZERO PUSH2 0xC18 JUMPI DUP2 PUSH1 0xFF AND PUSH1 0x1 EQ PUSH2 0xBF8 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH4 0x426C7565 PUSH1 0xE0 SHL DUP2 MSTORE POP PUSH2 0x36D JUMP JUMPDEST POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x4 DUP2 MSTORE PUSH4 0x426C7565 PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST DUP2 PUSH1 0xFF AND PUSH1 0x3 EQ PUSH2 0xBF8 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH4 0x426C7565 PUSH1 0xE0 SHL DUP2 MSTORE POP PUSH2 0x36D JUMP JUMPDEST PUSH1 0x7 DUP3 PUSH1 0xFF AND LT ISZERO PUSH2 0xC7E JUMPI DUP2 PUSH1 0xFF AND PUSH1 0x5 EQ PUSH2 0xBF8 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH4 0x426C7565 PUSH1 0xE0 SHL DUP2 MSTORE POP PUSH2 0x36D JUMP JUMPDEST DUP2 PUSH1 0xFF AND PUSH1 0x7 EQ PUSH2 0xBF8 JUMPI DUP2 PUSH1 0xFF AND PUSH1 0x8 EQ PUSH2 0xCB6 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH4 0x426C7565 PUSH1 0xE0 SHL DUP2 MSTORE POP PUSH2 0x36D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH4 0x426C7565 PUSH1 0xE0 SHL DUP2 MSTORE POP PUSH2 0x36D JUMP JUMPDEST PUSH1 0xF DUP3 PUSH1 0xFF AND GT PUSH2 0xDA5 JUMPI PUSH1 0xD DUP3 PUSH1 0xFF AND LT ISZERO PUSH2 0xD28 JUMPI DUP2 PUSH1 0xFF AND PUSH1 0xA EQ PUSH2 0xBF8 JUMPI DUP2 PUSH1 0xFF AND PUSH1 0xB EQ PUSH2 0xCB6 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH5 0x23B932B2B7 PUSH1 0xD9 SHL DUP2 MSTORE POP PUSH2 0x36D JUMP JUMPDEST DUP2 PUSH1 0xFF AND PUSH1 0xD EQ PUSH2 0xD84 JUMPI DUP2 PUSH1 0xFF AND PUSH1 0xE EQ PUSH2 0xD61 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH5 0x23B932B2B7 PUSH1 0xD9 SHL DUP2 MSTORE POP PUSH2 0x36D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH5 0x23B932B2B7 PUSH1 0xD9 SHL DUP2 MSTORE POP PUSH2 0x36D JUMP JUMPDEST POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x5 DUP2 MSTORE PUSH5 0x23B932B2B7 PUSH1 0xD9 SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x12 DUP3 PUSH1 0xFF AND LT ISZERO PUSH2 0xDDF JUMPI DUP2 PUSH1 0xFF AND PUSH1 0x10 EQ PUSH2 0xD84 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH5 0x23B932B2B7 PUSH1 0xD9 SHL DUP2 MSTORE POP PUSH2 0x36D JUMP JUMPDEST DUP2 PUSH1 0xFF AND PUSH1 0x12 EQ PUSH2 0xE3D JUMPI DUP2 PUSH1 0xFF AND PUSH1 0x13 EQ PUSH2 0xE19 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x6 DUP2 MSTORE PUSH1 0x20 ADD PUSH6 0x507572706C65 PUSH1 0xD0 SHL DUP2 MSTORE POP PUSH2 0x36D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x6 DUP2 MSTORE PUSH1 0x20 ADD PUSH6 0x507572706C65 PUSH1 0xD0 SHL DUP2 MSTORE POP PUSH2 0x36D JUMP JUMPDEST POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x6 DUP2 MSTORE PUSH6 0x507572706C65 PUSH1 0xD0 SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0xE6A DUP7 PUSH2 0x1A22 JUMP JUMPDEST PUSH2 0xE73 DUP7 PUSH2 0x1A53 JUMP JUMPDEST DUP6 PUSH2 0xE98 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x4E6F PUSH1 0xF0 SHL DUP2 MSTORE POP PUSH2 0xEB5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x596573 PUSH1 0xE8 SHL DUP2 MSTORE POP JUMPDEST PUSH2 0xEC4 DUP7 PUSH4 0xFFFFFFFF AND PUSH2 0x1A6E JUMP JUMPDEST DUP6 PUSH2 0xEE9 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x4E6F PUSH1 0xF0 SHL DUP2 MSTORE POP PUSH2 0xF06 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x596573 PUSH1 0xE8 SHL DUP2 MSTORE POP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xF1A SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2252 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0xF4C PUSH2 0xF47 DUP10 DUP10 DUP10 DUP8 PUSH2 0xA69 JUMP JUMPDEST PUSH2 0x1B73 JUMP JUMPDEST SWAP1 POP PUSH2 0xF92 PUSH2 0xF5E DUP11 PUSH2 0xFFFF AND PUSH2 0x1A6E JUMP JUMPDEST DUP3 PUSH2 0xF6C DUP12 DUP12 DUP12 DUP12 DUP12 PUSH2 0xE5F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xF7E SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2172 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH2 0x1B73 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xFA2 SWAP2 SWAP1 PUSH2 0x23F8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP POP SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xFE9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x294 SWAP1 PUSH2 0x2470 JUMP JUMPDEST PUSH1 0x1 JUMPDEST DUP3 PUSH1 0xFF AND DUP2 PUSH1 0xFF AND GT PUSH2 0x2EA JUMPI PUSH1 0xFF DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND OR SWAP1 SSTORE DUP1 PUSH2 0x102E DUP2 PUSH2 0x2542 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xFEC JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 DUP5 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x104D JUMPI PUSH2 0x104D PUSH2 0x25A2 JUMP JUMPDEST EQ ISZERO PUSH2 0x1075 JUMPI POP PUSH1 0xFF DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1124 JUMP JUMPDEST PUSH1 0x1 DUP5 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1089 JUMPI PUSH2 0x1089 PUSH2 0x25A2 JUMP JUMPDEST EQ ISZERO PUSH2 0x10B1 JUMPI POP PUSH1 0xFF DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1124 JUMP JUMPDEST PUSH1 0x2 DUP5 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x10C5 JUMPI PUSH2 0x10C5 PUSH2 0x25A2 JUMP JUMPDEST EQ ISZERO PUSH2 0x10ED JUMPI POP PUSH1 0xFF DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1124 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x1A5B9D985B1A59081C185C9D PUSH1 0xA2 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x294 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP6 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x113A JUMPI PUSH2 0x113A PUSH2 0x25A2 JUMP JUMPDEST EQ ISZERO PUSH2 0x124A JUMPI DUP4 PUSH1 0xFF AND PUSH1 0x1 GT ISZERO DUP1 ISZERO PUSH2 0x1158 JUMPI POP PUSH1 0xB DUP5 PUSH1 0xFF AND GT ISZERO JUMPDEST ISZERO PUSH2 0x1183 JUMPI POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x9 DUP2 MSTORE PUSH9 0x676574426C75652829 PUSH1 0xB8 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x1912 JUMP JUMPDEST DUP4 PUSH1 0xFF AND PUSH1 0xB LT DUP1 ISZERO PUSH2 0x119A JUMPI POP PUSH1 0x11 DUP5 PUSH1 0xFF AND GT ISZERO JUMPDEST ISZERO PUSH2 0x11C6 JUMPI POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0xA DUP2 MSTORE PUSH10 0x676574477265656E2829 PUSH1 0xB0 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x1912 JUMP JUMPDEST DUP4 PUSH1 0xFF AND PUSH1 0x11 LT DUP1 ISZERO PUSH2 0x11DD JUMPI POP PUSH1 0x14 DUP5 PUSH1 0xFF AND GT ISZERO JUMPDEST ISZERO PUSH2 0x120A JUMPI POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0xB DUP2 MSTORE PUSH11 0x676574507572706C652829 PUSH1 0xA8 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x1912 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x125B9D985B1A5908109858DAD9DC9BDD5B99081259 PUSH1 0x5A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x294 JUMP JUMPDEST PUSH1 0x1 DUP6 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x125E JUMPI PUSH2 0x125E PUSH2 0x25A2 JUMP JUMPDEST EQ ISZERO PUSH2 0x18D4 JUMPI DUP4 PUSH1 0xFF AND PUSH1 0x1 GT ISZERO DUP1 ISZERO PUSH2 0x127C JUMPI POP PUSH1 0x3 DUP5 PUSH1 0xFF AND GT ISZERO JUMPDEST ISZERO PUSH2 0x12A8 JUMPI POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0xA DUP2 MSTORE PUSH10 0x67657448616E64312829 PUSH1 0xB0 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x1912 JUMP JUMPDEST DUP4 PUSH1 0xFF AND PUSH1 0x3 LT DUP1 ISZERO PUSH2 0x12BF JUMPI POP PUSH1 0x6 DUP5 PUSH1 0xFF AND GT ISZERO JUMPDEST ISZERO PUSH2 0x12EB JUMPI POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0xA DUP2 MSTORE PUSH10 0x67657448616E64322829 PUSH1 0xB0 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x1912 JUMP JUMPDEST DUP4 PUSH1 0xFF AND PUSH1 0x6 LT DUP1 ISZERO PUSH2 0x1302 JUMPI POP PUSH1 0xA DUP5 PUSH1 0xFF AND GT ISZERO JUMPDEST ISZERO PUSH2 0x132E JUMPI POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0xA DUP2 MSTORE PUSH10 0x67657448616E64332829 PUSH1 0xB0 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x1912 JUMP JUMPDEST DUP4 PUSH1 0xFF AND PUSH1 0xA LT DUP1 ISZERO PUSH2 0x1345 JUMPI POP PUSH1 0xE DUP5 PUSH1 0xFF AND GT ISZERO JUMPDEST ISZERO PUSH2 0x1371 JUMPI POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0xA DUP2 MSTORE PUSH10 0x67657448616E64342829 PUSH1 0xB0 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x1912 JUMP JUMPDEST DUP4 PUSH1 0xFF AND PUSH1 0xE LT DUP1 ISZERO PUSH2 0x1388 JUMPI POP PUSH1 0x11 DUP5 PUSH1 0xFF AND GT ISZERO JUMPDEST ISZERO PUSH2 0x13B7 JUMPI POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0xD DUP2 MSTORE PUSH13 0x676574566974696C69676F2829 PUSH1 0x98 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x1912 JUMP JUMPDEST DUP4 PUSH1 0xFF AND PUSH1 0x11 LT DUP1 ISZERO PUSH2 0x13CE JUMPI POP PUSH1 0x13 DUP5 PUSH1 0xFF AND GT ISZERO JUMPDEST ISZERO PUSH2 0x13FE JUMPI POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0xE DUP2 MSTORE PUSH14 0x676574426C7565536C696D652829 PUSH1 0x90 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x1912 JUMP JUMPDEST DUP4 PUSH1 0xFF AND PUSH1 0x13 LT DUP1 ISZERO PUSH2 0x1415 JUMPI POP PUSH1 0x16 DUP5 PUSH1 0xFF AND GT ISZERO JUMPDEST ISZERO PUSH2 0x1446 JUMPI POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0xF DUP2 MSTORE PUSH15 0x676574477265656E536C696D652829 PUSH1 0x88 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x1912 JUMP JUMPDEST DUP4 PUSH1 0xFF AND PUSH1 0x16 LT DUP1 ISZERO PUSH2 0x145D JUMPI POP PUSH1 0x19 DUP5 PUSH1 0xFF AND GT ISZERO JUMPDEST ISZERO PUSH2 0x148D JUMPI POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0xE DUP2 MSTORE PUSH14 0x676574427562626C6547756D2829 PUSH1 0x90 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x1912 JUMP JUMPDEST DUP4 PUSH1 0xFF AND PUSH1 0x19 LT DUP1 ISZERO PUSH2 0x14A4 JUMPI POP PUSH1 0x1B DUP5 PUSH1 0xFF AND GT ISZERO JUMPDEST ISZERO PUSH2 0x14D6 JUMPI POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x10 DUP2 MSTORE PUSH16 0x676574477265656E476F626C696E2829 PUSH1 0x80 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x1912 JUMP JUMPDEST DUP4 PUSH1 0xFF AND PUSH1 0x1B LT DUP1 ISZERO PUSH2 0x14ED JUMPI POP PUSH1 0x1C DUP5 PUSH1 0xFF AND GT ISZERO JUMPDEST ISZERO PUSH2 0x151A JUMPI POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0xB DUP2 MSTORE PUSH11 0x6765745A6F6D6269652829 PUSH1 0xA8 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x1912 JUMP JUMPDEST DUP4 PUSH1 0xFF AND PUSH1 0x1C LT DUP1 ISZERO PUSH2 0x1531 JUMPI POP PUSH1 0x1D DUP5 PUSH1 0xFF AND GT ISZERO JUMPDEST ISZERO PUSH2 0x1561 JUMPI POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0xE DUP2 MSTORE PUSH14 0x676574526564476F626C696E2829 PUSH1 0x90 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x1912 JUMP JUMPDEST DUP4 PUSH1 0xFF AND PUSH1 0x1D LT DUP1 ISZERO PUSH2 0x1578 JUMPI POP PUSH1 0x1E DUP5 PUSH1 0xFF AND GT ISZERO JUMPDEST ISZERO PUSH2 0x15AB JUMPI POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x11 DUP2 MSTORE PUSH17 0x67657459656C6C6F77476F626C696E2829 PUSH1 0x78 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x1912 JUMP JUMPDEST DUP4 PUSH1 0xFF AND PUSH1 0x1E LT DUP1 ISZERO PUSH2 0x15C2 JUMPI POP PUSH1 0x1F DUP5 PUSH1 0xFF AND GT ISZERO JUMPDEST ISZERO PUSH2 0x15EE JUMPI POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0xA DUP2 MSTORE PUSH10 0x67657453756C6C792829 PUSH1 0xB0 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x1912 JUMP JUMPDEST DUP4 PUSH1 0xFF AND PUSH1 0x1F LT DUP1 ISZERO PUSH2 0x1605 JUMPI POP PUSH1 0x20 DUP5 PUSH1 0xFF AND GT ISZERO JUMPDEST ISZERO PUSH2 0x1633 JUMPI POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0xC DUP2 MSTORE PUSH12 0x676574506C61737469632829 PUSH1 0xA0 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x1912 JUMP JUMPDEST DUP4 PUSH1 0xFF AND PUSH1 0x20 LT DUP1 ISZERO PUSH2 0x164A JUMPI POP PUSH1 0x21 DUP5 PUSH1 0xFF AND GT ISZERO JUMPDEST ISZERO PUSH2 0x1676 JUMPI POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0xA DUP2 MSTORE PUSH10 0x67657454696765722829 PUSH1 0xB0 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x1912 JUMP JUMPDEST DUP4 PUSH1 0xFF AND PUSH1 0x21 LT DUP1 ISZERO PUSH2 0x168D JUMPI POP PUSH1 0x22 DUP5 PUSH1 0xFF AND GT ISZERO JUMPDEST ISZERO PUSH2 0x16BC JUMPI POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0xD DUP2 MSTORE PUSH13 0x676574536B656C65746F6E2829 PUSH1 0x98 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x1912 JUMP JUMPDEST DUP4 PUSH1 0xFF AND PUSH1 0x22 LT DUP1 ISZERO PUSH2 0x16D3 JUMPI POP PUSH1 0x23 DUP5 PUSH1 0xFF AND GT ISZERO JUMPDEST ISZERO PUSH2 0x1703 JUMPI POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0xE DUP2 MSTORE PUSH14 0x676574536E6F7754696765722829 PUSH1 0x90 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x1912 JUMP JUMPDEST DUP4 PUSH1 0xFF AND PUSH1 0x23 LT DUP1 ISZERO PUSH2 0x171A JUMPI POP PUSH1 0x24 DUP5 PUSH1 0xFF AND GT ISZERO JUMPDEST ISZERO PUSH2 0x1748 JUMPI POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0xC DUP2 MSTORE PUSH12 0x676574476F72696C6C612829 PUSH1 0xA0 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x1912 JUMP JUMPDEST DUP4 PUSH1 0xFF AND PUSH1 0x24 LT DUP1 ISZERO PUSH2 0x175F JUMPI POP PUSH1 0x25 DUP5 PUSH1 0xFF AND GT ISZERO JUMPDEST ISZERO PUSH2 0x178A JUMPI POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x9 DUP2 MSTORE PUSH9 0x676574596574692829 PUSH1 0xB8 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x1912 JUMP JUMPDEST DUP4 PUSH1 0xFF AND PUSH1 0x25 LT DUP1 ISZERO PUSH2 0x17A1 JUMPI POP PUSH1 0x26 DUP5 PUSH1 0xFF AND GT ISZERO JUMPDEST ISZERO PUSH2 0x17CF JUMPI POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0xC DUP2 MSTORE PUSH12 0x676574537175617463682829 PUSH1 0xA0 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x1912 JUMP JUMPDEST DUP4 PUSH1 0xFF AND PUSH1 0x26 LT DUP1 ISZERO PUSH2 0x17E6 JUMPI POP PUSH1 0x27 DUP5 PUSH1 0xFF AND GT ISZERO JUMPDEST ISZERO PUSH2 0x1812 JUMPI POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0xA DUP2 MSTORE PUSH10 0x67657453746576652829 PUSH1 0xB0 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x1912 JUMP JUMPDEST DUP4 PUSH1 0xFF AND PUSH1 0x27 LT DUP1 ISZERO PUSH2 0x1829 JUMPI POP PUSH1 0x28 DUP5 PUSH1 0xFF AND GT ISZERO JUMPDEST ISZERO PUSH2 0x1856 JUMPI POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0xB DUP2 MSTORE PUSH11 0x676574436F736D69632829 PUSH1 0xA8 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x1912 JUMP JUMPDEST DUP4 PUSH1 0xFF AND PUSH1 0x28 LT DUP1 ISZERO PUSH2 0x186D JUMPI POP PUSH1 0x29 DUP5 PUSH1 0xFF AND GT ISZERO JUMPDEST ISZERO PUSH2 0x189A JUMPI POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0xB DUP2 MSTORE PUSH11 0x6765745069726174652829 PUSH1 0xA8 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x1912 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x125B9D985B1A590812185B99081259 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x294 JUMP JUMPDEST PUSH1 0x2 DUP6 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x18E8 JUMPI PUSH2 0x18E8 PUSH2 0x25A2 JUMP JUMPDEST EQ ISZERO PUSH2 0x10ED JUMPI POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0xB DUP2 MSTORE PUSH11 0x676574506F7461746F2829 PUSH1 0xA8 SHL PUSH1 0x20 DUP3 ADD MSTORE JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x4 DUP2 MSTORE PUSH1 0x24 DUP2 ADD SWAP2 DUP3 SWAP1 MSTORE PUSH1 0x0 SWAP2 DUP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP2 PUSH2 0x193D SWAP1 DUP7 SWAP1 PUSH2 0x1FCA JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 SWAP1 SUB SWAP1 SWAP2 KECCAK256 PUSH1 0x20 DUP4 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 MSTORE MLOAD PUSH2 0x1974 SWAP2 SWAP1 PUSH2 0x1FCA JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS STATICCALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x19AF JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x19B4 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 PUSH2 0x19FB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x6661696C656420746F206765742064617461 PUSH1 0x70 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x294 JUMP JUMPDEST PUSH2 0x1A17 DUP2 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x1A12 SWAP2 SWAP1 PUSH2 0x1D60 JUMP JUMPDEST PUSH2 0x1CDA JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1A2D DUP3 PUSH2 0xB9A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1A3D SWAP2 SWAP1 PUSH2 0x23B2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1A5E DUP3 PUSH2 0x2EF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1A3D SWAP2 SWAP1 PUSH2 0x2113 JUMP JUMPDEST PUSH1 0x60 DUP2 PUSH2 0x1A92 JUMPI POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x1 DUP2 MSTORE PUSH1 0x3 PUSH1 0xFC SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x0 JUMPDEST DUP2 ISZERO PUSH2 0x1ABC JUMPI DUP1 PUSH2 0x1AA6 DUP2 PUSH2 0x2527 JUMP JUMPDEST SWAP2 POP PUSH2 0x1AB5 SWAP1 POP PUSH1 0xA DUP4 PUSH2 0x24AD JUMP JUMPDEST SWAP2 POP PUSH2 0x1A96 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x1AD6 JUMPI PUSH2 0x1AD6 PUSH2 0x25CE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1B00 JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP JUMPDEST DUP5 ISZERO PUSH2 0x1B6B JUMPI PUSH2 0x1B15 PUSH1 0x1 DUP4 PUSH2 0x24E0 JUMP JUMPDEST SWAP2 POP PUSH2 0x1B22 PUSH1 0xA DUP7 PUSH2 0x2562 JUMP JUMPDEST PUSH2 0x1B2D SWAP1 PUSH1 0x30 PUSH2 0x2495 JUMP JUMPDEST PUSH1 0xF8 SHL DUP2 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1B42 JUMPI PUSH2 0x1B42 PUSH2 0x25B8 JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH2 0x1B64 PUSH1 0xA DUP7 PUSH2 0x24AD JUMP JUMPDEST SWAP5 POP PUSH2 0x1B04 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 MLOAD PUSH1 0x0 EQ ISZERO PUSH2 0x1B93 JUMPI POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP2 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x40 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2685 PUSH1 0x40 SWAP2 CODECOPY SWAP1 POP PUSH1 0x0 PUSH1 0x3 DUP5 MLOAD PUSH1 0x2 PUSH2 0x1BC2 SWAP2 SWAP1 PUSH2 0x2495 JUMP JUMPDEST PUSH2 0x1BCC SWAP2 SWAP1 PUSH2 0x24AD JUMP JUMPDEST PUSH2 0x1BD7 SWAP1 PUSH1 0x4 PUSH2 0x24C1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1BE6 DUP3 PUSH1 0x20 PUSH2 0x2495 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x1BFD JUMPI PUSH2 0x1BFD PUSH2 0x25CE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1C27 JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP DUP2 DUP2 MSTORE PUSH1 0x1 DUP4 ADD DUP6 DUP7 MLOAD DUP2 ADD PUSH1 0x20 DUP5 ADD JUMPDEST DUP2 DUP4 LT ISZERO PUSH2 0x1C95 JUMPI PUSH1 0x3 SWAP3 DUP4 ADD DUP1 MLOAD PUSH1 0x3F PUSH1 0x12 DUP3 SWAP1 SHR DUP2 AND DUP8 ADD MLOAD PUSH1 0xF8 SWAP1 DUP2 SHL DUP6 MSTORE PUSH1 0xC DUP4 SWAP1 SHR DUP3 AND DUP9 ADD MLOAD DUP2 SHL PUSH1 0x1 DUP7 ADD MSTORE PUSH1 0x6 DUP4 SWAP1 SHR DUP3 AND DUP9 ADD MLOAD DUP2 SHL PUSH1 0x2 DUP7 ADD MSTORE SWAP2 AND DUP7 ADD MLOAD SWAP1 SHL SWAP4 DUP3 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x4 ADD PUSH2 0x1C3B JUMP JUMPDEST PUSH1 0x3 DUP10 MLOAD MOD PUSH1 0x1 DUP2 EQ PUSH2 0x1CAF JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x1CC0 JUMPI PUSH2 0x1CCC JUMP JUMPDEST PUSH2 0x3D3D PUSH1 0xF0 SHL PUSH1 0x1 NOT DUP4 ADD MSTORE PUSH2 0x1CCC JUMP JUMPDEST PUSH1 0x3D PUSH1 0xF8 SHL PUSH1 0x0 NOT DUP4 ADD MSTORE JUMPDEST POP SWAP4 SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1A3D SWAP2 SWAP1 PUSH2 0x2051 JUMP JUMPDEST DUP1 CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1CFD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH4 0xFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x1CFD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x1CFD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1D3A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH1 0x3 DUP2 LT PUSH2 0x1D49 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 POP PUSH2 0x1D57 PUSH1 0x20 DUP5 ADD PUSH2 0x1D16 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1D72 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x1D89 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP5 ADD SWAP2 POP DUP5 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1D9D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP2 DUP2 GT ISZERO PUSH2 0x1DAF JUMPI PUSH2 0x1DAF PUSH2 0x25CE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x1DD7 JUMPI PUSH2 0x1DD7 PUSH2 0x25CE JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP8 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0x1DF0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1A17 DUP4 PUSH1 0x20 DUP4 ADD PUSH1 0x20 DUP9 ADD PUSH2 0x24F7 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x1E1C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP8 CALLDATALOAD PUSH2 0xFFFF DUP2 AND DUP2 EQ PUSH2 0x1E2E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP7 POP PUSH2 0x1E3C PUSH1 0x20 DUP10 ADD PUSH2 0x1D16 JUMP JUMPDEST SWAP6 POP PUSH2 0x1E4A PUSH1 0x40 DUP10 ADD PUSH2 0x1D16 JUMP JUMPDEST SWAP5 POP PUSH2 0x1E58 PUSH1 0x60 DUP10 ADD PUSH2 0x1CED JUMP JUMPDEST SWAP4 POP PUSH2 0x1E66 PUSH1 0x80 DUP10 ADD PUSH2 0x1D02 JUMP JUMPDEST SWAP3 POP PUSH2 0x1E74 PUSH1 0xA0 DUP10 ADD PUSH2 0x1CED JUMP JUMPDEST SWAP2 POP PUSH2 0x1E82 PUSH1 0xC0 DUP10 ADD PUSH2 0x1D16 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1EA2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1EAB DUP3 PUSH2 0x1D16 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1EC5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1ECE DUP4 PUSH2 0x1D16 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1EEA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1F0D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1F16 DUP7 PUSH2 0x1D16 JUMP JUMPDEST SWAP5 POP PUSH2 0x1F24 PUSH1 0x20 DUP8 ADD PUSH2 0x1D16 JUMP JUMPDEST SWAP4 POP PUSH2 0x1F32 PUSH1 0x40 DUP8 ADD PUSH2 0x1CED JUMP JUMPDEST SWAP3 POP PUSH2 0x1F40 PUSH1 0x60 DUP8 ADD PUSH2 0x1D02 JUMP JUMPDEST SWAP2 POP PUSH2 0x1F4E PUSH1 0x80 DUP8 ADD PUSH2 0x1CED JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1F70 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1F79 DUP6 PUSH2 0x1D16 JUMP JUMPDEST SWAP4 POP PUSH2 0x1F87 PUSH1 0x20 DUP7 ADD PUSH2 0x1D16 JUMP JUMPDEST SWAP3 POP PUSH2 0x1F95 PUSH1 0x40 DUP7 ADD PUSH2 0x1CED JUMP JUMPDEST SWAP2 POP PUSH2 0x1FA3 PUSH1 0x60 DUP7 ADD PUSH2 0x1D16 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD PUSH2 0x1FC0 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x24F7 JUMP JUMPDEST SWAP3 SWAP1 SWAP3 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x1FDC DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x24F7 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP7 MLOAD PUSH2 0x1FF8 DUP2 DUP5 PUSH1 0x20 DUP12 ADD PUSH2 0x24F7 JUMP JUMPDEST DUP7 MLOAD SWAP1 DUP4 ADD SWAP1 PUSH2 0x200C DUP2 DUP4 PUSH1 0x20 DUP12 ADD PUSH2 0x24F7 JUMP JUMPDEST DUP7 MLOAD SWAP2 ADD SWAP1 PUSH2 0x201F DUP2 DUP4 PUSH1 0x20 DUP11 ADD PUSH2 0x24F7 JUMP JUMPDEST DUP6 MLOAD SWAP2 ADD SWAP1 PUSH2 0x2032 DUP2 DUP4 PUSH1 0x20 DUP10 ADD PUSH2 0x24F7 JUMP JUMPDEST DUP5 MLOAD SWAP2 ADD SWAP1 PUSH2 0x2045 DUP2 DUP4 PUSH1 0x20 DUP9 ADD PUSH2 0x24F7 JUMP JUMPDEST ADD SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x3C696D6167652077696474683D22363022206865696768743D2236302220696D DUP2 MSTORE PUSH32 0x6167652D72656E646572696E673D22706978656C617465642220707265736572 PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x7665417370656374526174696F3D22784D6964594D69642220786C696E6B3A68 PUSH1 0x40 DUP3 ADD MSTORE PUSH27 0x1C99598F4899185D184E9A5B5859D94BDC1B99CED8985CD94D8D0B PUSH1 0x2A SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x0 DUP3 MLOAD PUSH2 0x20F9 DUP2 PUSH1 0x7B DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x24F7 JUMP JUMPDEST PUSH3 0x11179F PUSH1 0xE9 SHL PUSH1 0x7B SWAP4 SWAP1 SWAP2 ADD SWAP3 DUP4 ADD MSTORE POP PUSH1 0x7E ADD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x7B2274726169745F74797065223A2248616E642054797065222C202276616C75 DUP2 MSTORE PUSH5 0x32911D1011 PUSH1 0xD9 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 DUP3 MLOAD PUSH2 0x2159 DUP2 PUSH1 0x25 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x24F7 JUMP JUMPDEST PUSH2 0x227D PUSH1 0xF0 SHL PUSH1 0x25 SWAP4 SWAP1 SWAP2 ADD SWAP3 DUP4 ADD MSTORE POP PUSH1 0x27 ADD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH17 0x7B226E616D65223A2022546F6B656E2023 PUSH1 0x78 SHL DUP2 MSTORE DUP4 MLOAD PUSH1 0x0 SWAP1 PUSH2 0x219F DUP2 PUSH1 0x11 DUP6 ADD PUSH1 0x20 DUP10 ADD PUSH2 0x24F7 JUMP JUMPDEST PUSH32 0x222C20226465736372697074696F6E223A2022412073696D706C6520546F6B65 PUSH1 0x11 SWAP2 DUP5 ADD SWAP2 DUP3 ADD MSTORE PUSH32 0x6E222C2022696D616765223A2022646174613A696D6167652F7376672B786D6C PUSH1 0x31 DUP3 ADD MSTORE PUSH8 0xED8985CD94D8D0B PUSH1 0xC2 SHL PUSH1 0x51 DUP3 ADD MSTORE DUP5 MLOAD PUSH2 0x2213 DUP2 PUSH1 0x59 DUP5 ADD PUSH1 0x20 DUP10 ADD PUSH2 0x24F7 JUMP JUMPDEST PUSH3 0x11161 PUSH1 0xED SHL PUSH1 0x59 SWAP3 SWAP1 SWAP2 ADD SWAP2 DUP3 ADD MSTORE DUP4 MLOAD PUSH2 0x2237 DUP2 PUSH1 0x5C DUP5 ADD PUSH1 0x20 DUP9 ADD PUSH2 0x24F7 JUMP JUMPDEST PUSH1 0x7D PUSH1 0xF8 SHL PUSH1 0x5C SWAP3 SWAP1 SWAP2 ADD SWAP2 DUP3 ADD MSTORE PUSH1 0x5D ADD SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH15 0x2261747472696275746573223A205B PUSH1 0x88 SHL DUP2 MSTORE DUP6 MLOAD PUSH1 0x0 SWAP1 PUSH2 0x227D DUP2 PUSH1 0xF DUP6 ADD PUSH1 0x20 DUP12 ADD PUSH2 0x24F7 JUMP JUMPDEST PUSH1 0xB PUSH1 0xFA SHL PUSH1 0xF SWAP2 DUP5 ADD SWAP2 DUP3 ADD MSTORE DUP7 MLOAD PUSH2 0x229E DUP2 PUSH1 0x10 DUP5 ADD PUSH1 0x20 DUP12 ADD PUSH2 0x24F7 JUMP JUMPDEST PUSH32 0x2C7B2274726169745F74797065223A2022506F7461746F222C202276616C7565 PUSH1 0x10 SWAP3 SWAP1 SWAP2 ADD SWAP2 DUP3 ADD MSTORE PUSH3 0x111D11 PUSH1 0xE9 SHL PUSH1 0x30 DUP3 ADD MSTORE DUP6 MLOAD PUSH2 0x22E8 DUP2 PUSH1 0x33 DUP5 ADD PUSH1 0x20 DUP11 ADD PUSH2 0x24F7 JUMP JUMPDEST PUSH32 0x227D2C7B22646973706C61795F74797065223A20226E756D626572222C227472 PUSH1 0x33 SWAP3 SWAP1 SWAP2 ADD SWAP2 DUP3 ADD MSTORE PUSH32 0x6169745F74797065223A202247656E65726174696F6E222C202276616C756522 PUSH1 0x53 DUP3 ADD MSTORE PUSH2 0x1D11 PUSH1 0xF1 SHL PUSH1 0x73 DUP3 ADD MSTORE PUSH2 0x23A6 PUSH2 0x2397 PUSH2 0x2391 PUSH2 0x235A PUSH1 0x75 DUP6 ADD DUP10 PUSH2 0x1FAE JUMP JUMPDEST PUSH32 0x227D2C7B2274726169745F74797065223A2022416374697665222C202276616C DUP2 MSTORE PUSH5 0x3AB2911D11 PUSH1 0xD9 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x25 ADD SWAP1 JUMP JUMPDEST DUP7 PUSH2 0x1FAE JUMP JUMPDEST PUSH3 0x227D5D PUSH1 0xE8 SHL DUP2 MSTORE PUSH1 0x3 ADD SWAP1 JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x7B2274726169745F74797065223A224261636B67726F756E64222C202276616C DUP2 MSTORE PUSH5 0x3AB2911D11 PUSH1 0xD9 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 DUP3 MLOAD PUSH2 0x2159 DUP2 PUSH1 0x25 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x24F7 JUMP JUMPDEST PUSH32 0x646174613A6170706C69636174696F6E2F6A736F6E3B6261736536342C000000 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD PUSH2 0x2430 DUP2 PUSH1 0x1D DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x24F7 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD PUSH1 0x1D ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x245C DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x24F7 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xB SWAP1 DUP3 ADD MSTORE PUSH11 0x3737BA1036B0B730B3B2B9 PUSH1 0xA9 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x24A8 JUMPI PUSH2 0x24A8 PUSH2 0x2576 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x24BC JUMPI PUSH2 0x24BC PUSH2 0x258C JUMP JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x24DB JUMPI PUSH2 0x24DB PUSH2 0x2576 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x24F2 JUMPI PUSH2 0x24F2 PUSH2 0x2576 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2512 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x24FA JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x2521 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x253B JUMPI PUSH2 0x253B PUSH2 0x2576 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND PUSH1 0xFF DUP2 EQ ISZERO PUSH2 0x2559 JUMPI PUSH2 0x2559 PUSH2 0x2576 JUMP JUMPDEST PUSH1 0x1 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x2571 JUMPI PUSH2 0x2571 PUSH2 0x258C JUMP JUMPDEST POP MOD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID EXTCODECOPY PUSH20 0x76672069643D226261636B6275726E6572222077 PUSH10 0x6474683D223130302522 KECCAK256 PUSH9 0x65696768743D223130 ADDRESS 0x25 0x22 KECCAK256 PUSH23 0x657273696F6E3D22312E31222076696577426F783D2230 KECCAK256 ADDRESS KECCAK256 CALLDATASIZE ADDRESS KECCAK256 CALLDATASIZE ADDRESS 0x22 KECCAK256 PUSH25 0x6D6C6E733D22687474703A2F2F7777772E77332E6F72672F32 ADDRESS ADDRESS ADDRESS 0x2F PUSH20 0x76672220786D6C6E733A786C696E6B3D22687474 PUSH17 0x3A2F2F7777772E77332E6F72672F313939 CODECOPY 0x2F PUSH25 0x6C696E6B223E4142434445464748494A4B4C4D4E4F50515253 SLOAD SSTORE JUMP JUMPI PC MSIZE GAS PUSH2 0x6263 PUSH5 0x6566676869 PUSH11 0x6B6C6D6E6F707172737475 PUSH23 0x7778797A303132333435363738392B2F3C7374796C653E 0x23 PUSH3 0x61636B PUSH3 0x75726E PUSH6 0x727B73686170 PUSH6 0x2D72656E6465 PUSH19 0x696E673A20637269737065646765733B20696D PUSH2 0x6765 0x2D PUSH19 0x656E646572696E673A202D7765626B69742D63 PUSH19 0x6973702D65646765733B20696D6167652D7265 PUSH15 0x646572696E673A202D6D6F7A2D6372 PUSH10 0x73702D65646765733B20 PUSH10 0x6D6167652D72656E6465 PUSH19 0x696E673A2063726973702D65646765733B2069 PUSH14 0x6167652D72656E646572696E673A KECCAK256 PUSH17 0x6978656C617465643B202D6D732D696E74 PUSH6 0x72706F6C6174 PUSH10 0x6F6E2D6D6F64653A206E PUSH6 0x61726573742D PUSH15 0x65696768626F723B7D3C2F7374796C PUSH6 0x3E3C2F737667 RETURNDATACOPY LOG1 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP EXP ",
              "sourceMap": "92:14150:1:-:0;;;1958:53;;;;;;;;;-1:-1:-1;1983:7:1;:20;;-1:-1:-1;;;;;;1983:20:1;1993:10;1983:20;;;92:14150;;;;;;"
            },
            "deployedBytecode": {
              "functionDebugData": {
                "@backgrounds_316": {
                  "entryPoint": null,
                  "id": 316,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@encode_1696": {
                  "entryPoint": 7027,
                  "id": 1696,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "@footer_330": {
                  "entryPoint": 2822,
                  "id": 330,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@getAttributes_1226": {
                  "entryPoint": 3679,
                  "id": 1226,
                  "parameterSlots": 5,
                  "returnSlots": 1
                },
                "@getBackgroundAttributes_1246": {
                  "entryPoint": 6690,
                  "id": 1246,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "@getBackgroundName_1391": {
                  "entryPoint": 2970,
                  "id": 1391,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "@getHandAttributes_1266": {
                  "entryPoint": 6739,
                  "id": 1266,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "@getHandName_1647": {
                  "entryPoint": 751,
                  "id": 1647,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "@getSVGInterface_412": {
                  "entryPoint": null,
                  "id": 412,
                  "parameterSlots": 4,
                  "returnSlots": 1
                },
                "@getSVG_371": {
                  "entryPoint": 2665,
                  "id": 371,
                  "parameterSlots": 4,
                  "returnSlots": 1
                },
                "@getTokenURI_488": {
                  "entryPoint": 3892,
                  "id": 488,
                  "parameterSlots": 7,
                  "returnSlots": 1
                },
                "@get_1084": {
                  "entryPoint": 4150,
                  "id": 1084,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "@hand_types_320": {
                  "entryPoint": null,
                  "id": 320,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@header_327": {
                  "entryPoint": 590,
                  "id": 327,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@manager_308": {
                  "entryPoint": null,
                  "id": 308,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@potatoes_324": {
                  "entryPoint": null,
                  "id": 324,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@setBackgrounds_522": {
                  "entryPoint": 2851,
                  "id": 522,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "@setHands_556": {
                  "entryPoint": 618,
                  "id": 556,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "@setPotatoes_590": {
                  "entryPoint": 4031,
                  "id": 590,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "@toString_1180": {
                  "entryPoint": 6766,
                  "id": 1180,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "@wrapTag_1102": {
                  "entryPoint": 7386,
                  "id": 1102,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_decode_bool": {
                  "entryPoint": 7405,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_decode_tuple_t_enum$_Part_$312t_uint8": {
                  "entryPoint": 7463,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 2
                },
                "abi_decode_tuple_t_string_memory_ptr_fromMemory": {
                  "entryPoint": 7520,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_tuple_t_uint16t_uint8t_uint8t_boolt_uint32t_boolt_uint8": {
                  "entryPoint": 7681,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 7
                },
                "abi_decode_tuple_t_uint8": {
                  "entryPoint": 7824,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_tuple_t_uint8t_address": {
                  "entryPoint": 7858,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 2
                },
                "abi_decode_tuple_t_uint8t_uint8t_boolt_uint32t_bool": {
                  "entryPoint": 7925,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 5
                },
                "abi_decode_tuple_t_uint8t_uint8t_boolt_uint8": {
                  "entryPoint": 8026,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 4
                },
                "abi_decode_uint32": {
                  "entryPoint": 7426,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_decode_uint8": {
                  "entryPoint": 7446,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_bytes": {
                  "entryPoint": 8110,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_stringliteral_55d1": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_stringliteral_af5e": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
                  "entryPoint": 8138,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
                  "entryPoint": 8166,
                  "id": null,
                  "parameterSlots": 6,
                  "returnSlots": 1
                },
                "abi_encode_tuple_packed_t_stringliteral_4e093557a78e66025a98d44b7ad003037537f50a2dc2063dd80e48e84615f893_t_string_memory_ptr_t_stringliteral_b26240e716d0906f15dfc172fadbe2347b20c889873f9bdb04fd7ee803f7f175__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
                  "entryPoint": 8273,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_tuple_packed_t_stringliteral_4fe68489c9c59542e448c09c7cb19a25565db1d56926ad418d32ec5d60a94a00_t_string_memory_ptr_t_stringliteral_835b459273672627bbafc3a2eded65187a632f4128bdc79e126c7ef579a27475__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
                  "entryPoint": 8467,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_tuple_packed_t_stringliteral_59f4548e9770730d5f9b79d3485266abe95856eb8b22f4d5d7dc65d7d7b412d6_t_string_memory_ptr_t_stringliteral_1b282456f8601862e95af181204e9d3f663b67381ffb5ef69256c5794fe4214d_t_string_memory_ptr_t_stringliteral_d31db5fa4cccdf0b2a7c8fa1b54fac1497461aa344c190614087e30f1494e3a3_t_string_memory_ptr_t_stringliteral_8e2ffa389f3a6ded42d759b3377ac0d928e6a268d143bcc9517093d10c843bff__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
                  "entryPoint": 8562,
                  "id": null,
                  "parameterSlots": 4,
                  "returnSlots": 1
                },
                "abi_encode_tuple_packed_t_stringliteral_a9d6c84473de3f3a866c16d436066b8d4df325a647d2d3a768ffba45df210f3c_t_string_memory_ptr_t_stringliteral_3e7a35b97029f9e0cf6effd71c1a7958822e9a217d3a3aec886668a7dd8231cb_t_string_memory_ptr_t_stringliteral_bc46964ee67a2cae6d0f729fb15b9a5d4cb3d4ebbff2daaa6354914b023a1353_t_string_memory_ptr_t_stringliteral_41fbd829e4af7b81ddb12bdc9c3cbf422a9f60ac7a161c934b4e5a8a19f8d094_t_string_memory_ptr_t_stringliteral_af5e4c39327d0e7b85c8cd1468bda17f7c9f1664111102bef75507362e009b62_t_string_memory_ptr_t_stringliteral_55d1e182806bfa9e2513939eb2ae6e56b092a4b2806e0521aaf1ff702ce46bf5__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
                  "entryPoint": 8786,
                  "id": null,
                  "parameterSlots": 6,
                  "returnSlots": 1
                },
                "abi_encode_tuple_packed_t_stringliteral_bac141df451ff89b6f77bbe970ff45a5da43dda5f9b9b17f412346e0390cf501_t_string_memory_ptr_t_stringliteral_835b459273672627bbafc3a2eded65187a632f4128bdc79e126c7ef579a27475__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
                  "entryPoint": 9138,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_tuple_packed_t_stringliteral_bccab2d885f86fda81bfd84dd4248d31f8073b473d187111d36536db073076fa_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
                  "entryPoint": 9208,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
                  "entryPoint": 9277,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_stringliteral_05fa04d950d0eb1e8230c3564e55272c5585bfce9868906a080ed6432c9eff76__to_t_string_memory_ptr__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_stringliteral_88a57f4f3e712e2c61ce3233637c29aee4812a27dbd1d386e5dba84931d76764__to_t_string_memory_ptr__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_stringliteral_b9152bce179ee840f091df595a871f540fd5ecc16b15a8e340a1bf1c96ad6520__to_t_string_memory_ptr__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_stringliteral_c08d24782450105650bac1579f41a5bbfca5a1ee79af052c31863122951f0e7f__to_t_string_memory_ptr__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_stringliteral_ee7b04b266f275ae66a2fddcbfef24d4ec3a503d9843c534a382f12477498d38__to_t_string_memory_ptr__fromStack_reversed": {
                  "entryPoint": 9328,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "checked_add_t_uint256": {
                  "entryPoint": 9365,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "checked_div_t_uint256": {
                  "entryPoint": 9389,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "checked_mul_t_uint256": {
                  "entryPoint": 9409,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "checked_sub_t_uint256": {
                  "entryPoint": 9440,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "copy_memory_to_memory": {
                  "entryPoint": 9463,
                  "id": null,
                  "parameterSlots": 3,
                  "returnSlots": 0
                },
                "increment_t_uint256": {
                  "entryPoint": 9511,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "increment_t_uint8": {
                  "entryPoint": 9538,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "mod_t_uint256": {
                  "entryPoint": 9570,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "panic_error_0x11": {
                  "entryPoint": 9590,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "panic_error_0x12": {
                  "entryPoint": 9612,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "panic_error_0x21": {
                  "entryPoint": 9634,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "panic_error_0x32": {
                  "entryPoint": 9656,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "panic_error_0x41": {
                  "entryPoint": 9678,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                }
              },
              "generatedSources": [
                {
                  "ast": {
                    "nodeType": "YulBlock",
                    "src": "0:16560:2",
                    "statements": [
                      {
                        "nodeType": "YulBlock",
                        "src": "6:3:2",
                        "statements": []
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "60:114:2",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "70:29:2",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "92:6:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "79:12:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "79:20:2"
                              },
                              "variableNames": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "70:5:2"
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "152:16:2",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "161:1:2",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "164:1:2",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "154:6:2"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "154:12:2"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "154:12:2"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "121:5:2"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "name": "value",
                                                "nodeType": "YulIdentifier",
                                                "src": "142:5:2"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "iszero",
                                              "nodeType": "YulIdentifier",
                                              "src": "135:6:2"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "135:13:2"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "iszero",
                                          "nodeType": "YulIdentifier",
                                          "src": "128:6:2"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "128:21:2"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nodeType": "YulIdentifier",
                                      "src": "118:2:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "118:32:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "111:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "111:40:2"
                              },
                              "nodeType": "YulIf",
                              "src": "108:60:2"
                            }
                          ]
                        },
                        "name": "abi_decode_bool",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nodeType": "YulTypedName",
                            "src": "39:6:2",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "50:5:2",
                            "type": ""
                          }
                        ],
                        "src": "14:160:2"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "227:115:2",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "237:29:2",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "259:6:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "246:12:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "246:20:2"
                              },
                              "variableNames": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "237:5:2"
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "320:16:2",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "329:1:2",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "332:1:2",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "322:6:2"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "322:12:2"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "322:12:2"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "288:5:2"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "299:5:2"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "306:10:2",
                                            "type": "",
                                            "value": "0xffffffff"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "and",
                                          "nodeType": "YulIdentifier",
                                          "src": "295:3:2"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "295:22:2"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nodeType": "YulIdentifier",
                                      "src": "285:2:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "285:33:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "278:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "278:41:2"
                              },
                              "nodeType": "YulIf",
                              "src": "275:61:2"
                            }
                          ]
                        },
                        "name": "abi_decode_uint32",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nodeType": "YulTypedName",
                            "src": "206:6:2",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "217:5:2",
                            "type": ""
                          }
                        ],
                        "src": "179:163:2"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "394:109:2",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "404:29:2",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "426:6:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "413:12:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "413:20:2"
                              },
                              "variableNames": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "404:5:2"
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "481:16:2",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "490:1:2",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "493:1:2",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "483:6:2"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "483:12:2"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "483:12:2"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "455:5:2"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "466:5:2"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "473:4:2",
                                            "type": "",
                                            "value": "0xff"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "and",
                                          "nodeType": "YulIdentifier",
                                          "src": "462:3:2"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "462:16:2"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nodeType": "YulIdentifier",
                                      "src": "452:2:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "452:27:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "445:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "445:35:2"
                              },
                              "nodeType": "YulIf",
                              "src": "442:55:2"
                            }
                          ]
                        },
                        "name": "abi_decode_uint8",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nodeType": "YulTypedName",
                            "src": "373:6:2",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "384:5:2",
                            "type": ""
                          }
                        ],
                        "src": "347:156:2"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "601:241:2",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "647:16:2",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "656:1:2",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "659:1:2",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "649:6:2"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "649:12:2"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "649:12:2"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "622:7:2"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "631:9:2"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "618:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "618:23:2"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "643:2:2",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "614:3:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "614:32:2"
                              },
                              "nodeType": "YulIf",
                              "src": "611:52:2"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "672:36:2",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "698:9:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "685:12:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "685:23:2"
                              },
                              "variables": [
                                {
                                  "name": "value",
                                  "nodeType": "YulTypedName",
                                  "src": "676:5:2",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "741:16:2",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "750:1:2",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "753:1:2",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "743:6:2"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "743:12:2"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "743:12:2"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "730:5:2"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "737:1:2",
                                        "type": "",
                                        "value": "3"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "lt",
                                      "nodeType": "YulIdentifier",
                                      "src": "727:2:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "727:12:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "720:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "720:20:2"
                              },
                              "nodeType": "YulIf",
                              "src": "717:40:2"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "766:15:2",
                              "value": {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "776:5:2"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "766:6:2"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "790:46:2",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "821:9:2"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "832:2:2",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "817:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "817:18:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_uint8",
                                  "nodeType": "YulIdentifier",
                                  "src": "800:16:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "800:36:2"
                              },
                              "variableNames": [
                                {
                                  "name": "value1",
                                  "nodeType": "YulIdentifier",
                                  "src": "790:6:2"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_enum$_Part_$312t_uint8",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "559:9:2",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "570:7:2",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "582:6:2",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "590:6:2",
                            "type": ""
                          }
                        ],
                        "src": "508:334:2"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "938:793:2",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "984:16:2",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "993:1:2",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "996:1:2",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "986:6:2"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "986:12:2"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "986:12:2"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "959:7:2"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "968:9:2"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "955:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "955:23:2"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "980:2:2",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "951:3:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "951:32:2"
                              },
                              "nodeType": "YulIf",
                              "src": "948:52:2"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "1009:30:2",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "1029:9:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "1023:5:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1023:16:2"
                              },
                              "variables": [
                                {
                                  "name": "offset",
                                  "nodeType": "YulTypedName",
                                  "src": "1013:6:2",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "1048:28:2",
                              "value": {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1058:18:2",
                                "type": "",
                                "value": "0xffffffffffffffff"
                              },
                              "variables": [
                                {
                                  "name": "_1",
                                  "nodeType": "YulTypedName",
                                  "src": "1052:2:2",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "1103:16:2",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1112:1:2",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1115:1:2",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "1105:6:2"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1105:12:2"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1105:12:2"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "1091:6:2"
                                  },
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "1099:2:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "1088:2:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1088:14:2"
                              },
                              "nodeType": "YulIf",
                              "src": "1085:34:2"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "1128:32:2",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "1142:9:2"
                                  },
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "1153:6:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "1138:3:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1138:22:2"
                              },
                              "variables": [
                                {
                                  "name": "_2",
                                  "nodeType": "YulTypedName",
                                  "src": "1132:2:2",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "1208:16:2",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1217:1:2",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1220:1:2",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "1210:6:2"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1210:12:2"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1210:12:2"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "_2",
                                            "nodeType": "YulIdentifier",
                                            "src": "1187:2:2"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "1191:4:2",
                                            "type": "",
                                            "value": "0x1f"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "1183:3:2"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "1183:13:2"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "1198:7:2"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "slt",
                                      "nodeType": "YulIdentifier",
                                      "src": "1179:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1179:27:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "1172:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1172:35:2"
                              },
                              "nodeType": "YulIf",
                              "src": "1169:55:2"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "1233:19:2",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "_2",
                                    "nodeType": "YulIdentifier",
                                    "src": "1249:2:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "1243:5:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1243:9:2"
                              },
                              "variables": [
                                {
                                  "name": "_3",
                                  "nodeType": "YulTypedName",
                                  "src": "1237:2:2",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "1275:22:2",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x41",
                                        "nodeType": "YulIdentifier",
                                        "src": "1277:16:2"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1277:18:2"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1277:18:2"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "_3",
                                    "nodeType": "YulIdentifier",
                                    "src": "1267:2:2"
                                  },
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "1271:2:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "1264:2:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1264:10:2"
                              },
                              "nodeType": "YulIf",
                              "src": "1261:36:2"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "1306:17:2",
                              "value": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1320:2:2",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "1316:3:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1316:7:2"
                              },
                              "variables": [
                                {
                                  "name": "_4",
                                  "nodeType": "YulTypedName",
                                  "src": "1310:2:2",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "1332:23:2",
                              "value": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1352:2:2",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "1346:5:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1346:9:2"
                              },
                              "variables": [
                                {
                                  "name": "memPtr",
                                  "nodeType": "YulTypedName",
                                  "src": "1336:6:2",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "1364:71:2",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "memPtr",
                                    "nodeType": "YulIdentifier",
                                    "src": "1386:6:2"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "arguments": [
                                                  {
                                                    "name": "_3",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "1410:2:2"
                                                  },
                                                  {
                                                    "kind": "number",
                                                    "nodeType": "YulLiteral",
                                                    "src": "1414:4:2",
                                                    "type": "",
                                                    "value": "0x1f"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "add",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "1406:3:2"
                                                },
                                                "nodeType": "YulFunctionCall",
                                                "src": "1406:13:2"
                                              },
                                              {
                                                "name": "_4",
                                                "nodeType": "YulIdentifier",
                                                "src": "1421:2:2"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "and",
                                              "nodeType": "YulIdentifier",
                                              "src": "1402:3:2"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "1402:22:2"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "1426:2:2",
                                            "type": "",
                                            "value": "63"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "1398:3:2"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "1398:31:2"
                                      },
                                      {
                                        "name": "_4",
                                        "nodeType": "YulIdentifier",
                                        "src": "1431:2:2"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "1394:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1394:40:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "1382:3:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1382:53:2"
                              },
                              "variables": [
                                {
                                  "name": "newFreePtr",
                                  "nodeType": "YulTypedName",
                                  "src": "1368:10:2",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "1494:22:2",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x41",
                                        "nodeType": "YulIdentifier",
                                        "src": "1496:16:2"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1496:18:2"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1496:18:2"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "newFreePtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "1453:10:2"
                                      },
                                      {
                                        "name": "_1",
                                        "nodeType": "YulIdentifier",
                                        "src": "1465:2:2"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "gt",
                                      "nodeType": "YulIdentifier",
                                      "src": "1450:2:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1450:18:2"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "newFreePtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "1473:10:2"
                                      },
                                      {
                                        "name": "memPtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "1485:6:2"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "lt",
                                      "nodeType": "YulIdentifier",
                                      "src": "1470:2:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1470:22:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "or",
                                  "nodeType": "YulIdentifier",
                                  "src": "1447:2:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1447:46:2"
                              },
                              "nodeType": "YulIf",
                              "src": "1444:72:2"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1532:2:2",
                                    "type": "",
                                    "value": "64"
                                  },
                                  {
                                    "name": "newFreePtr",
                                    "nodeType": "YulIdentifier",
                                    "src": "1536:10:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "1525:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1525:22:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1525:22:2"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "memPtr",
                                    "nodeType": "YulIdentifier",
                                    "src": "1563:6:2"
                                  },
                                  {
                                    "name": "_3",
                                    "nodeType": "YulIdentifier",
                                    "src": "1571:2:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "1556:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1556:18:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1556:18:2"
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "1620:16:2",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1629:1:2",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1632:1:2",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "1622:6:2"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1622:12:2"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1622:12:2"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "_2",
                                            "nodeType": "YulIdentifier",
                                            "src": "1597:2:2"
                                          },
                                          {
                                            "name": "_3",
                                            "nodeType": "YulIdentifier",
                                            "src": "1601:2:2"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "1593:3:2"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "1593:11:2"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1606:2:2",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "1589:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1589:20:2"
                                  },
                                  {
                                    "name": "dataEnd",
                                    "nodeType": "YulIdentifier",
                                    "src": "1611:7:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "1586:2:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1586:33:2"
                              },
                              "nodeType": "YulIf",
                              "src": "1583:53:2"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "_2",
                                        "nodeType": "YulIdentifier",
                                        "src": "1671:2:2"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1675:2:2",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "1667:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1667:11:2"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "memPtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "1684:6:2"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1692:2:2",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "1680:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1680:15:2"
                                  },
                                  {
                                    "name": "_3",
                                    "nodeType": "YulIdentifier",
                                    "src": "1697:2:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "copy_memory_to_memory",
                                  "nodeType": "YulIdentifier",
                                  "src": "1645:21:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1645:55:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1645:55:2"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "1709:16:2",
                              "value": {
                                "name": "memPtr",
                                "nodeType": "YulIdentifier",
                                "src": "1719:6:2"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "1709:6:2"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_string_memory_ptr_fromMemory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "904:9:2",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "915:7:2",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "927:6:2",
                            "type": ""
                          }
                        ],
                        "src": "847:884:2"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1894:536:2",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "1941:16:2",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1950:1:2",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1953:1:2",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "1943:6:2"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1943:12:2"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1943:12:2"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "1915:7:2"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "1924:9:2"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "1911:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1911:23:2"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1936:3:2",
                                    "type": "",
                                    "value": "224"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "1907:3:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1907:33:2"
                              },
                              "nodeType": "YulIf",
                              "src": "1904:53:2"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "1966:36:2",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "1992:9:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "1979:12:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1979:23:2"
                              },
                              "variables": [
                                {
                                  "name": "value",
                                  "nodeType": "YulTypedName",
                                  "src": "1970:5:2",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "2052:16:2",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "2061:1:2",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "2064:1:2",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "2054:6:2"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2054:12:2"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "2054:12:2"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "2024:5:2"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "2035:5:2"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "2042:6:2",
                                            "type": "",
                                            "value": "0xffff"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "and",
                                          "nodeType": "YulIdentifier",
                                          "src": "2031:3:2"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "2031:18:2"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nodeType": "YulIdentifier",
                                      "src": "2021:2:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2021:29:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "2014:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2014:37:2"
                              },
                              "nodeType": "YulIf",
                              "src": "2011:57:2"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "2077:15:2",
                              "value": {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "2087:5:2"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "2077:6:2"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "2101:46:2",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "2132:9:2"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "2143:2:2",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "2128:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2128:18:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_uint8",
                                  "nodeType": "YulIdentifier",
                                  "src": "2111:16:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2111:36:2"
                              },
                              "variableNames": [
                                {
                                  "name": "value1",
                                  "nodeType": "YulIdentifier",
                                  "src": "2101:6:2"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "2156:46:2",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "2187:9:2"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "2198:2:2",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "2183:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2183:18:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_uint8",
                                  "nodeType": "YulIdentifier",
                                  "src": "2166:16:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2166:36:2"
                              },
                              "variableNames": [
                                {
                                  "name": "value2",
                                  "nodeType": "YulIdentifier",
                                  "src": "2156:6:2"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "2211:45:2",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "2241:9:2"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "2252:2:2",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "2237:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2237:18:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_bool",
                                  "nodeType": "YulIdentifier",
                                  "src": "2221:15:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2221:35:2"
                              },
                              "variableNames": [
                                {
                                  "name": "value3",
                                  "nodeType": "YulIdentifier",
                                  "src": "2211:6:2"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "2265:48:2",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "2297:9:2"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "2308:3:2",
                                        "type": "",
                                        "value": "128"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "2293:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2293:19:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_uint32",
                                  "nodeType": "YulIdentifier",
                                  "src": "2275:17:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2275:38:2"
                              },
                              "variableNames": [
                                {
                                  "name": "value4",
                                  "nodeType": "YulIdentifier",
                                  "src": "2265:6:2"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "2322:46:2",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "2352:9:2"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "2363:3:2",
                                        "type": "",
                                        "value": "160"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "2348:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2348:19:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_bool",
                                  "nodeType": "YulIdentifier",
                                  "src": "2332:15:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2332:36:2"
                              },
                              "variableNames": [
                                {
                                  "name": "value5",
                                  "nodeType": "YulIdentifier",
                                  "src": "2322:6:2"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "2377:47:2",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "2408:9:2"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "2419:3:2",
                                        "type": "",
                                        "value": "192"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "2404:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2404:19:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_uint8",
                                  "nodeType": "YulIdentifier",
                                  "src": "2387:16:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2387:37:2"
                              },
                              "variableNames": [
                                {
                                  "name": "value6",
                                  "nodeType": "YulIdentifier",
                                  "src": "2377:6:2"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_uint16t_uint8t_uint8t_boolt_uint32t_boolt_uint8",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "1812:9:2",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "1823:7:2",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "1835:6:2",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "1843:6:2",
                            "type": ""
                          },
                          {
                            "name": "value2",
                            "nodeType": "YulTypedName",
                            "src": "1851:6:2",
                            "type": ""
                          },
                          {
                            "name": "value3",
                            "nodeType": "YulTypedName",
                            "src": "1859:6:2",
                            "type": ""
                          },
                          {
                            "name": "value4",
                            "nodeType": "YulTypedName",
                            "src": "1867:6:2",
                            "type": ""
                          },
                          {
                            "name": "value5",
                            "nodeType": "YulTypedName",
                            "src": "1875:6:2",
                            "type": ""
                          },
                          {
                            "name": "value6",
                            "nodeType": "YulTypedName",
                            "src": "1883:6:2",
                            "type": ""
                          }
                        ],
                        "src": "1736:694:2"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "2503:114:2",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "2549:16:2",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "2558:1:2",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "2561:1:2",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "2551:6:2"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2551:12:2"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "2551:12:2"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "2524:7:2"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "2533:9:2"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "2520:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2520:23:2"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2545:2:2",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "2516:3:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2516:32:2"
                              },
                              "nodeType": "YulIf",
                              "src": "2513:52:2"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "2574:37:2",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "2601:9:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_uint8",
                                  "nodeType": "YulIdentifier",
                                  "src": "2584:16:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2584:27:2"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "2574:6:2"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_uint8",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "2469:9:2",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "2480:7:2",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "2492:6:2",
                            "type": ""
                          }
                        ],
                        "src": "2435:182:2"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "2707:271:2",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "2753:16:2",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "2762:1:2",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "2765:1:2",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "2755:6:2"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2755:12:2"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "2755:12:2"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "2728:7:2"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "2737:9:2"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "2724:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2724:23:2"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2749:2:2",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "2720:3:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2720:32:2"
                              },
                              "nodeType": "YulIf",
                              "src": "2717:52:2"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "2778:37:2",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "2805:9:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_uint8",
                                  "nodeType": "YulIdentifier",
                                  "src": "2788:16:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2788:27:2"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "2778:6:2"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "2824:45:2",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "2854:9:2"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "2865:2:2",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "2850:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2850:18:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "2837:12:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2837:32:2"
                              },
                              "variables": [
                                {
                                  "name": "value",
                                  "nodeType": "YulTypedName",
                                  "src": "2828:5:2",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "2932:16:2",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "2941:1:2",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "2944:1:2",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "2934:6:2"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2934:12:2"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "2934:12:2"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "2891:5:2"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "2902:5:2"
                                          },
                                          {
                                            "arguments": [
                                              {
                                                "arguments": [
                                                  {
                                                    "kind": "number",
                                                    "nodeType": "YulLiteral",
                                                    "src": "2917:3:2",
                                                    "type": "",
                                                    "value": "160"
                                                  },
                                                  {
                                                    "kind": "number",
                                                    "nodeType": "YulLiteral",
                                                    "src": "2922:1:2",
                                                    "type": "",
                                                    "value": "1"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "shl",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "2913:3:2"
                                                },
                                                "nodeType": "YulFunctionCall",
                                                "src": "2913:11:2"
                                              },
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "2926:1:2",
                                                "type": "",
                                                "value": "1"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "sub",
                                              "nodeType": "YulIdentifier",
                                              "src": "2909:3:2"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "2909:19:2"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "and",
                                          "nodeType": "YulIdentifier",
                                          "src": "2898:3:2"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "2898:31:2"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nodeType": "YulIdentifier",
                                      "src": "2888:2:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2888:42:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "2881:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2881:50:2"
                              },
                              "nodeType": "YulIf",
                              "src": "2878:70:2"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "2957:15:2",
                              "value": {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "2967:5:2"
                              },
                              "variableNames": [
                                {
                                  "name": "value1",
                                  "nodeType": "YulIdentifier",
                                  "src": "2957:6:2"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_uint8t_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "2665:9:2",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "2676:7:2",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "2688:6:2",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "2696:6:2",
                            "type": ""
                          }
                        ],
                        "src": "2622:356:2"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "3110:335:2",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "3157:16:2",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "3166:1:2",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "3169:1:2",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "3159:6:2"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "3159:12:2"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "3159:12:2"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "3131:7:2"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "3140:9:2"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "3127:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3127:23:2"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3152:3:2",
                                    "type": "",
                                    "value": "160"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "3123:3:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3123:33:2"
                              },
                              "nodeType": "YulIf",
                              "src": "3120:53:2"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "3182:37:2",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "3209:9:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_uint8",
                                  "nodeType": "YulIdentifier",
                                  "src": "3192:16:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3192:27:2"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "3182:6:2"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "3228:46:2",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "3259:9:2"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3270:2:2",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "3255:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3255:18:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_uint8",
                                  "nodeType": "YulIdentifier",
                                  "src": "3238:16:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3238:36:2"
                              },
                              "variableNames": [
                                {
                                  "name": "value1",
                                  "nodeType": "YulIdentifier",
                                  "src": "3228:6:2"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "3283:45:2",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "3313:9:2"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3324:2:2",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "3309:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3309:18:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_bool",
                                  "nodeType": "YulIdentifier",
                                  "src": "3293:15:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3293:35:2"
                              },
                              "variableNames": [
                                {
                                  "name": "value2",
                                  "nodeType": "YulIdentifier",
                                  "src": "3283:6:2"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "3337:47:2",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "3369:9:2"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3380:2:2",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "3365:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3365:18:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_uint32",
                                  "nodeType": "YulIdentifier",
                                  "src": "3347:17:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3347:37:2"
                              },
                              "variableNames": [
                                {
                                  "name": "value3",
                                  "nodeType": "YulIdentifier",
                                  "src": "3337:6:2"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "3393:46:2",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "3423:9:2"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3434:3:2",
                                        "type": "",
                                        "value": "128"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "3419:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3419:19:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_bool",
                                  "nodeType": "YulIdentifier",
                                  "src": "3403:15:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3403:36:2"
                              },
                              "variableNames": [
                                {
                                  "name": "value4",
                                  "nodeType": "YulIdentifier",
                                  "src": "3393:6:2"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_uint8t_uint8t_boolt_uint32t_bool",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "3044:9:2",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "3055:7:2",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "3067:6:2",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "3075:6:2",
                            "type": ""
                          },
                          {
                            "name": "value2",
                            "nodeType": "YulTypedName",
                            "src": "3083:6:2",
                            "type": ""
                          },
                          {
                            "name": "value3",
                            "nodeType": "YulTypedName",
                            "src": "3091:6:2",
                            "type": ""
                          },
                          {
                            "name": "value4",
                            "nodeType": "YulTypedName",
                            "src": "3099:6:2",
                            "type": ""
                          }
                        ],
                        "src": "2983:462:2"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "3562:279:2",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "3609:16:2",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "3618:1:2",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "3621:1:2",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "3611:6:2"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "3611:12:2"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "3611:12:2"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "3583:7:2"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "3592:9:2"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "3579:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3579:23:2"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3604:3:2",
                                    "type": "",
                                    "value": "128"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "3575:3:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3575:33:2"
                              },
                              "nodeType": "YulIf",
                              "src": "3572:53:2"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "3634:37:2",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "3661:9:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_uint8",
                                  "nodeType": "YulIdentifier",
                                  "src": "3644:16:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3644:27:2"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "3634:6:2"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "3680:46:2",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "3711:9:2"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3722:2:2",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "3707:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3707:18:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_uint8",
                                  "nodeType": "YulIdentifier",
                                  "src": "3690:16:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3690:36:2"
                              },
                              "variableNames": [
                                {
                                  "name": "value1",
                                  "nodeType": "YulIdentifier",
                                  "src": "3680:6:2"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "3735:45:2",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "3765:9:2"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3776:2:2",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "3761:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3761:18:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_bool",
                                  "nodeType": "YulIdentifier",
                                  "src": "3745:15:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3745:35:2"
                              },
                              "variableNames": [
                                {
                                  "name": "value2",
                                  "nodeType": "YulIdentifier",
                                  "src": "3735:6:2"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "3789:46:2",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "3820:9:2"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3831:2:2",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "3816:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3816:18:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_uint8",
                                  "nodeType": "YulIdentifier",
                                  "src": "3799:16:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3799:36:2"
                              },
                              "variableNames": [
                                {
                                  "name": "value3",
                                  "nodeType": "YulIdentifier",
                                  "src": "3789:6:2"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_uint8t_uint8t_boolt_uint8",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "3504:9:2",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "3515:7:2",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "3527:6:2",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "3535:6:2",
                            "type": ""
                          },
                          {
                            "name": "value2",
                            "nodeType": "YulTypedName",
                            "src": "3543:6:2",
                            "type": ""
                          },
                          {
                            "name": "value3",
                            "nodeType": "YulTypedName",
                            "src": "3551:6:2",
                            "type": ""
                          }
                        ],
                        "src": "3450:391:2"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "3895:135:2",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "3905:26:2",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "3925:5:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "3919:5:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3919:12:2"
                              },
                              "variables": [
                                {
                                  "name": "length",
                                  "nodeType": "YulTypedName",
                                  "src": "3909:6:2",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "3966:5:2"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3973:4:2",
                                        "type": "",
                                        "value": "0x20"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "3962:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3962:16:2"
                                  },
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "3980:3:2"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "3985:6:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "copy_memory_to_memory",
                                  "nodeType": "YulIdentifier",
                                  "src": "3940:21:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3940:52:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3940:52:2"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "4001:23:2",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "4012:3:2"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "4017:6:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "4008:3:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4008:16:2"
                              },
                              "variableNames": [
                                {
                                  "name": "end",
                                  "nodeType": "YulIdentifier",
                                  "src": "4001:3:2"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_bytes",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "3872:5:2",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "3879:3:2",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "3887:3:2",
                            "type": ""
                          }
                        ],
                        "src": "3846:184:2"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "4090:73:2",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "4107:3:2"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "4116:3:2",
                                        "type": "",
                                        "value": "232"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "4121:7:2",
                                        "type": "",
                                        "value": "2260317"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "4112:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4112:17:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "4100:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4100:30:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "4100:30:2"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "4139:18:2",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "4150:3:2"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4155:1:2",
                                    "type": "",
                                    "value": "3"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "4146:3:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4146:11:2"
                              },
                              "variableNames": [
                                {
                                  "name": "end",
                                  "nodeType": "YulIdentifier",
                                  "src": "4139:3:2"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_stringliteral_55d1",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "4074:3:2",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "4082:3:2",
                            "type": ""
                          }
                        ],
                        "src": "4035:128:2"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "4223:176:2",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "4240:3:2"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4245:66:2",
                                    "type": "",
                                    "value": "0x227d2c7b2274726169745f74797065223a2022416374697665222c202276616c"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "4233:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4233:79:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "4233:79:2"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "pos",
                                        "nodeType": "YulIdentifier",
                                        "src": "4332:3:2"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "4337:2:2",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "4328:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4328:12:2"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "4346:3:2",
                                        "type": "",
                                        "value": "217"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "4351:12:2",
                                        "type": "",
                                        "value": "0x3ab2911d11"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "4342:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4342:22:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "4321:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4321:44:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "4321:44:2"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "4374:19:2",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "4385:3:2"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4390:2:2",
                                    "type": "",
                                    "value": "37"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "4381:3:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4381:12:2"
                              },
                              "variableNames": [
                                {
                                  "name": "end",
                                  "nodeType": "YulIdentifier",
                                  "src": "4374:3:2"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_stringliteral_af5e",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "4207:3:2",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "4215:3:2",
                            "type": ""
                          }
                        ],
                        "src": "4168:231:2"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "4541:137:2",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "4551:27:2",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "4571:6:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "4565:5:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4565:13:2"
                              },
                              "variables": [
                                {
                                  "name": "length",
                                  "nodeType": "YulTypedName",
                                  "src": "4555:6:2",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value0",
                                        "nodeType": "YulIdentifier",
                                        "src": "4613:6:2"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "4621:4:2",
                                        "type": "",
                                        "value": "0x20"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "4609:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4609:17:2"
                                  },
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "4628:3:2"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "4633:6:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "copy_memory_to_memory",
                                  "nodeType": "YulIdentifier",
                                  "src": "4587:21:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4587:53:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "4587:53:2"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "4649:23:2",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "4660:3:2"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "4665:6:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "4656:3:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4656:16:2"
                              },
                              "variableNames": [
                                {
                                  "name": "end",
                                  "nodeType": "YulIdentifier",
                                  "src": "4649:3:2"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "4517:3:2",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "4522:6:2",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "4533:3:2",
                            "type": ""
                          }
                        ],
                        "src": "4404:274:2"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "4822:137:2",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "4832:27:2",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "4852:6:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "4846:5:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4846:13:2"
                              },
                              "variables": [
                                {
                                  "name": "length",
                                  "nodeType": "YulTypedName",
                                  "src": "4836:6:2",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value0",
                                        "nodeType": "YulIdentifier",
                                        "src": "4894:6:2"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "4902:4:2",
                                        "type": "",
                                        "value": "0x20"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "4890:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4890:17:2"
                                  },
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "4909:3:2"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "4914:6:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "copy_memory_to_memory",
                                  "nodeType": "YulIdentifier",
                                  "src": "4868:21:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4868:53:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "4868:53:2"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "4930:23:2",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "4941:3:2"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "4946:6:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "4937:3:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4937:16:2"
                              },
                              "variableNames": [
                                {
                                  "name": "end",
                                  "nodeType": "YulIdentifier",
                                  "src": "4930:3:2"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "4798:3:2",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "4803:6:2",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "4814:3:2",
                            "type": ""
                          }
                        ],
                        "src": "4683:276:2"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "5295:721:2",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "5305:27:2",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "5325:6:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "5319:5:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5319:13:2"
                              },
                              "variables": [
                                {
                                  "name": "length",
                                  "nodeType": "YulTypedName",
                                  "src": "5309:6:2",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value0",
                                        "nodeType": "YulIdentifier",
                                        "src": "5367:6:2"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "5375:4:2",
                                        "type": "",
                                        "value": "0x20"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "5363:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5363:17:2"
                                  },
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "5382:3:2"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "5387:6:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "copy_memory_to_memory",
                                  "nodeType": "YulIdentifier",
                                  "src": "5341:21:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5341:53:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "5341:53:2"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "5403:29:2",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "5420:3:2"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "5425:6:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "5416:3:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5416:16:2"
                              },
                              "variables": [
                                {
                                  "name": "end_1",
                                  "nodeType": "YulTypedName",
                                  "src": "5407:5:2",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "5441:29:2",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value1",
                                    "nodeType": "YulIdentifier",
                                    "src": "5463:6:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "5457:5:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5457:13:2"
                              },
                              "variables": [
                                {
                                  "name": "length_1",
                                  "nodeType": "YulTypedName",
                                  "src": "5445:8:2",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value1",
                                        "nodeType": "YulIdentifier",
                                        "src": "5505:6:2"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "5513:4:2",
                                        "type": "",
                                        "value": "0x20"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "5501:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5501:17:2"
                                  },
                                  {
                                    "name": "end_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "5520:5:2"
                                  },
                                  {
                                    "name": "length_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "5527:8:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "copy_memory_to_memory",
                                  "nodeType": "YulIdentifier",
                                  "src": "5479:21:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5479:57:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "5479:57:2"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "5545:33:2",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "end_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "5562:5:2"
                                  },
                                  {
                                    "name": "length_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "5569:8:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "5558:3:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5558:20:2"
                              },
                              "variables": [
                                {
                                  "name": "end_2",
                                  "nodeType": "YulTypedName",
                                  "src": "5549:5:2",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "5587:29:2",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value2",
                                    "nodeType": "YulIdentifier",
                                    "src": "5609:6:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "5603:5:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5603:13:2"
                              },
                              "variables": [
                                {
                                  "name": "length_2",
                                  "nodeType": "YulTypedName",
                                  "src": "5591:8:2",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value2",
                                        "nodeType": "YulIdentifier",
                                        "src": "5651:6:2"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "5659:4:2",
                                        "type": "",
                                        "value": "0x20"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "5647:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5647:17:2"
                                  },
                                  {
                                    "name": "end_2",
                                    "nodeType": "YulIdentifier",
                                    "src": "5666:5:2"
                                  },
                                  {
                                    "name": "length_2",
                                    "nodeType": "YulIdentifier",
                                    "src": "5673:8:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "copy_memory_to_memory",
                                  "nodeType": "YulIdentifier",
                                  "src": "5625:21:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5625:57:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "5625:57:2"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "5691:33:2",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "end_2",
                                    "nodeType": "YulIdentifier",
                                    "src": "5708:5:2"
                                  },
                                  {
                                    "name": "length_2",
                                    "nodeType": "YulIdentifier",
                                    "src": "5715:8:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "5704:3:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5704:20:2"
                              },
                              "variables": [
                                {
                                  "name": "end_3",
                                  "nodeType": "YulTypedName",
                                  "src": "5695:5:2",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "5733:29:2",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value3",
                                    "nodeType": "YulIdentifier",
                                    "src": "5755:6:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "5749:5:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5749:13:2"
                              },
                              "variables": [
                                {
                                  "name": "length_3",
                                  "nodeType": "YulTypedName",
                                  "src": "5737:8:2",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value3",
                                        "nodeType": "YulIdentifier",
                                        "src": "5797:6:2"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "5805:4:2",
                                        "type": "",
                                        "value": "0x20"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "5793:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5793:17:2"
                                  },
                                  {
                                    "name": "end_3",
                                    "nodeType": "YulIdentifier",
                                    "src": "5812:5:2"
                                  },
                                  {
                                    "name": "length_3",
                                    "nodeType": "YulIdentifier",
                                    "src": "5819:8:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "copy_memory_to_memory",
                                  "nodeType": "YulIdentifier",
                                  "src": "5771:21:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5771:57:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "5771:57:2"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "5837:33:2",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "end_3",
                                    "nodeType": "YulIdentifier",
                                    "src": "5854:5:2"
                                  },
                                  {
                                    "name": "length_3",
                                    "nodeType": "YulIdentifier",
                                    "src": "5861:8:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "5850:3:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5850:20:2"
                              },
                              "variables": [
                                {
                                  "name": "end_4",
                                  "nodeType": "YulTypedName",
                                  "src": "5841:5:2",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "5879:29:2",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value4",
                                    "nodeType": "YulIdentifier",
                                    "src": "5901:6:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "5895:5:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5895:13:2"
                              },
                              "variables": [
                                {
                                  "name": "length_4",
                                  "nodeType": "YulTypedName",
                                  "src": "5883:8:2",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value4",
                                        "nodeType": "YulIdentifier",
                                        "src": "5943:6:2"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "5951:4:2",
                                        "type": "",
                                        "value": "0x20"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "5939:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5939:17:2"
                                  },
                                  {
                                    "name": "end_4",
                                    "nodeType": "YulIdentifier",
                                    "src": "5958:5:2"
                                  },
                                  {
                                    "name": "length_4",
                                    "nodeType": "YulIdentifier",
                                    "src": "5965:8:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "copy_memory_to_memory",
                                  "nodeType": "YulIdentifier",
                                  "src": "5917:21:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5917:57:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "5917:57:2"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "5983:27:2",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "end_4",
                                    "nodeType": "YulIdentifier",
                                    "src": "5994:5:2"
                                  },
                                  {
                                    "name": "length_4",
                                    "nodeType": "YulIdentifier",
                                    "src": "6001:8:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "5990:3:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5990:20:2"
                              },
                              "variableNames": [
                                {
                                  "name": "end",
                                  "nodeType": "YulIdentifier",
                                  "src": "5983:3:2"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "5239:3:2",
                            "type": ""
                          },
                          {
                            "name": "value4",
                            "nodeType": "YulTypedName",
                            "src": "5244:6:2",
                            "type": ""
                          },
                          {
                            "name": "value3",
                            "nodeType": "YulTypedName",
                            "src": "5252:6:2",
                            "type": ""
                          },
                          {
                            "name": "value2",
                            "nodeType": "YulTypedName",
                            "src": "5260:6:2",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "5268:6:2",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "5276:6:2",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "5287:3:2",
                            "type": ""
                          }
                        ],
                        "src": "4964:1052:2"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "6362:602:2",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "6379:3:2"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6384:66:2",
                                    "type": "",
                                    "value": "0x3c696d6167652077696474683d22363022206865696768743d2236302220696d"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "6372:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6372:79:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "6372:79:2"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "pos",
                                        "nodeType": "YulIdentifier",
                                        "src": "6471:3:2"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "6476:2:2",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "6467:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6467:12:2"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6481:66:2",
                                    "type": "",
                                    "value": "0x6167652d72656e646572696e673d22706978656c617465642220707265736572"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "6460:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6460:88:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "6460:88:2"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "pos",
                                        "nodeType": "YulIdentifier",
                                        "src": "6568:3:2"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "6573:2:2",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "6564:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6564:12:2"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6578:66:2",
                                    "type": "",
                                    "value": "0x7665417370656374526174696f3d22784d6964594d69642220786c696e6b3a68"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "6557:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6557:88:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "6557:88:2"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "pos",
                                        "nodeType": "YulIdentifier",
                                        "src": "6665:3:2"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "6670:2:2",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "6661:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6661:12:2"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "6679:2:2",
                                        "type": "",
                                        "value": "42"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "6683:56:2",
                                        "type": "",
                                        "value": "0x1c99598f4899185d184e9a5b5859d94bdc1b99ced8985cd94d8d0b"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "6675:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6675:65:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "6654:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6654:87:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "6654:87:2"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "6750:27:2",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "6770:6:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "6764:5:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6764:13:2"
                              },
                              "variables": [
                                {
                                  "name": "length",
                                  "nodeType": "YulTypedName",
                                  "src": "6754:6:2",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value0",
                                        "nodeType": "YulIdentifier",
                                        "src": "6812:6:2"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "6820:2:2",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "6808:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6808:15:2"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "pos",
                                        "nodeType": "YulIdentifier",
                                        "src": "6829:3:2"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "6834:3:2",
                                        "type": "",
                                        "value": "123"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "6825:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6825:13:2"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "6840:6:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "copy_memory_to_memory",
                                  "nodeType": "YulIdentifier",
                                  "src": "6786:21:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6786:61:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "6786:61:2"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "6856:26:2",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "6870:3:2"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "6875:6:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "6866:3:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6866:16:2"
                              },
                              "variables": [
                                {
                                  "name": "_1",
                                  "nodeType": "YulTypedName",
                                  "src": "6860:2:2",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "_1",
                                        "nodeType": "YulIdentifier",
                                        "src": "6902:2:2"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "6906:3:2",
                                        "type": "",
                                        "value": "123"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "6898:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6898:12:2"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "6916:3:2",
                                        "type": "",
                                        "value": "233"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "6921:7:2",
                                        "type": "",
                                        "value": "1120159"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "6912:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6912:17:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "6891:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6891:39:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "6891:39:2"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "6939:19:2",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "6950:2:2"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6954:3:2",
                                    "type": "",
                                    "value": "126"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "6946:3:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6946:12:2"
                              },
                              "variableNames": [
                                {
                                  "name": "end",
                                  "nodeType": "YulIdentifier",
                                  "src": "6939:3:2"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_packed_t_stringliteral_4e093557a78e66025a98d44b7ad003037537f50a2dc2063dd80e48e84615f893_t_string_memory_ptr_t_stringliteral_b26240e716d0906f15dfc172fadbe2347b20c889873f9bdb04fd7ee803f7f175__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "6338:3:2",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "6343:6:2",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "6354:3:2",
                            "type": ""
                          }
                        ],
                        "src": "6021:943:2"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "7310:359:2",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "7327:3:2"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7332:66:2",
                                    "type": "",
                                    "value": "0x7b2274726169745f74797065223a2248616e642054797065222c202276616c75"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "7320:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7320:79:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "7320:79:2"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "pos",
                                        "nodeType": "YulIdentifier",
                                        "src": "7419:3:2"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "7424:2:2",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "7415:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "7415:12:2"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "7433:3:2",
                                        "type": "",
                                        "value": "217"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "7438:12:2",
                                        "type": "",
                                        "value": "0x32911d1011"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "7429:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "7429:22:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "7408:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7408:44:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "7408:44:2"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "7461:27:2",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "7481:6:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "7475:5:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7475:13:2"
                              },
                              "variables": [
                                {
                                  "name": "length",
                                  "nodeType": "YulTypedName",
                                  "src": "7465:6:2",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value0",
                                        "nodeType": "YulIdentifier",
                                        "src": "7523:6:2"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "7531:2:2",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "7519:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "7519:15:2"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "pos",
                                        "nodeType": "YulIdentifier",
                                        "src": "7540:3:2"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "7545:2:2",
                                        "type": "",
                                        "value": "37"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "7536:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "7536:12:2"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "7550:6:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "copy_memory_to_memory",
                                  "nodeType": "YulIdentifier",
                                  "src": "7497:21:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7497:60:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "7497:60:2"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "7566:26:2",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "7580:3:2"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "7585:6:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "7576:3:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7576:16:2"
                              },
                              "variables": [
                                {
                                  "name": "_1",
                                  "nodeType": "YulTypedName",
                                  "src": "7570:2:2",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "_1",
                                        "nodeType": "YulIdentifier",
                                        "src": "7612:2:2"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "7616:2:2",
                                        "type": "",
                                        "value": "37"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "7608:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "7608:11:2"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "7625:3:2",
                                        "type": "",
                                        "value": "240"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "7630:4:2",
                                        "type": "",
                                        "value": "8829"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "7621:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "7621:14:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "7601:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7601:35:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "7601:35:2"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "7645:18:2",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "7656:2:2"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7660:2:2",
                                    "type": "",
                                    "value": "39"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "7652:3:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7652:11:2"
                              },
                              "variableNames": [
                                {
                                  "name": "end",
                                  "nodeType": "YulIdentifier",
                                  "src": "7645:3:2"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_packed_t_stringliteral_4fe68489c9c59542e448c09c7cb19a25565db1d56926ad418d32ec5d60a94a00_t_string_memory_ptr_t_stringliteral_835b459273672627bbafc3a2eded65187a632f4128bdc79e126c7ef579a27475__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "7286:3:2",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "7291:6:2",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "7302:3:2",
                            "type": ""
                          }
                        ],
                        "src": "6969:700:2"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "8313:846:2",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "8330:3:2"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "8339:3:2",
                                        "type": "",
                                        "value": "120"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "8344:36:2",
                                        "type": "",
                                        "value": "0x7b226e616d65223a2022546f6b656e2023"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "8335:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "8335:46:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "8323:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8323:59:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "8323:59:2"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "8391:27:2",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "8411:6:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "8405:5:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8405:13:2"
                              },
                              "variables": [
                                {
                                  "name": "length",
                                  "nodeType": "YulTypedName",
                                  "src": "8395:6:2",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value0",
                                        "nodeType": "YulIdentifier",
                                        "src": "8453:6:2"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "8461:4:2",
                                        "type": "",
                                        "value": "0x20"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "8449:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "8449:17:2"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "pos",
                                        "nodeType": "YulIdentifier",
                                        "src": "8472:3:2"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "8477:2:2",
                                        "type": "",
                                        "value": "17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "8468:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "8468:12:2"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "8482:6:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "copy_memory_to_memory",
                                  "nodeType": "YulIdentifier",
                                  "src": "8427:21:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8427:62:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "8427:62:2"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "8498:26:2",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "8512:3:2"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "8517:6:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "8508:3:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8508:16:2"
                              },
                              "variables": [
                                {
                                  "name": "_1",
                                  "nodeType": "YulTypedName",
                                  "src": "8502:2:2",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "_1",
                                        "nodeType": "YulIdentifier",
                                        "src": "8544:2:2"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "8548:2:2",
                                        "type": "",
                                        "value": "17"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "8540:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "8540:11:2"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "8553:66:2",
                                    "type": "",
                                    "value": "0x222c20226465736372697074696f6e223a2022412073696d706c6520546f6b65"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "8533:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8533:87:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "8533:87:2"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "_1",
                                        "nodeType": "YulIdentifier",
                                        "src": "8640:2:2"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "8644:2:2",
                                        "type": "",
                                        "value": "49"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "8636:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "8636:11:2"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "8649:66:2",
                                    "type": "",
                                    "value": "0x6e222c2022696d616765223a2022646174613a696d6167652f7376672b786d6c"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "8629:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8629:87:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "8629:87:2"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "_1",
                                        "nodeType": "YulIdentifier",
                                        "src": "8736:2:2"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "8740:2:2",
                                        "type": "",
                                        "value": "81"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "8732:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "8732:11:2"
                                  },
                                  {
                                    "hexValue": "3b6261736536342c",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "8745:10:2",
                                    "type": "",
                                    "value": ";base64,"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "8725:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8725:31:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "8725:31:2"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "8765:29:2",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value1",
                                    "nodeType": "YulIdentifier",
                                    "src": "8787:6:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "8781:5:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8781:13:2"
                              },
                              "variables": [
                                {
                                  "name": "length_1",
                                  "nodeType": "YulTypedName",
                                  "src": "8769:8:2",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value1",
                                        "nodeType": "YulIdentifier",
                                        "src": "8829:6:2"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "8837:4:2",
                                        "type": "",
                                        "value": "0x20"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "8825:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "8825:17:2"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "_1",
                                        "nodeType": "YulIdentifier",
                                        "src": "8848:2:2"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "8852:2:2",
                                        "type": "",
                                        "value": "89"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "8844:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "8844:11:2"
                                  },
                                  {
                                    "name": "length_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "8857:8:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "copy_memory_to_memory",
                                  "nodeType": "YulIdentifier",
                                  "src": "8803:21:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8803:63:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "8803:63:2"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "8875:27:2",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "8889:2:2"
                                  },
                                  {
                                    "name": "length_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "8893:8:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "8885:3:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8885:17:2"
                              },
                              "variables": [
                                {
                                  "name": "_2",
                                  "nodeType": "YulTypedName",
                                  "src": "8879:2:2",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "_2",
                                        "nodeType": "YulIdentifier",
                                        "src": "8922:2:2"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "8926:2:2",
                                        "type": "",
                                        "value": "89"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "8918:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "8918:11:2"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "8935:3:2",
                                        "type": "",
                                        "value": "237"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "8940:5:2",
                                        "type": "",
                                        "value": "69985"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "8931:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "8931:15:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "8911:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8911:36:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "8911:36:2"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "8956:29:2",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value2",
                                    "nodeType": "YulIdentifier",
                                    "src": "8978:6:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "8972:5:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8972:13:2"
                              },
                              "variables": [
                                {
                                  "name": "length_2",
                                  "nodeType": "YulTypedName",
                                  "src": "8960:8:2",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value2",
                                        "nodeType": "YulIdentifier",
                                        "src": "9020:6:2"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "9028:4:2",
                                        "type": "",
                                        "value": "0x20"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "9016:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "9016:17:2"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "_2",
                                        "nodeType": "YulIdentifier",
                                        "src": "9039:2:2"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "9043:2:2",
                                        "type": "",
                                        "value": "92"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "9035:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "9035:11:2"
                                  },
                                  {
                                    "name": "length_2",
                                    "nodeType": "YulIdentifier",
                                    "src": "9048:8:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "copy_memory_to_memory",
                                  "nodeType": "YulIdentifier",
                                  "src": "8994:21:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8994:63:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "8994:63:2"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "9066:27:2",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "_2",
                                    "nodeType": "YulIdentifier",
                                    "src": "9080:2:2"
                                  },
                                  {
                                    "name": "length_2",
                                    "nodeType": "YulIdentifier",
                                    "src": "9084:8:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "9076:3:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9076:17:2"
                              },
                              "variables": [
                                {
                                  "name": "_3",
                                  "nodeType": "YulTypedName",
                                  "src": "9070:2:2",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "_3",
                                        "nodeType": "YulIdentifier",
                                        "src": "9113:2:2"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "9117:2:2",
                                        "type": "",
                                        "value": "92"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "9109:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "9109:11:2"
                                  },
                                  {
                                    "hexValue": "7d",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "9122:3:2",
                                    "type": "",
                                    "value": "}"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "9102:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9102:24:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "9102:24:2"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "9135:18:2",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "_3",
                                    "nodeType": "YulIdentifier",
                                    "src": "9146:2:2"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "9150:2:2",
                                    "type": "",
                                    "value": "93"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "9142:3:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9142:11:2"
                              },
                              "variableNames": [
                                {
                                  "name": "end",
                                  "nodeType": "YulIdentifier",
                                  "src": "9135:3:2"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_packed_t_stringliteral_59f4548e9770730d5f9b79d3485266abe95856eb8b22f4d5d7dc65d7d7b412d6_t_string_memory_ptr_t_stringliteral_1b282456f8601862e95af181204e9d3f663b67381ffb5ef69256c5794fe4214d_t_string_memory_ptr_t_stringliteral_d31db5fa4cccdf0b2a7c8fa1b54fac1497461aa344c190614087e30f1494e3a3_t_string_memory_ptr_t_stringliteral_8e2ffa389f3a6ded42d759b3377ac0d928e6a268d143bcc9517093d10c843bff__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "8273:3:2",
                            "type": ""
                          },
                          {
                            "name": "value2",
                            "nodeType": "YulTypedName",
                            "src": "8278:6:2",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "8286:6:2",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "8294:6:2",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "8305:3:2",
                            "type": ""
                          }
                        ],
                        "src": "7674:1485:2"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "10101:1060:2",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "10118:3:2"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "10127:3:2",
                                        "type": "",
                                        "value": "136"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "10132:32:2",
                                        "type": "",
                                        "value": "0x2261747472696275746573223a205b"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "10123:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "10123:42:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "10111:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10111:55:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "10111:55:2"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "10175:27:2",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "10195:6:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "10189:5:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10189:13:2"
                              },
                              "variables": [
                                {
                                  "name": "length",
                                  "nodeType": "YulTypedName",
                                  "src": "10179:6:2",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value0",
                                        "nodeType": "YulIdentifier",
                                        "src": "10237:6:2"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "10245:4:2",
                                        "type": "",
                                        "value": "0x20"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "10233:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "10233:17:2"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "pos",
                                        "nodeType": "YulIdentifier",
                                        "src": "10256:3:2"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "10261:2:2",
                                        "type": "",
                                        "value": "15"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "10252:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "10252:12:2"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "10266:6:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "copy_memory_to_memory",
                                  "nodeType": "YulIdentifier",
                                  "src": "10211:21:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10211:62:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "10211:62:2"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "10282:26:2",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "10296:3:2"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "10301:6:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "10292:3:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10292:16:2"
                              },
                              "variables": [
                                {
                                  "name": "_1",
                                  "nodeType": "YulTypedName",
                                  "src": "10286:2:2",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "_1",
                                        "nodeType": "YulIdentifier",
                                        "src": "10328:2:2"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "10332:2:2",
                                        "type": "",
                                        "value": "15"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "10324:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "10324:11:2"
                                  },
                                  {
                                    "hexValue": "2c",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "10337:3:2",
                                    "type": "",
                                    "value": ","
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "10317:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10317:24:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "10317:24:2"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "10350:29:2",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value1",
                                    "nodeType": "YulIdentifier",
                                    "src": "10372:6:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "10366:5:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10366:13:2"
                              },
                              "variables": [
                                {
                                  "name": "length_1",
                                  "nodeType": "YulTypedName",
                                  "src": "10354:8:2",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value1",
                                        "nodeType": "YulIdentifier",
                                        "src": "10414:6:2"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "10422:4:2",
                                        "type": "",
                                        "value": "0x20"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "10410:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "10410:17:2"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "_1",
                                        "nodeType": "YulIdentifier",
                                        "src": "10433:2:2"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "10437:2:2",
                                        "type": "",
                                        "value": "16"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "10429:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "10429:11:2"
                                  },
                                  {
                                    "name": "length_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "10442:8:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "copy_memory_to_memory",
                                  "nodeType": "YulIdentifier",
                                  "src": "10388:21:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10388:63:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "10388:63:2"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "10460:27:2",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "10474:2:2"
                                  },
                                  {
                                    "name": "length_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "10478:8:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "10470:3:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10470:17:2"
                              },
                              "variables": [
                                {
                                  "name": "_2",
                                  "nodeType": "YulTypedName",
                                  "src": "10464:2:2",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "_2",
                                        "nodeType": "YulIdentifier",
                                        "src": "10507:2:2"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "10511:2:2",
                                        "type": "",
                                        "value": "16"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "10503:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "10503:11:2"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "10516:66:2",
                                    "type": "",
                                    "value": "0x2c7b2274726169745f74797065223a2022506f7461746f222c202276616c7565"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "10496:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10496:87:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "10496:87:2"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "_2",
                                        "nodeType": "YulIdentifier",
                                        "src": "10603:2:2"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "10607:2:2",
                                        "type": "",
                                        "value": "48"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "10599:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "10599:11:2"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "10616:3:2",
                                        "type": "",
                                        "value": "233"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "10621:7:2",
                                        "type": "",
                                        "value": "1121553"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "10612:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "10612:17:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "10592:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10592:38:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "10592:38:2"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "10639:29:2",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value2",
                                    "nodeType": "YulIdentifier",
                                    "src": "10661:6:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "10655:5:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10655:13:2"
                              },
                              "variables": [
                                {
                                  "name": "length_2",
                                  "nodeType": "YulTypedName",
                                  "src": "10643:8:2",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value2",
                                        "nodeType": "YulIdentifier",
                                        "src": "10703:6:2"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "10711:4:2",
                                        "type": "",
                                        "value": "0x20"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "10699:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "10699:17:2"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "_2",
                                        "nodeType": "YulIdentifier",
                                        "src": "10722:2:2"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "10726:2:2",
                                        "type": "",
                                        "value": "51"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "10718:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "10718:11:2"
                                  },
                                  {
                                    "name": "length_2",
                                    "nodeType": "YulIdentifier",
                                    "src": "10731:8:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "copy_memory_to_memory",
                                  "nodeType": "YulIdentifier",
                                  "src": "10677:21:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10677:63:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "10677:63:2"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "10749:27:2",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "_2",
                                    "nodeType": "YulIdentifier",
                                    "src": "10763:2:2"
                                  },
                                  {
                                    "name": "length_2",
                                    "nodeType": "YulIdentifier",
                                    "src": "10767:8:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "10759:3:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10759:17:2"
                              },
                              "variables": [
                                {
                                  "name": "_3",
                                  "nodeType": "YulTypedName",
                                  "src": "10753:2:2",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "_3",
                                        "nodeType": "YulIdentifier",
                                        "src": "10796:2:2"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "10800:2:2",
                                        "type": "",
                                        "value": "51"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "10792:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "10792:11:2"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "10805:66:2",
                                    "type": "",
                                    "value": "0x227d2c7b22646973706c61795f74797065223a20226e756d626572222c227472"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "10785:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10785:87:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "10785:87:2"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "_3",
                                        "nodeType": "YulIdentifier",
                                        "src": "10892:2:2"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "10896:2:2",
                                        "type": "",
                                        "value": "83"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "10888:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "10888:11:2"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "10901:66:2",
                                    "type": "",
                                    "value": "0x6169745f74797065223a202247656e65726174696f6e222c202276616c756522"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "10881:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10881:87:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "10881:87:2"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "_3",
                                        "nodeType": "YulIdentifier",
                                        "src": "10988:2:2"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "10992:3:2",
                                        "type": "",
                                        "value": "115"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "10984:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "10984:12:2"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "11002:3:2",
                                        "type": "",
                                        "value": "241"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "11007:4:2",
                                        "type": "",
                                        "value": "7441"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "10998:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "10998:14:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "10977:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10977:36:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "10977:36:2"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "11022:133:2",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value4",
                                        "nodeType": "YulIdentifier",
                                        "src": "11076:6:2"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "name": "value3",
                                                "nodeType": "YulIdentifier",
                                                "src": "11131:6:2"
                                              },
                                              {
                                                "arguments": [
                                                  {
                                                    "name": "_3",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "11143:2:2"
                                                  },
                                                  {
                                                    "kind": "number",
                                                    "nodeType": "YulLiteral",
                                                    "src": "11147:3:2",
                                                    "type": "",
                                                    "value": "117"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "add",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "11139:3:2"
                                                },
                                                "nodeType": "YulFunctionCall",
                                                "src": "11139:12:2"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "abi_encode_bytes",
                                              "nodeType": "YulIdentifier",
                                              "src": "11114:16:2"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "11114:38:2"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "abi_encode_stringliteral_af5e",
                                          "nodeType": "YulIdentifier",
                                          "src": "11084:29:2"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "11084:69:2"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_encode_bytes",
                                      "nodeType": "YulIdentifier",
                                      "src": "11059:16:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "11059:95:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_stringliteral_55d1",
                                  "nodeType": "YulIdentifier",
                                  "src": "11029:29:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11029:126:2"
                              },
                              "variableNames": [
                                {
                                  "name": "end",
                                  "nodeType": "YulIdentifier",
                                  "src": "11022:3:2"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_packed_t_stringliteral_a9d6c84473de3f3a866c16d436066b8d4df325a647d2d3a768ffba45df210f3c_t_string_memory_ptr_t_stringliteral_3e7a35b97029f9e0cf6effd71c1a7958822e9a217d3a3aec886668a7dd8231cb_t_string_memory_ptr_t_stringliteral_bc46964ee67a2cae6d0f729fb15b9a5d4cb3d4ebbff2daaa6354914b023a1353_t_string_memory_ptr_t_stringliteral_41fbd829e4af7b81ddb12bdc9c3cbf422a9f60ac7a161c934b4e5a8a19f8d094_t_string_memory_ptr_t_stringliteral_af5e4c39327d0e7b85c8cd1468bda17f7c9f1664111102bef75507362e009b62_t_string_memory_ptr_t_stringliteral_55d1e182806bfa9e2513939eb2ae6e56b092a4b2806e0521aaf1ff702ce46bf5__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "10045:3:2",
                            "type": ""
                          },
                          {
                            "name": "value4",
                            "nodeType": "YulTypedName",
                            "src": "10050:6:2",
                            "type": ""
                          },
                          {
                            "name": "value3",
                            "nodeType": "YulTypedName",
                            "src": "10058:6:2",
                            "type": ""
                          },
                          {
                            "name": "value2",
                            "nodeType": "YulTypedName",
                            "src": "10066:6:2",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "10074:6:2",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "10082:6:2",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "10093:3:2",
                            "type": ""
                          }
                        ],
                        "src": "9164:1997:2"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "11507:359:2",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "11524:3:2"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "11529:66:2",
                                    "type": "",
                                    "value": "0x7b2274726169745f74797065223a224261636b67726f756e64222c202276616c"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "11517:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11517:79:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "11517:79:2"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "pos",
                                        "nodeType": "YulIdentifier",
                                        "src": "11616:3:2"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "11621:2:2",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "11612:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "11612:12:2"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "11630:3:2",
                                        "type": "",
                                        "value": "217"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "11635:12:2",
                                        "type": "",
                                        "value": "0x3ab2911d11"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "11626:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "11626:22:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "11605:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11605:44:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "11605:44:2"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "11658:27:2",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "11678:6:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "11672:5:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11672:13:2"
                              },
                              "variables": [
                                {
                                  "name": "length",
                                  "nodeType": "YulTypedName",
                                  "src": "11662:6:2",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value0",
                                        "nodeType": "YulIdentifier",
                                        "src": "11720:6:2"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "11728:2:2",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "11716:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "11716:15:2"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "pos",
                                        "nodeType": "YulIdentifier",
                                        "src": "11737:3:2"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "11742:2:2",
                                        "type": "",
                                        "value": "37"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "11733:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "11733:12:2"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "11747:6:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "copy_memory_to_memory",
                                  "nodeType": "YulIdentifier",
                                  "src": "11694:21:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11694:60:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "11694:60:2"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "11763:26:2",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "11777:3:2"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "11782:6:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "11773:3:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11773:16:2"
                              },
                              "variables": [
                                {
                                  "name": "_1",
                                  "nodeType": "YulTypedName",
                                  "src": "11767:2:2",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "_1",
                                        "nodeType": "YulIdentifier",
                                        "src": "11809:2:2"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "11813:2:2",
                                        "type": "",
                                        "value": "37"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "11805:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "11805:11:2"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "11822:3:2",
                                        "type": "",
                                        "value": "240"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "11827:4:2",
                                        "type": "",
                                        "value": "8829"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "11818:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "11818:14:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "11798:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11798:35:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "11798:35:2"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "11842:18:2",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "11853:2:2"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "11857:2:2",
                                    "type": "",
                                    "value": "39"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "11849:3:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11849:11:2"
                              },
                              "variableNames": [
                                {
                                  "name": "end",
                                  "nodeType": "YulIdentifier",
                                  "src": "11842:3:2"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_packed_t_stringliteral_bac141df451ff89b6f77bbe970ff45a5da43dda5f9b9b17f412346e0390cf501_t_string_memory_ptr_t_stringliteral_835b459273672627bbafc3a2eded65187a632f4128bdc79e126c7ef579a27475__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "11483:3:2",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "11488:6:2",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "11499:3:2",
                            "type": ""
                          }
                        ],
                        "src": "11166:700:2"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "12111:208:2",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "12128:3:2"
                                  },
                                  {
                                    "hexValue": "646174613a6170706c69636174696f6e2f6a736f6e3b6261736536342c",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "12133:31:2",
                                    "type": "",
                                    "value": "data:application/json;base64,"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "12121:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12121:44:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "12121:44:2"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "12174:27:2",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "12194:6:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "12188:5:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12188:13:2"
                              },
                              "variables": [
                                {
                                  "name": "length",
                                  "nodeType": "YulTypedName",
                                  "src": "12178:6:2",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value0",
                                        "nodeType": "YulIdentifier",
                                        "src": "12236:6:2"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "12244:4:2",
                                        "type": "",
                                        "value": "0x20"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "12232:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "12232:17:2"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "pos",
                                        "nodeType": "YulIdentifier",
                                        "src": "12255:3:2"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "12260:2:2",
                                        "type": "",
                                        "value": "29"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "12251:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "12251:12:2"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "12265:6:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "copy_memory_to_memory",
                                  "nodeType": "YulIdentifier",
                                  "src": "12210:21:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12210:62:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "12210:62:2"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "12281:32:2",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "pos",
                                        "nodeType": "YulIdentifier",
                                        "src": "12296:3:2"
                                      },
                                      {
                                        "name": "length",
                                        "nodeType": "YulIdentifier",
                                        "src": "12301:6:2"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "12292:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "12292:16:2"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "12310:2:2",
                                    "type": "",
                                    "value": "29"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "12288:3:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12288:25:2"
                              },
                              "variableNames": [
                                {
                                  "name": "end",
                                  "nodeType": "YulIdentifier",
                                  "src": "12281:3:2"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_packed_t_stringliteral_bccab2d885f86fda81bfd84dd4248d31f8073b473d187111d36536db073076fa_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "12087:3:2",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "12092:6:2",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "12103:3:2",
                            "type": ""
                          }
                        ],
                        "src": "11871:448:2"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "12425:102:2",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "12435:26:2",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "12447:9:2"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "12458:2:2",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "12443:3:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12443:18:2"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "12435:4:2"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "12477:9:2"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value0",
                                        "nodeType": "YulIdentifier",
                                        "src": "12492:6:2"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "12508:3:2",
                                                "type": "",
                                                "value": "160"
                                              },
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "12513:1:2",
                                                "type": "",
                                                "value": "1"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "shl",
                                              "nodeType": "YulIdentifier",
                                              "src": "12504:3:2"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "12504:11:2"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "12517:1:2",
                                            "type": "",
                                            "value": "1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "sub",
                                          "nodeType": "YulIdentifier",
                                          "src": "12500:3:2"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "12500:19:2"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "12488:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "12488:32:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "12470:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12470:51:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "12470:51:2"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "12394:9:2",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "12405:6:2",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "12416:4:2",
                            "type": ""
                          }
                        ],
                        "src": "12324:203:2"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "12653:262:2",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "12670:9:2"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "12681:2:2",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "12663:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12663:21:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "12663:21:2"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "12693:27:2",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "12713:6:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "12707:5:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12707:13:2"
                              },
                              "variables": [
                                {
                                  "name": "length",
                                  "nodeType": "YulTypedName",
                                  "src": "12697:6:2",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "12740:9:2"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "12751:2:2",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "12736:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "12736:18:2"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "12756:6:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "12729:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12729:34:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "12729:34:2"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value0",
                                        "nodeType": "YulIdentifier",
                                        "src": "12798:6:2"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "12806:2:2",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "12794:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "12794:15:2"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "12815:9:2"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "12826:2:2",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "12811:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "12811:18:2"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "12831:6:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "copy_memory_to_memory",
                                  "nodeType": "YulIdentifier",
                                  "src": "12772:21:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12772:66:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "12772:66:2"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "12847:62:2",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "12863:9:2"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "name": "length",
                                                "nodeType": "YulIdentifier",
                                                "src": "12882:6:2"
                                              },
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "12890:2:2",
                                                "type": "",
                                                "value": "31"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "add",
                                              "nodeType": "YulIdentifier",
                                              "src": "12878:3:2"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "12878:15:2"
                                          },
                                          {
                                            "arguments": [
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "12899:2:2",
                                                "type": "",
                                                "value": "31"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "not",
                                              "nodeType": "YulIdentifier",
                                              "src": "12895:3:2"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "12895:7:2"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "and",
                                          "nodeType": "YulIdentifier",
                                          "src": "12874:3:2"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "12874:29:2"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "12859:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "12859:45:2"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "12906:2:2",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "12855:3:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12855:54:2"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "12847:4:2"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "12622:9:2",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "12633:6:2",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "12644:4:2",
                            "type": ""
                          }
                        ],
                        "src": "12532:383:2"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "13094:171:2",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "13111:9:2"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "13122:2:2",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "13104:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13104:21:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "13104:21:2"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "13145:9:2"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "13156:2:2",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "13141:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "13141:18:2"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "13161:2:2",
                                    "type": "",
                                    "value": "21"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "13134:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13134:30:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "13134:30:2"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "13184:9:2"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "13195:2:2",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "13180:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "13180:18:2"
                                  },
                                  {
                                    "hexValue": "496e76616c6964204261636b67726f756e64204964",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "13200:23:2",
                                    "type": "",
                                    "value": "Invalid Background Id"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "13173:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13173:51:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "13173:51:2"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "13233:26:2",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "13245:9:2"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "13256:2:2",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "13241:3:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13241:18:2"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "13233:4:2"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_05fa04d950d0eb1e8230c3564e55272c5585bfce9868906a080ed6432c9eff76__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "13071:9:2",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "13085:4:2",
                            "type": ""
                          }
                        ],
                        "src": "12920:345:2"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "13444:168:2",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "13461:9:2"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "13472:2:2",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "13454:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13454:21:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "13454:21:2"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "13495:9:2"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "13506:2:2",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "13491:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "13491:18:2"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "13511:2:2",
                                    "type": "",
                                    "value": "18"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "13484:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13484:30:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "13484:30:2"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "13534:9:2"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "13545:2:2",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "13530:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "13530:18:2"
                                  },
                                  {
                                    "hexValue": "6661696c656420746f206765742064617461",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "13550:20:2",
                                    "type": "",
                                    "value": "failed to get data"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "13523:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13523:48:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "13523:48:2"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "13580:26:2",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "13592:9:2"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "13603:2:2",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "13588:3:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13588:18:2"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "13580:4:2"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_88a57f4f3e712e2c61ce3233637c29aee4812a27dbd1d386e5dba84931d76764__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "13421:9:2",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "13435:4:2",
                            "type": ""
                          }
                        ],
                        "src": "13270:342:2"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "13791:165:2",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "13808:9:2"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "13819:2:2",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "13801:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13801:21:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "13801:21:2"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "13842:9:2"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "13853:2:2",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "13838:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "13838:18:2"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "13858:2:2",
                                    "type": "",
                                    "value": "15"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "13831:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13831:30:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "13831:30:2"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "13881:9:2"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "13892:2:2",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "13877:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "13877:18:2"
                                  },
                                  {
                                    "hexValue": "496e76616c69642048616e64204964",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "13897:17:2",
                                    "type": "",
                                    "value": "Invalid Hand Id"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "13870:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13870:45:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "13870:45:2"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "13924:26:2",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "13936:9:2"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "13947:2:2",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "13932:3:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13932:18:2"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "13924:4:2"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_b9152bce179ee840f091df595a871f540fd5ecc16b15a8e340a1bf1c96ad6520__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "13768:9:2",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "13782:4:2",
                            "type": ""
                          }
                        ],
                        "src": "13617:339:2"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "14135:162:2",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "14152:9:2"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "14163:2:2",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "14145:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14145:21:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "14145:21:2"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "14186:9:2"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "14197:2:2",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "14182:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "14182:18:2"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "14202:2:2",
                                    "type": "",
                                    "value": "12"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "14175:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14175:30:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "14175:30:2"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "14225:9:2"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "14236:2:2",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "14221:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "14221:18:2"
                                  },
                                  {
                                    "hexValue": "696e76616c69642070617274",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "14241:14:2",
                                    "type": "",
                                    "value": "invalid part"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "14214:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14214:42:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "14214:42:2"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "14265:26:2",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "14277:9:2"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "14288:2:2",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "14273:3:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14273:18:2"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "14265:4:2"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_c08d24782450105650bac1579f41a5bbfca5a1ee79af052c31863122951f0e7f__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "14112:9:2",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "14126:4:2",
                            "type": ""
                          }
                        ],
                        "src": "13961:336:2"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "14476:161:2",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "14493:9:2"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "14504:2:2",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "14486:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14486:21:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "14486:21:2"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "14527:9:2"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "14538:2:2",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "14523:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "14523:18:2"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "14543:2:2",
                                    "type": "",
                                    "value": "11"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "14516:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14516:30:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "14516:30:2"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "14566:9:2"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "14577:2:2",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "14562:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "14562:18:2"
                                  },
                                  {
                                    "hexValue": "6e6f74206d616e61676572",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "14582:13:2",
                                    "type": "",
                                    "value": "not manager"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "14555:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14555:41:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "14555:41:2"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "14605:26:2",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "14617:9:2"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "14628:2:2",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "14613:3:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14613:18:2"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "14605:4:2"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_ee7b04b266f275ae66a2fddcbfef24d4ec3a503d9843c534a382f12477498d38__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "14453:9:2",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "14467:4:2",
                            "type": ""
                          }
                        ],
                        "src": "14302:335:2"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "14690:80:2",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "14717:22:2",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x11",
                                        "nodeType": "YulIdentifier",
                                        "src": "14719:16:2"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "14719:18:2"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "14719:18:2"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "14706:1:2"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "y",
                                        "nodeType": "YulIdentifier",
                                        "src": "14713:1:2"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "not",
                                      "nodeType": "YulIdentifier",
                                      "src": "14709:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "14709:6:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "14703:2:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14703:13:2"
                              },
                              "nodeType": "YulIf",
                              "src": "14700:39:2"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "14748:16:2",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "14759:1:2"
                                  },
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "14762:1:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "14755:3:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14755:9:2"
                              },
                              "variableNames": [
                                {
                                  "name": "sum",
                                  "nodeType": "YulIdentifier",
                                  "src": "14748:3:2"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "checked_add_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "x",
                            "nodeType": "YulTypedName",
                            "src": "14673:1:2",
                            "type": ""
                          },
                          {
                            "name": "y",
                            "nodeType": "YulTypedName",
                            "src": "14676:1:2",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "sum",
                            "nodeType": "YulTypedName",
                            "src": "14682:3:2",
                            "type": ""
                          }
                        ],
                        "src": "14642:128:2"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "14821:74:2",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "14844:22:2",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x12",
                                        "nodeType": "YulIdentifier",
                                        "src": "14846:16:2"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "14846:18:2"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "14846:18:2"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "14841:1:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "14834:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14834:9:2"
                              },
                              "nodeType": "YulIf",
                              "src": "14831:35:2"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "14875:14:2",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "14884:1:2"
                                  },
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "14887:1:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "div",
                                  "nodeType": "YulIdentifier",
                                  "src": "14880:3:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14880:9:2"
                              },
                              "variableNames": [
                                {
                                  "name": "r",
                                  "nodeType": "YulIdentifier",
                                  "src": "14875:1:2"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "checked_div_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "x",
                            "nodeType": "YulTypedName",
                            "src": "14806:1:2",
                            "type": ""
                          },
                          {
                            "name": "y",
                            "nodeType": "YulTypedName",
                            "src": "14809:1:2",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "r",
                            "nodeType": "YulTypedName",
                            "src": "14815:1:2",
                            "type": ""
                          }
                        ],
                        "src": "14775:120:2"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "14952:116:2",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "15011:22:2",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x11",
                                        "nodeType": "YulIdentifier",
                                        "src": "15013:16:2"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "15013:18:2"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "15013:18:2"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "x",
                                            "nodeType": "YulIdentifier",
                                            "src": "14983:1:2"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "iszero",
                                          "nodeType": "YulIdentifier",
                                          "src": "14976:6:2"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "14976:9:2"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "iszero",
                                      "nodeType": "YulIdentifier",
                                      "src": "14969:6:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "14969:17:2"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "y",
                                        "nodeType": "YulIdentifier",
                                        "src": "14991:1:2"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "15002:1:2",
                                                "type": "",
                                                "value": "0"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "not",
                                              "nodeType": "YulIdentifier",
                                              "src": "14998:3:2"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "14998:6:2"
                                          },
                                          {
                                            "name": "x",
                                            "nodeType": "YulIdentifier",
                                            "src": "15006:1:2"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "div",
                                          "nodeType": "YulIdentifier",
                                          "src": "14994:3:2"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "14994:14:2"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "gt",
                                      "nodeType": "YulIdentifier",
                                      "src": "14988:2:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "14988:21:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "14965:3:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14965:45:2"
                              },
                              "nodeType": "YulIf",
                              "src": "14962:71:2"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "15042:20:2",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "15057:1:2"
                                  },
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "15060:1:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "mul",
                                  "nodeType": "YulIdentifier",
                                  "src": "15053:3:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "15053:9:2"
                              },
                              "variableNames": [
                                {
                                  "name": "product",
                                  "nodeType": "YulIdentifier",
                                  "src": "15042:7:2"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "checked_mul_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "x",
                            "nodeType": "YulTypedName",
                            "src": "14931:1:2",
                            "type": ""
                          },
                          {
                            "name": "y",
                            "nodeType": "YulTypedName",
                            "src": "14934:1:2",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "product",
                            "nodeType": "YulTypedName",
                            "src": "14940:7:2",
                            "type": ""
                          }
                        ],
                        "src": "14900:168:2"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "15122:76:2",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "15144:22:2",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x11",
                                        "nodeType": "YulIdentifier",
                                        "src": "15146:16:2"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "15146:18:2"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "15146:18:2"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "15138:1:2"
                                  },
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "15141:1:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "lt",
                                  "nodeType": "YulIdentifier",
                                  "src": "15135:2:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "15135:8:2"
                              },
                              "nodeType": "YulIf",
                              "src": "15132:34:2"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "15175:17:2",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "15187:1:2"
                                  },
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "15190:1:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "15183:3:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "15183:9:2"
                              },
                              "variableNames": [
                                {
                                  "name": "diff",
                                  "nodeType": "YulIdentifier",
                                  "src": "15175:4:2"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "checked_sub_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "x",
                            "nodeType": "YulTypedName",
                            "src": "15104:1:2",
                            "type": ""
                          },
                          {
                            "name": "y",
                            "nodeType": "YulTypedName",
                            "src": "15107:1:2",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "diff",
                            "nodeType": "YulTypedName",
                            "src": "15113:4:2",
                            "type": ""
                          }
                        ],
                        "src": "15073:125:2"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "15256:205:2",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "15266:10:2",
                              "value": {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "15275:1:2",
                                "type": "",
                                "value": "0"
                              },
                              "variables": [
                                {
                                  "name": "i",
                                  "nodeType": "YulTypedName",
                                  "src": "15270:1:2",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "15335:63:2",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "name": "dst",
                                              "nodeType": "YulIdentifier",
                                              "src": "15360:3:2"
                                            },
                                            {
                                              "name": "i",
                                              "nodeType": "YulIdentifier",
                                              "src": "15365:1:2"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "add",
                                            "nodeType": "YulIdentifier",
                                            "src": "15356:3:2"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "15356:11:2"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "arguments": [
                                                {
                                                  "name": "src",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "15379:3:2"
                                                },
                                                {
                                                  "name": "i",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "15384:1:2"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "add",
                                                "nodeType": "YulIdentifier",
                                                "src": "15375:3:2"
                                              },
                                              "nodeType": "YulFunctionCall",
                                              "src": "15375:11:2"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "mload",
                                            "nodeType": "YulIdentifier",
                                            "src": "15369:5:2"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "15369:18:2"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "15349:6:2"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "15349:39:2"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "15349:39:2"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "i",
                                    "nodeType": "YulIdentifier",
                                    "src": "15296:1:2"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "15299:6:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "lt",
                                  "nodeType": "YulIdentifier",
                                  "src": "15293:2:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "15293:13:2"
                              },
                              "nodeType": "YulForLoop",
                              "post": {
                                "nodeType": "YulBlock",
                                "src": "15307:19:2",
                                "statements": [
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "15309:15:2",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "i",
                                          "nodeType": "YulIdentifier",
                                          "src": "15318:1:2"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "15321:2:2",
                                          "type": "",
                                          "value": "32"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "15314:3:2"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "15314:10:2"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "i",
                                        "nodeType": "YulIdentifier",
                                        "src": "15309:1:2"
                                      }
                                    ]
                                  }
                                ]
                              },
                              "pre": {
                                "nodeType": "YulBlock",
                                "src": "15289:3:2",
                                "statements": []
                              },
                              "src": "15285:113:2"
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "15424:31:2",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "name": "dst",
                                              "nodeType": "YulIdentifier",
                                              "src": "15437:3:2"
                                            },
                                            {
                                              "name": "length",
                                              "nodeType": "YulIdentifier",
                                              "src": "15442:6:2"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "add",
                                            "nodeType": "YulIdentifier",
                                            "src": "15433:3:2"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "15433:16:2"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "15451:1:2",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "15426:6:2"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "15426:27:2"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "15426:27:2"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "i",
                                    "nodeType": "YulIdentifier",
                                    "src": "15413:1:2"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "15416:6:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "15410:2:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "15410:13:2"
                              },
                              "nodeType": "YulIf",
                              "src": "15407:48:2"
                            }
                          ]
                        },
                        "name": "copy_memory_to_memory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "src",
                            "nodeType": "YulTypedName",
                            "src": "15234:3:2",
                            "type": ""
                          },
                          {
                            "name": "dst",
                            "nodeType": "YulTypedName",
                            "src": "15239:3:2",
                            "type": ""
                          },
                          {
                            "name": "length",
                            "nodeType": "YulTypedName",
                            "src": "15244:6:2",
                            "type": ""
                          }
                        ],
                        "src": "15203:258:2"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "15513:88:2",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "15544:22:2",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x11",
                                        "nodeType": "YulIdentifier",
                                        "src": "15546:16:2"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "15546:18:2"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "15546:18:2"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "15529:5:2"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "15540:1:2",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "not",
                                      "nodeType": "YulIdentifier",
                                      "src": "15536:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "15536:6:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "eq",
                                  "nodeType": "YulIdentifier",
                                  "src": "15526:2:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "15526:17:2"
                              },
                              "nodeType": "YulIf",
                              "src": "15523:43:2"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "15575:20:2",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "15586:5:2"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "15593:1:2",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "15582:3:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "15582:13:2"
                              },
                              "variableNames": [
                                {
                                  "name": "ret",
                                  "nodeType": "YulIdentifier",
                                  "src": "15575:3:2"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "increment_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "15495:5:2",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "ret",
                            "nodeType": "YulTypedName",
                            "src": "15505:3:2",
                            "type": ""
                          }
                        ],
                        "src": "15466:135:2"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "15651:130:2",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "15661:31:2",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "15680:5:2"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "15687:4:2",
                                    "type": "",
                                    "value": "0xff"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "15676:3:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "15676:16:2"
                              },
                              "variables": [
                                {
                                  "name": "value_1",
                                  "nodeType": "YulTypedName",
                                  "src": "15665:7:2",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "15722:22:2",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x11",
                                        "nodeType": "YulIdentifier",
                                        "src": "15724:16:2"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "15724:18:2"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "15724:18:2"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "value_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "15707:7:2"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "15716:4:2",
                                    "type": "",
                                    "value": "0xff"
                                  }
                                ],
                                "functionName": {
                                  "name": "eq",
                                  "nodeType": "YulIdentifier",
                                  "src": "15704:2:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "15704:17:2"
                              },
                              "nodeType": "YulIf",
                              "src": "15701:43:2"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "15753:22:2",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "15764:7:2"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "15773:1:2",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "15760:3:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "15760:15:2"
                              },
                              "variableNames": [
                                {
                                  "name": "ret",
                                  "nodeType": "YulIdentifier",
                                  "src": "15753:3:2"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "increment_t_uint8",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "15633:5:2",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "ret",
                            "nodeType": "YulTypedName",
                            "src": "15643:3:2",
                            "type": ""
                          }
                        ],
                        "src": "15606:175:2"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "15824:74:2",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "15847:22:2",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x12",
                                        "nodeType": "YulIdentifier",
                                        "src": "15849:16:2"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "15849:18:2"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "15849:18:2"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "15844:1:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "15837:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "15837:9:2"
                              },
                              "nodeType": "YulIf",
                              "src": "15834:35:2"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "15878:14:2",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "15887:1:2"
                                  },
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "15890:1:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "mod",
                                  "nodeType": "YulIdentifier",
                                  "src": "15883:3:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "15883:9:2"
                              },
                              "variableNames": [
                                {
                                  "name": "r",
                                  "nodeType": "YulIdentifier",
                                  "src": "15878:1:2"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "mod_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "x",
                            "nodeType": "YulTypedName",
                            "src": "15809:1:2",
                            "type": ""
                          },
                          {
                            "name": "y",
                            "nodeType": "YulTypedName",
                            "src": "15812:1:2",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "r",
                            "nodeType": "YulTypedName",
                            "src": "15818:1:2",
                            "type": ""
                          }
                        ],
                        "src": "15786:112:2"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "15935:95:2",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "15952:1:2",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "15959:3:2",
                                        "type": "",
                                        "value": "224"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "15964:10:2",
                                        "type": "",
                                        "value": "0x4e487b71"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "15955:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "15955:20:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "15945:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "15945:31:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "15945:31:2"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "15992:1:2",
                                    "type": "",
                                    "value": "4"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "15995:4:2",
                                    "type": "",
                                    "value": "0x11"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "15985:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "15985:15:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "15985:15:2"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "16016:1:2",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "16019:4:2",
                                    "type": "",
                                    "value": "0x24"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "16009:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "16009:15:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "16009:15:2"
                            }
                          ]
                        },
                        "name": "panic_error_0x11",
                        "nodeType": "YulFunctionDefinition",
                        "src": "15903:127:2"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "16067:95:2",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "16084:1:2",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "16091:3:2",
                                        "type": "",
                                        "value": "224"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "16096:10:2",
                                        "type": "",
                                        "value": "0x4e487b71"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "16087:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "16087:20:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "16077:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "16077:31:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "16077:31:2"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "16124:1:2",
                                    "type": "",
                                    "value": "4"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "16127:4:2",
                                    "type": "",
                                    "value": "0x12"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "16117:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "16117:15:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "16117:15:2"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "16148:1:2",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "16151:4:2",
                                    "type": "",
                                    "value": "0x24"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "16141:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "16141:15:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "16141:15:2"
                            }
                          ]
                        },
                        "name": "panic_error_0x12",
                        "nodeType": "YulFunctionDefinition",
                        "src": "16035:127:2"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "16199:95:2",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "16216:1:2",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "16223:3:2",
                                        "type": "",
                                        "value": "224"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "16228:10:2",
                                        "type": "",
                                        "value": "0x4e487b71"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "16219:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "16219:20:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "16209:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "16209:31:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "16209:31:2"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "16256:1:2",
                                    "type": "",
                                    "value": "4"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "16259:4:2",
                                    "type": "",
                                    "value": "0x21"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "16249:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "16249:15:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "16249:15:2"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "16280:1:2",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "16283:4:2",
                                    "type": "",
                                    "value": "0x24"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "16273:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "16273:15:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "16273:15:2"
                            }
                          ]
                        },
                        "name": "panic_error_0x21",
                        "nodeType": "YulFunctionDefinition",
                        "src": "16167:127:2"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "16331:95:2",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "16348:1:2",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "16355:3:2",
                                        "type": "",
                                        "value": "224"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "16360:10:2",
                                        "type": "",
                                        "value": "0x4e487b71"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "16351:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "16351:20:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "16341:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "16341:31:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "16341:31:2"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "16388:1:2",
                                    "type": "",
                                    "value": "4"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "16391:4:2",
                                    "type": "",
                                    "value": "0x32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "16381:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "16381:15:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "16381:15:2"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "16412:1:2",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "16415:4:2",
                                    "type": "",
                                    "value": "0x24"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "16405:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "16405:15:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "16405:15:2"
                            }
                          ]
                        },
                        "name": "panic_error_0x32",
                        "nodeType": "YulFunctionDefinition",
                        "src": "16299:127:2"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "16463:95:2",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "16480:1:2",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "16487:3:2",
                                        "type": "",
                                        "value": "224"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "16492:10:2",
                                        "type": "",
                                        "value": "0x4e487b71"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "16483:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "16483:20:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "16473:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "16473:31:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "16473:31:2"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "16520:1:2",
                                    "type": "",
                                    "value": "4"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "16523:4:2",
                                    "type": "",
                                    "value": "0x41"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "16513:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "16513:15:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "16513:15:2"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "16544:1:2",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "16547:4:2",
                                    "type": "",
                                    "value": "0x24"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "16537:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "16537:15:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "16537:15:2"
                            }
                          ]
                        },
                        "name": "panic_error_0x41",
                        "nodeType": "YulFunctionDefinition",
                        "src": "16431:127:2"
                      }
                    ]
                  },
                  "contents": "{\n    { }\n    function abi_decode_bool(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n    }\n    function abi_decode_uint32(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, 0xffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_uint8(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, 0xff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_enum$_Part_$312t_uint8(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(lt(value, 3)) { revert(0, 0) }\n        value0 := value\n        value1 := abi_decode_uint8(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let offset := mload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let _3 := mload(_2)\n        if gt(_3, _1) { panic_error_0x41() }\n        let _4 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_3, 0x1f), _4), 63), _4))\n        if or(gt(newFreePtr, _1), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _3)\n        if gt(add(add(_2, _3), 32), dataEnd) { revert(0, 0) }\n        copy_memory_to_memory(add(_2, 32), add(memPtr, 32), _3)\n        value0 := memPtr\n    }\n    function abi_decode_tuple_t_uint16t_uint8t_uint8t_boolt_uint32t_boolt_uint8(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6\n    {\n        if slt(sub(dataEnd, headStart), 224) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, 0xffff))) { revert(0, 0) }\n        value0 := value\n        value1 := abi_decode_uint8(add(headStart, 32))\n        value2 := abi_decode_uint8(add(headStart, 64))\n        value3 := abi_decode_bool(add(headStart, 96))\n        value4 := abi_decode_uint32(add(headStart, 128))\n        value5 := abi_decode_bool(add(headStart, 160))\n        value6 := abi_decode_uint8(add(headStart, 192))\n    }\n    function abi_decode_tuple_t_uint8(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_uint8(headStart)\n    }\n    function abi_decode_tuple_t_uint8t_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_uint8(headStart)\n        let value := calldataload(add(headStart, 32))\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value1 := value\n    }\n    function abi_decode_tuple_t_uint8t_uint8t_boolt_uint32t_bool(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        value0 := abi_decode_uint8(headStart)\n        value1 := abi_decode_uint8(add(headStart, 32))\n        value2 := abi_decode_bool(add(headStart, 64))\n        value3 := abi_decode_uint32(add(headStart, 96))\n        value4 := abi_decode_bool(add(headStart, 128))\n    }\n    function abi_decode_tuple_t_uint8t_uint8t_boolt_uint8(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := abi_decode_uint8(headStart)\n        value1 := abi_decode_uint8(add(headStart, 32))\n        value2 := abi_decode_bool(add(headStart, 64))\n        value3 := abi_decode_uint8(add(headStart, 96))\n    }\n    function abi_encode_bytes(value, pos) -> end\n    {\n        let length := mload(value)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n    function abi_encode_stringliteral_55d1(pos) -> end\n    {\n        mstore(pos, shl(232, 2260317))\n        end := add(pos, 3)\n    }\n    function abi_encode_stringliteral_af5e(pos) -> end\n    {\n        mstore(pos, 0x227d2c7b2274726169745f74797065223a2022416374697665222c202276616c)\n        mstore(add(pos, 32), shl(217, 0x3ab2911d11))\n        end := add(pos, 37)\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory(add(value0, 0x20), pos, length)\n        end := add(pos, length)\n    }\n    function abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory(add(value0, 0x20), pos, length)\n        end := add(pos, length)\n    }\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value4, value3, value2, value1, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory(add(value0, 0x20), pos, length)\n        let end_1 := add(pos, length)\n        let length_1 := mload(value1)\n        copy_memory_to_memory(add(value1, 0x20), end_1, length_1)\n        let end_2 := add(end_1, length_1)\n        let length_2 := mload(value2)\n        copy_memory_to_memory(add(value2, 0x20), end_2, length_2)\n        let end_3 := add(end_2, length_2)\n        let length_3 := mload(value3)\n        copy_memory_to_memory(add(value3, 0x20), end_3, length_3)\n        let end_4 := add(end_3, length_3)\n        let length_4 := mload(value4)\n        copy_memory_to_memory(add(value4, 0x20), end_4, length_4)\n        end := add(end_4, length_4)\n    }\n    function abi_encode_tuple_packed_t_stringliteral_4e093557a78e66025a98d44b7ad003037537f50a2dc2063dd80e48e84615f893_t_string_memory_ptr_t_stringliteral_b26240e716d0906f15dfc172fadbe2347b20c889873f9bdb04fd7ee803f7f175__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        mstore(pos, 0x3c696d6167652077696474683d22363022206865696768743d2236302220696d)\n        mstore(add(pos, 32), 0x6167652d72656e646572696e673d22706978656c617465642220707265736572)\n        mstore(add(pos, 64), 0x7665417370656374526174696f3d22784d6964594d69642220786c696e6b3a68)\n        mstore(add(pos, 96), shl(42, 0x1c99598f4899185d184e9a5b5859d94bdc1b99ced8985cd94d8d0b))\n        let length := mload(value0)\n        copy_memory_to_memory(add(value0, 32), add(pos, 123), length)\n        let _1 := add(pos, length)\n        mstore(add(_1, 123), shl(233, 1120159))\n        end := add(_1, 126)\n    }\n    function abi_encode_tuple_packed_t_stringliteral_4fe68489c9c59542e448c09c7cb19a25565db1d56926ad418d32ec5d60a94a00_t_string_memory_ptr_t_stringliteral_835b459273672627bbafc3a2eded65187a632f4128bdc79e126c7ef579a27475__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        mstore(pos, 0x7b2274726169745f74797065223a2248616e642054797065222c202276616c75)\n        mstore(add(pos, 32), shl(217, 0x32911d1011))\n        let length := mload(value0)\n        copy_memory_to_memory(add(value0, 32), add(pos, 37), length)\n        let _1 := add(pos, length)\n        mstore(add(_1, 37), shl(240, 8829))\n        end := add(_1, 39)\n    }\n    function abi_encode_tuple_packed_t_stringliteral_59f4548e9770730d5f9b79d3485266abe95856eb8b22f4d5d7dc65d7d7b412d6_t_string_memory_ptr_t_stringliteral_1b282456f8601862e95af181204e9d3f663b67381ffb5ef69256c5794fe4214d_t_string_memory_ptr_t_stringliteral_d31db5fa4cccdf0b2a7c8fa1b54fac1497461aa344c190614087e30f1494e3a3_t_string_memory_ptr_t_stringliteral_8e2ffa389f3a6ded42d759b3377ac0d928e6a268d143bcc9517093d10c843bff__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value2, value1, value0) -> end\n    {\n        mstore(pos, shl(120, 0x7b226e616d65223a2022546f6b656e2023))\n        let length := mload(value0)\n        copy_memory_to_memory(add(value0, 0x20), add(pos, 17), length)\n        let _1 := add(pos, length)\n        mstore(add(_1, 17), 0x222c20226465736372697074696f6e223a2022412073696d706c6520546f6b65)\n        mstore(add(_1, 49), 0x6e222c2022696d616765223a2022646174613a696d6167652f7376672b786d6c)\n        mstore(add(_1, 81), \";base64,\")\n        let length_1 := mload(value1)\n        copy_memory_to_memory(add(value1, 0x20), add(_1, 89), length_1)\n        let _2 := add(_1, length_1)\n        mstore(add(_2, 89), shl(237, 69985))\n        let length_2 := mload(value2)\n        copy_memory_to_memory(add(value2, 0x20), add(_2, 92), length_2)\n        let _3 := add(_2, length_2)\n        mstore(add(_3, 92), \"}\")\n        end := add(_3, 93)\n    }\n    function abi_encode_tuple_packed_t_stringliteral_a9d6c84473de3f3a866c16d436066b8d4df325a647d2d3a768ffba45df210f3c_t_string_memory_ptr_t_stringliteral_3e7a35b97029f9e0cf6effd71c1a7958822e9a217d3a3aec886668a7dd8231cb_t_string_memory_ptr_t_stringliteral_bc46964ee67a2cae6d0f729fb15b9a5d4cb3d4ebbff2daaa6354914b023a1353_t_string_memory_ptr_t_stringliteral_41fbd829e4af7b81ddb12bdc9c3cbf422a9f60ac7a161c934b4e5a8a19f8d094_t_string_memory_ptr_t_stringliteral_af5e4c39327d0e7b85c8cd1468bda17f7c9f1664111102bef75507362e009b62_t_string_memory_ptr_t_stringliteral_55d1e182806bfa9e2513939eb2ae6e56b092a4b2806e0521aaf1ff702ce46bf5__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value4, value3, value2, value1, value0) -> end\n    {\n        mstore(pos, shl(136, 0x2261747472696275746573223a205b))\n        let length := mload(value0)\n        copy_memory_to_memory(add(value0, 0x20), add(pos, 15), length)\n        let _1 := add(pos, length)\n        mstore(add(_1, 15), \",\")\n        let length_1 := mload(value1)\n        copy_memory_to_memory(add(value1, 0x20), add(_1, 16), length_1)\n        let _2 := add(_1, length_1)\n        mstore(add(_2, 16), 0x2c7b2274726169745f74797065223a2022506f7461746f222c202276616c7565)\n        mstore(add(_2, 48), shl(233, 1121553))\n        let length_2 := mload(value2)\n        copy_memory_to_memory(add(value2, 0x20), add(_2, 51), length_2)\n        let _3 := add(_2, length_2)\n        mstore(add(_3, 51), 0x227d2c7b22646973706c61795f74797065223a20226e756d626572222c227472)\n        mstore(add(_3, 83), 0x6169745f74797065223a202247656e65726174696f6e222c202276616c756522)\n        mstore(add(_3, 115), shl(241, 7441))\n        end := abi_encode_stringliteral_55d1(abi_encode_bytes(value4, abi_encode_stringliteral_af5e(abi_encode_bytes(value3, add(_3, 117)))))\n    }\n    function abi_encode_tuple_packed_t_stringliteral_bac141df451ff89b6f77bbe970ff45a5da43dda5f9b9b17f412346e0390cf501_t_string_memory_ptr_t_stringliteral_835b459273672627bbafc3a2eded65187a632f4128bdc79e126c7ef579a27475__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        mstore(pos, 0x7b2274726169745f74797065223a224261636b67726f756e64222c202276616c)\n        mstore(add(pos, 32), shl(217, 0x3ab2911d11))\n        let length := mload(value0)\n        copy_memory_to_memory(add(value0, 32), add(pos, 37), length)\n        let _1 := add(pos, length)\n        mstore(add(_1, 37), shl(240, 8829))\n        end := add(_1, 39)\n    }\n    function abi_encode_tuple_packed_t_stringliteral_bccab2d885f86fda81bfd84dd4248d31f8073b473d187111d36536db073076fa_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        mstore(pos, \"data:application/json;base64,\")\n        let length := mload(value0)\n        copy_memory_to_memory(add(value0, 0x20), add(pos, 29), length)\n        end := add(add(pos, length), 29)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        copy_memory_to_memory(add(value0, 32), add(headStart, 64), length)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_encode_tuple_t_stringliteral_05fa04d950d0eb1e8230c3564e55272c5585bfce9868906a080ed6432c9eff76__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 21)\n        mstore(add(headStart, 64), \"Invalid Background Id\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_88a57f4f3e712e2c61ce3233637c29aee4812a27dbd1d386e5dba84931d76764__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 18)\n        mstore(add(headStart, 64), \"failed to get data\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_b9152bce179ee840f091df595a871f540fd5ecc16b15a8e340a1bf1c96ad6520__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 15)\n        mstore(add(headStart, 64), \"Invalid Hand Id\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_c08d24782450105650bac1579f41a5bbfca5a1ee79af052c31863122951f0e7f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 12)\n        mstore(add(headStart, 64), \"invalid part\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_ee7b04b266f275ae66a2fddcbfef24d4ec3a503d9843c534a382f12477498d38__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 11)\n        mstore(add(headStart, 64), \"not manager\")\n        tail := add(headStart, 96)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y) { panic_error_0x12() }\n        r := div(x, y)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(not(0), x))) { panic_error_0x11() }\n        product := mul(x, y)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function copy_memory_to_memory(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length) { mstore(add(dst, length), 0) }\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function increment_t_uint8(value) -> ret\n    {\n        let value_1 := and(value, 0xff)\n        if eq(value_1, 0xff) { panic_error_0x11() }\n        ret := add(value_1, 1)\n    }\n    function mod_t_uint256(x, y) -> r\n    {\n        if iszero(y) { panic_error_0x12() }\n        r := mod(x, y)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function panic_error_0x12()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n    function panic_error_0x21()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n}",
                  "id": 2,
                  "language": "Yul",
                  "name": "#utility.yul"
                }
              ],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "608060405234801561001057600080fd5b50600436106100d05760003560e01c80630d7163c6146100d5578063158eb4e5146100f357806322c414eb146101085780632544c8151461011b5780633ce301851461012e578063428bff6b146101365780634342e65214610149578063481c6a751461015c57806352b7652214610187578063646c1464146101b0578063915bb1291461011b57806395fb756a146101c3578063b6046d7c146101ec578063b6934925146101ff578063c349556714610212578063f9ec93d41461023b575b600080fd5b6100dd61024e565b6040516100ea919061243d565b60405180910390f35b610106610101366004611eb2565b61026a565b005b6100dd610116366004611e90565b6102ef565b6100dd610129366004611f5a565b610a69565b6100dd610b06565b610106610144366004611eb2565b610b23565b6100dd610157366004611e90565b610b9a565b60015461016f906001600160a01b031681565b6040516001600160a01b0390911681526020016100ea565b61016f610195366004611e90565b6004602052600090815260409020546001600160a01b031681565b6100dd6101be366004611ef5565b610e5f565b61016f6101d1366004611e90565b6003602052600090815260409020546001600160a01b031681565b6100dd6101fa366004611e01565b610f34565b61010661020d366004611eb2565b610fbf565b61016f610220366004611e90565b6002602052600090815260409020546001600160a01b031681565b6100dd610249366004611d27565b611036565b6040518060c0016040528060a081526020016125e560a0913981565b6001546001600160a01b0316331461029d5760405162461bcd60e51b815260040161029490612470565b60405180910390fd5b60015b8260ff168160ff16116102ea5760ff8116600090815260036020526040902080546001600160a01b0319166001600160a01b038416179055806102e281612542565b9150506102a0565b505050565b606060298260ff1611610a3a57600a8260ff1610156104735760058260ff16101561039f5760038260ff161015610373578160ff1660011461034e5760405180604001604052806005815260200164576869746560d81b81525061036d565b60405180604001604052806005815260200164576869746560d81b8152505b92915050565b8160ff1660031461034e57604051806040016040528060038152602001622a30b760e91b81525061036d565b60078260ff1610156103f6578160ff166005146103d757604051806040016040528060038152602001622a30b760e91b81525061036d565b50506040805180820190915260038152622a30b760e91b602082015290565b8160ff16600714610452578160ff1660081461042f5760405180604001604052806005815260200164213937bbb760d91b81525061036d565b60405180604001604052806005815260200164213937bbb760d91b81525061036d565b5050604080518082019091526005815264213937bbb760d91b602082015290565b600f8260ff161161054457600d8260ff1610156104e6578160ff16600a14610452578160ff16600b146104c35760405180604001604052806005815260200164426c61636b60d81b81525061036d565b60405180604001604052806005815260200164426c61636b60d81b81525061036d565b8160ff16600d14610523578160ff16600e146104c35760405180604001604052806009815260200168566974696c6967696f60b81b81525061036d565b5050604080518082019091526005815264426c61636b60d81b602082015290565b60148260ff161161063f5760128260ff1610156105b2578160ff1660101461058d5760405180604001604052806009815260200168566974696c6967696f60b81b81525061036d565b5050604080518082019091526009815268566974696c6967696f60b81b602082015290565b8160ff16601214610619578160ff166013146105f1576040518060400160405280600b81526020016a477265656e20536c696d6560a81b81525061036d565b6040518060400160405280600a815260200169426c756520536c696d6560b01b81525061036d565b505060408051808201909152600a815269426c756520536c696d6560b01b602082015290565b60198260ff161161073d5760178260ff1610156106b1578160ff1660151461068a576040518060400160405280600b81526020016a477265656e20536c696d6560a81b81525061036d565b505060408051808201909152600b81526a477265656e20536c696d6560a81b602082015290565b8160ff16601714610717578160ff166018146106ef576040518060400160405280600a815260200169427562626c652047756d60b01b81525061036d565b6040518060400160405280600a815260200169427562626c652047756d60b01b81525061036d565b505060408051808201909152600a815269427562626c652047756d60b01b602082015290565b601e8260ff161161083c57601c8260ff1610156107b1578160ff16601a14610789576040518060400160405280600c81526020016b23b932b2b71023b7b13634b760a11b81525061036d565b505060408051808201909152600c81526b23b932b2b71023b7b13634b760a11b602082015290565b8160ff16601c1461081a578160ff16601d146107f2576040518060400160405280600d81526020016c2cb2b63637bb9023b7b13634b760991b81525061036d565b6040518060400160405280600a8152602001692932b21023b7b13634b760b11b81525061036d565b50506040805180820190915260068152655a6f6d62696560d01b602082015290565b60208260ff1611610898578160ff16601f146108775760405180604001604052806007815260200166506c617374696360c81b81525061036d565b505060408051808201909152600581526453756c6c7960d81b602082015290565b60228260ff16116108f5578160ff166021146108d4576040518060400160405280600881526020016729b5b2b632ba37b760c11b81525061036d565b50506040805180820190915260058152642a34b3b2b960d91b602082015290565b60248260ff1611610956578160ff166023146109305760405180604001604052806007815260200166476f72696c6c6160c81b81525061036d565b505060408051808201909152600a81526929b737bb902a34b3b2b960b11b602082015290565b60268260ff16116109b1578160ff1660251461099157604051806040016040528060078152602001660a6e2eac2e8c6d60cb1b81525061036d565b50506040805180820190915260048152635965746960e01b602082015290565b60288260ff1611610a0c578160ff166027146109eb5760405180604001604052806006815260200165436f736d696360d01b81525061036d565b5050604080518082019091526005815264537465766560d81b602082015290565b8160ff1660291415610a3a57505060408051808201909152600681526550697261746560d01b602082015290565b5050604080518082019091526013815272115c9c9bdc8e881259081b9bdd08199bdd5b99606a1b602082015290565b60606040518060c0016040528060a081526020016125e560a09139610a8f600087611036565b610a9a600187611036565b85610ab45760405180602001604052806000815250610abf565b610abf600286611036565b60405180610120016040528060eb81526020016126c560eb9139604051602001610aed959493929190611fe6565b6040516020818303038152906040529050949350505050565b60405180610120016040528060eb81526020016126c560eb913981565b6001546001600160a01b03163314610b4d5760405162461bcd60e51b815260040161029490612470565b60015b8260ff168160ff16116102ea5760ff8116600090815260026020526040902080546001600160a01b0319166001600160a01b03841617905580610b9281612542565b915050610b50565b606060148260ff1611610a3a57600a8260ff161015610cd85760058260ff161015610c455760038260ff161015610c18578160ff16600114610bf85760405180604001604052806004815260200163426c756560e01b81525061036d565b5050604080518082019091526004815263426c756560e01b602082015290565b8160ff16600314610bf85760405180604001604052806004815260200163426c756560e01b81525061036d565b60078260ff161015610c7e578160ff16600514610bf85760405180604001604052806004815260200163426c756560e01b81525061036d565b8160ff16600714610bf8578160ff16600814610cb65760405180604001604052806004815260200163426c756560e01b81525061036d565b60405180604001604052806004815260200163426c756560e01b81525061036d565b600f8260ff1611610da557600d8260ff161015610d28578160ff16600a14610bf8578160ff16600b14610cb6576040518060400160405280600581526020016423b932b2b760d91b81525061036d565b8160ff16600d14610d84578160ff16600e14610d61576040518060400160405280600581526020016423b932b2b760d91b81525061036d565b6040518060400160405280600581526020016423b932b2b760d91b81525061036d565b505060408051808201909152600581526423b932b2b760d91b602082015290565b60128260ff161015610ddf578160ff16601014610d84576040518060400160405280600581526020016423b932b2b760d91b81525061036d565b8160ff16601214610e3d578160ff16601314610e195760405180604001604052806006815260200165507572706c6560d01b81525061036d565b60405180604001604052806006815260200165507572706c6560d01b81525061036d565b5050604080518082019091526006815265507572706c6560d01b602082015290565b6060610e6a86611a22565b610e7386611a53565b85610e9857604051806040016040528060028152602001614e6f60f01b815250610eb5565b6040518060400160405280600381526020016259657360e81b8152505b610ec48663ffffffff16611a6e565b85610ee957604051806040016040528060028152602001614e6f60f01b815250610f06565b6040518060400160405280600381526020016259657360e81b8152505b604051602001610f1a959493929190612252565b604051602081830303815290604052905095945050505050565b60606000610f4c610f4789898987610a69565b611b73565b9050610f92610f5e8a61ffff16611a6e565b82610f6c8b8b8b8b8b610e5f565b604051602001610f7e93929190612172565b604051602081830303815290604052611b73565b604051602001610fa291906123f8565b604051602081830303815290604052915050979650505050505050565b6001546001600160a01b03163314610fe95760405162461bcd60e51b815260040161029490612470565b60015b8260ff168160ff16116102ea5760ff8116600090815260046020526040902080546001600160a01b0319166001600160a01b0384161790558061102e81612542565b915050610fec565b606060008084600281111561104d5761104d6125a2565b1415611075575060ff82166000908152600260205260409020546001600160a01b0316611124565b6001846002811115611089576110896125a2565b14156110b1575060ff82166000908152600360205260409020546001600160a01b0316611124565b60028460028111156110c5576110c56125a2565b14156110ed575060ff82166000908152600460205260409020546001600160a01b0316611124565b60405162461bcd60e51b815260206004820152600c60248201526b1a5b9d985b1a59081c185c9d60a21b6044820152606401610294565b6060600085600281111561113a5761113a6125a2565b141561124a578360ff166001111580156111585750600b8460ff1611155b156111835750604080518082019091526009815268676574426c7565282960b81b6020820152611912565b8360ff16600b10801561119a575060118460ff1611155b156111c6575060408051808201909152600a815269676574477265656e282960b01b6020820152611912565b8360ff1660111080156111dd575060148460ff1611155b1561120a575060408051808201909152600b81526a676574507572706c65282960a81b6020820152611912565b60405162461bcd60e51b8152602060048201526015602482015274125b9d985b1a5908109858dad9dc9bdd5b99081259605a1b6044820152606401610294565b600185600281111561125e5761125e6125a2565b14156118d4578360ff1660011115801561127c575060038460ff1611155b156112a8575060408051808201909152600a81526967657448616e6431282960b01b6020820152611912565b8360ff1660031080156112bf575060068460ff1611155b156112eb575060408051808201909152600a81526967657448616e6432282960b01b6020820152611912565b8360ff1660061080156113025750600a8460ff1611155b1561132e575060408051808201909152600a81526967657448616e6433282960b01b6020820152611912565b8360ff16600a1080156113455750600e8460ff1611155b15611371575060408051808201909152600a81526967657448616e6434282960b01b6020820152611912565b8360ff16600e108015611388575060118460ff1611155b156113b7575060408051808201909152600d81526c676574566974696c69676f282960981b6020820152611912565b8360ff1660111080156113ce575060138460ff1611155b156113fe575060408051808201909152600e81526d676574426c7565536c696d65282960901b6020820152611912565b8360ff166013108015611415575060168460ff1611155b15611446575060408051808201909152600f81526e676574477265656e536c696d65282960881b6020820152611912565b8360ff16601610801561145d575060198460ff1611155b1561148d575060408051808201909152600e81526d676574427562626c6547756d282960901b6020820152611912565b8360ff1660191080156114a45750601b8460ff1611155b156114d6575060408051808201909152601081526f676574477265656e476f626c696e282960801b6020820152611912565b8360ff16601b1080156114ed5750601c8460ff1611155b1561151a575060408051808201909152600b81526a6765745a6f6d626965282960a81b6020820152611912565b8360ff16601c1080156115315750601d8460ff1611155b15611561575060408051808201909152600e81526d676574526564476f626c696e282960901b6020820152611912565b8360ff16601d1080156115785750601e8460ff1611155b156115ab575060408051808201909152601181527067657459656c6c6f77476f626c696e282960781b6020820152611912565b8360ff16601e1080156115c25750601f8460ff1611155b156115ee575060408051808201909152600a81526967657453756c6c79282960b01b6020820152611912565b8360ff16601f108015611605575060208460ff1611155b15611633575060408051808201909152600c81526b676574506c6173746963282960a01b6020820152611912565b8360ff16602010801561164a575060218460ff1611155b15611676575060408051808201909152600a8152696765745469676572282960b01b6020820152611912565b8360ff16602110801561168d575060228460ff1611155b156116bc575060408051808201909152600d81526c676574536b656c65746f6e282960981b6020820152611912565b8360ff1660221080156116d3575060238460ff1611155b15611703575060408051808201909152600e81526d676574536e6f775469676572282960901b6020820152611912565b8360ff16602310801561171a575060248460ff1611155b15611748575060408051808201909152600c81526b676574476f72696c6c61282960a01b6020820152611912565b8360ff16602410801561175f575060258460ff1611155b1561178a575060408051808201909152600981526867657459657469282960b81b6020820152611912565b8360ff1660251080156117a1575060268460ff1611155b156117cf575060408051808201909152600c81526b67657453717561746368282960a01b6020820152611912565b8360ff1660261080156117e6575060278460ff1611155b15611812575060408051808201909152600a8152696765745374657665282960b01b6020820152611912565b8360ff166027108015611829575060288460ff1611155b15611856575060408051808201909152600b81526a676574436f736d6963282960a81b6020820152611912565b8360ff16602810801561186d575060298460ff1611155b1561189a575060408051808201909152600b81526a676574506972617465282960a81b6020820152611912565b60405162461bcd60e51b815260206004820152600f60248201526e125b9d985b1a590812185b99081259608a1b6044820152606401610294565b60028560028111156118e8576118e86125a2565b14156110ed575060408051808201909152600b81526a676574506f7461746f282960a81b60208201525b6040805160048152602481019182905260009182916001600160a01b0386169161193d908690611fca565b60408051918290039091206020830180516001600160e01b03166001600160e01b0319909216919091179052516119749190611fca565b600060405180830381855afa9150503d80600081146119af576040519150601f19603f3d011682016040523d82523d6000602084013e6119b4565b606091505b5091509150816119fb5760405162461bcd60e51b81526020600482015260126024820152716661696c656420746f20676574206461746160701b6044820152606401610294565b611a1781806020019051810190611a129190611d60565b611cda565b979650505050505050565b6060611a2d82610b9a565b604051602001611a3d91906123b2565b6040516020818303038152906040529050919050565b6060611a5e826102ef565b604051602001611a3d9190612113565b606081611a925750506040805180820190915260018152600360fc1b602082015290565b8160005b8115611abc5780611aa681612527565b9150611ab59050600a836124ad565b9150611a96565b6000816001600160401b03811115611ad657611ad66125ce565b6040519080825280601f01601f191660200182016040528015611b00576020820181803683370190505b5090505b8415611b6b57611b156001836124e0565b9150611b22600a86612562565b611b2d906030612495565b60f81b818381518110611b4257611b426125b8565b60200101906001600160f81b031916908160001a905350611b64600a866124ad565b9450611b04565b949350505050565b6060815160001415611b9357505060408051602081019091526000815290565b60006040518060600160405280604081526020016126856040913990506000600384516002611bc29190612495565b611bcc91906124ad565b611bd79060046124c1565b90506000611be6826020612495565b6001600160401b03811115611bfd57611bfd6125ce565b6040519080825280601f01601f191660200182016040528015611c27576020820181803683370190505b509050818152600183018586518101602084015b81831015611c955760039283018051603f601282901c811687015160f890811b8552600c83901c8216880151811b6001860152600683901c8216880151811b60028601529116860151901b93820193909352600401611c3b565b600389510660018114611caf5760028114611cc057611ccc565b613d3d60f01b600119830152611ccc565b603d60f81b6000198301525b509398975050505050505050565b606081604051602001611a3d9190612051565b80358015158114611cfd57600080fd5b919050565b803563ffffffff81168114611cfd57600080fd5b803560ff81168114611cfd57600080fd5b60008060408385031215611d3a57600080fd5b823560038110611d4957600080fd5b9150611d5760208401611d16565b90509250929050565b600060208284031215611d7257600080fd5b81516001600160401b0380821115611d8957600080fd5b818401915084601f830112611d9d57600080fd5b815181811115611daf57611daf6125ce565b604051601f8201601f19908116603f01168101908382118183101715611dd757611dd76125ce565b81604052828152876020848701011115611df057600080fd5b611a178360208301602088016124f7565b600080600080600080600060e0888a031215611e1c57600080fd5b873561ffff81168114611e2e57600080fd5b9650611e3c60208901611d16565b9550611e4a60408901611d16565b9450611e5860608901611ced565b9350611e6660808901611d02565b9250611e7460a08901611ced565b9150611e8260c08901611d16565b905092959891949750929550565b600060208284031215611ea257600080fd5b611eab82611d16565b9392505050565b60008060408385031215611ec557600080fd5b611ece83611d16565b915060208301356001600160a01b0381168114611eea57600080fd5b809150509250929050565b600080600080600060a08688031215611f0d57600080fd5b611f1686611d16565b9450611f2460208701611d16565b9350611f3260408701611ced565b9250611f4060608701611d02565b9150611f4e60808701611ced565b90509295509295909350565b60008060008060808587031215611f7057600080fd5b611f7985611d16565b9350611f8760208601611d16565b9250611f9560408601611ced565b9150611fa360608601611d16565b905092959194509250565b60008151611fc08185602086016124f7565b9290920192915050565b60008251611fdc8184602087016124f7565b9190910192915050565b60008651611ff8818460208b016124f7565b86519083019061200c818360208b016124f7565b865191019061201f818360208a016124f7565b85519101906120328183602089016124f7565b84519101906120458183602088016124f7565b01979650505050505050565b7f3c696d6167652077696474683d22363022206865696768743d2236302220696d81527f6167652d72656e646572696e673d22706978656c61746564222070726573657260208201527f7665417370656374526174696f3d22784d6964594d69642220786c696e6b3a6860408201527a1c99598f4899185d184e9a5b5859d94bdc1b99ced8985cd94d8d0b602a1b6060820152600082516120f981607b8501602087016124f7565b6211179f60e91b607b939091019283015250607e01919050565b7f7b2274726169745f74797065223a2248616e642054797065222c202276616c7581526432911d101160d91b6020820152600082516121598160258501602087016124f7565b61227d60f01b6025939091019283015250602701919050565b707b226e616d65223a2022546f6b656e202360781b8152835160009061219f8160118501602089016124f7565b7f222c20226465736372697074696f6e223a2022412073696d706c6520546f6b656011918401918201527f6e222c2022696d616765223a2022646174613a696d6167652f7376672b786d6c6031820152670ed8985cd94d8d0b60c21b605182015284516122138160598401602089016124f7565b6201116160ed1b60599290910191820152835161223781605c8401602088016124f7565b607d60f81b605c9290910191820152605d0195945050505050565b6e2261747472696275746573223a205b60881b8152855160009061227d81600f850160208b016124f7565b600b60fa1b600f91840191820152865161229e816010840160208b016124f7565b7f2c7b2274726169745f74797065223a2022506f7461746f222c202276616c75656010929091019182015262111d1160e91b603082015285516122e8816033840160208a016124f7565b7f227d2c7b22646973706c61795f74797065223a20226e756d626572222c227472603392909101918201527f6169745f74797065223a202247656e65726174696f6e222c202276616c7565226053820152611d1160f11b60738201526123a661239761239161235a6075850189611fae565b7f227d2c7b2274726169745f74797065223a2022416374697665222c202276616c8152643ab2911d1160d91b602082015260250190565b86611fae565b62227d5d60e81b815260030190565b98975050505050505050565b7f7b2274726169745f74797065223a224261636b67726f756e64222c202276616c8152643ab2911d1160d91b6020820152600082516121598160258501602087016124f7565b7f646174613a6170706c69636174696f6e2f6a736f6e3b6261736536342c00000081526000825161243081601d8501602087016124f7565b91909101601d0192915050565b602081526000825180602084015261245c8160408501602087016124f7565b601f01601f19169190910160400192915050565b6020808252600b908201526a3737ba1036b0b730b3b2b960a91b604082015260600190565b600082198211156124a8576124a8612576565b500190565b6000826124bc576124bc61258c565b500490565b60008160001904831182151516156124db576124db612576565b500290565b6000828210156124f2576124f2612576565b500390565b60005b838110156125125781810151838201526020016124fa565b83811115612521576000848401525b50505050565b600060001982141561253b5761253b612576565b5060010190565b600060ff821660ff81141561255957612559612576565b60010192915050565b6000826125715761257161258c565b500690565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052602160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fdfe3c7376672069643d226261636b6275726e6572222077696474683d223130302522206865696768743d2231303025222076657273696f6e3d22312e31222076696577426f783d223020302036302036302220786d6c6e733d22687474703a2f2f7777772e77332e6f72672f323030302f7376672220786d6c6e733a786c696e6b3d22687474703a2f2f7777772e77332e6f72672f313939392f786c696e6b223e4142434445464748494a4b4c4d4e4f505152535455565758595a6162636465666768696a6b6c6d6e6f707172737475767778797a303132333435363738392b2f3c7374796c653e236261636b6275726e65727b73686170652d72656e646572696e673a20637269737065646765733b20696d6167652d72656e646572696e673a202d7765626b69742d63726973702d65646765733b20696d6167652d72656e646572696e673a202d6d6f7a2d63726973702d65646765733b20696d6167652d72656e646572696e673a2063726973702d65646765733b20696d6167652d72656e646572696e673a20706978656c617465643b202d6d732d696e746572706f6c6174696f6e2d6d6f64653a206e6561726573742d6e65696768626f723b7d3c2f7374796c653e3c2f7376673ea164736f6c6343000807000a",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xD0 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xD7163C6 EQ PUSH2 0xD5 JUMPI DUP1 PUSH4 0x158EB4E5 EQ PUSH2 0xF3 JUMPI DUP1 PUSH4 0x22C414EB EQ PUSH2 0x108 JUMPI DUP1 PUSH4 0x2544C815 EQ PUSH2 0x11B JUMPI DUP1 PUSH4 0x3CE30185 EQ PUSH2 0x12E JUMPI DUP1 PUSH4 0x428BFF6B EQ PUSH2 0x136 JUMPI DUP1 PUSH4 0x4342E652 EQ PUSH2 0x149 JUMPI DUP1 PUSH4 0x481C6A75 EQ PUSH2 0x15C JUMPI DUP1 PUSH4 0x52B76522 EQ PUSH2 0x187 JUMPI DUP1 PUSH4 0x646C1464 EQ PUSH2 0x1B0 JUMPI DUP1 PUSH4 0x915BB129 EQ PUSH2 0x11B JUMPI DUP1 PUSH4 0x95FB756A EQ PUSH2 0x1C3 JUMPI DUP1 PUSH4 0xB6046D7C EQ PUSH2 0x1EC JUMPI DUP1 PUSH4 0xB6934925 EQ PUSH2 0x1FF JUMPI DUP1 PUSH4 0xC3495567 EQ PUSH2 0x212 JUMPI DUP1 PUSH4 0xF9EC93D4 EQ PUSH2 0x23B JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDD PUSH2 0x24E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xEA SWAP2 SWAP1 PUSH2 0x243D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x106 PUSH2 0x101 CALLDATASIZE PUSH1 0x4 PUSH2 0x1EB2 JUMP JUMPDEST PUSH2 0x26A JUMP JUMPDEST STOP JUMPDEST PUSH2 0xDD PUSH2 0x116 CALLDATASIZE PUSH1 0x4 PUSH2 0x1E90 JUMP JUMPDEST PUSH2 0x2EF JUMP JUMPDEST PUSH2 0xDD PUSH2 0x129 CALLDATASIZE PUSH1 0x4 PUSH2 0x1F5A JUMP JUMPDEST PUSH2 0xA69 JUMP JUMPDEST PUSH2 0xDD PUSH2 0xB06 JUMP JUMPDEST PUSH2 0x106 PUSH2 0x144 CALLDATASIZE PUSH1 0x4 PUSH2 0x1EB2 JUMP JUMPDEST PUSH2 0xB23 JUMP JUMPDEST PUSH2 0xDD PUSH2 0x157 CALLDATASIZE PUSH1 0x4 PUSH2 0x1E90 JUMP JUMPDEST PUSH2 0xB9A JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0x16F SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xEA JUMP JUMPDEST PUSH2 0x16F PUSH2 0x195 CALLDATASIZE PUSH1 0x4 PUSH2 0x1E90 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0xDD PUSH2 0x1BE CALLDATASIZE PUSH1 0x4 PUSH2 0x1EF5 JUMP JUMPDEST PUSH2 0xE5F JUMP JUMPDEST PUSH2 0x16F PUSH2 0x1D1 CALLDATASIZE PUSH1 0x4 PUSH2 0x1E90 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0xDD PUSH2 0x1FA CALLDATASIZE PUSH1 0x4 PUSH2 0x1E01 JUMP JUMPDEST PUSH2 0xF34 JUMP JUMPDEST PUSH2 0x106 PUSH2 0x20D CALLDATASIZE PUSH1 0x4 PUSH2 0x1EB2 JUMP JUMPDEST PUSH2 0xFBF JUMP JUMPDEST PUSH2 0x16F PUSH2 0x220 CALLDATASIZE PUSH1 0x4 PUSH2 0x1E90 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0xDD PUSH2 0x249 CALLDATASIZE PUSH1 0x4 PUSH2 0x1D27 JUMP JUMPDEST PUSH2 0x1036 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0xC0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xA0 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x25E5 PUSH1 0xA0 SWAP2 CODECOPY DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x29D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x294 SWAP1 PUSH2 0x2470 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 JUMPDEST DUP3 PUSH1 0xFF AND DUP2 PUSH1 0xFF AND GT PUSH2 0x2EA JUMPI PUSH1 0xFF DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND OR SWAP1 SSTORE DUP1 PUSH2 0x2E2 DUP2 PUSH2 0x2542 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x2A0 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x29 DUP3 PUSH1 0xFF AND GT PUSH2 0xA3A JUMPI PUSH1 0xA DUP3 PUSH1 0xFF AND LT ISZERO PUSH2 0x473 JUMPI PUSH1 0x5 DUP3 PUSH1 0xFF AND LT ISZERO PUSH2 0x39F JUMPI PUSH1 0x3 DUP3 PUSH1 0xFF AND LT ISZERO PUSH2 0x373 JUMPI DUP2 PUSH1 0xFF AND PUSH1 0x1 EQ PUSH2 0x34E JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH5 0x5768697465 PUSH1 0xD8 SHL DUP2 MSTORE POP PUSH2 0x36D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH5 0x5768697465 PUSH1 0xD8 SHL DUP2 MSTORE POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP2 PUSH1 0xFF AND PUSH1 0x3 EQ PUSH2 0x34E JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x2A30B7 PUSH1 0xE9 SHL DUP2 MSTORE POP PUSH2 0x36D JUMP JUMPDEST PUSH1 0x7 DUP3 PUSH1 0xFF AND LT ISZERO PUSH2 0x3F6 JUMPI DUP2 PUSH1 0xFF AND PUSH1 0x5 EQ PUSH2 0x3D7 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x2A30B7 PUSH1 0xE9 SHL DUP2 MSTORE POP PUSH2 0x36D JUMP JUMPDEST POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x3 DUP2 MSTORE PUSH3 0x2A30B7 PUSH1 0xE9 SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST DUP2 PUSH1 0xFF AND PUSH1 0x7 EQ PUSH2 0x452 JUMPI DUP2 PUSH1 0xFF AND PUSH1 0x8 EQ PUSH2 0x42F JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH5 0x213937BBB7 PUSH1 0xD9 SHL DUP2 MSTORE POP PUSH2 0x36D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH5 0x213937BBB7 PUSH1 0xD9 SHL DUP2 MSTORE POP PUSH2 0x36D JUMP JUMPDEST POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x5 DUP2 MSTORE PUSH5 0x213937BBB7 PUSH1 0xD9 SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0xF DUP3 PUSH1 0xFF AND GT PUSH2 0x544 JUMPI PUSH1 0xD DUP3 PUSH1 0xFF AND LT ISZERO PUSH2 0x4E6 JUMPI DUP2 PUSH1 0xFF AND PUSH1 0xA EQ PUSH2 0x452 JUMPI DUP2 PUSH1 0xFF AND PUSH1 0xB EQ PUSH2 0x4C3 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH5 0x426C61636B PUSH1 0xD8 SHL DUP2 MSTORE POP PUSH2 0x36D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH5 0x426C61636B PUSH1 0xD8 SHL DUP2 MSTORE POP PUSH2 0x36D JUMP JUMPDEST DUP2 PUSH1 0xFF AND PUSH1 0xD EQ PUSH2 0x523 JUMPI DUP2 PUSH1 0xFF AND PUSH1 0xE EQ PUSH2 0x4C3 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x9 DUP2 MSTORE PUSH1 0x20 ADD PUSH9 0x566974696C6967696F PUSH1 0xB8 SHL DUP2 MSTORE POP PUSH2 0x36D JUMP JUMPDEST POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x5 DUP2 MSTORE PUSH5 0x426C61636B PUSH1 0xD8 SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x14 DUP3 PUSH1 0xFF AND GT PUSH2 0x63F JUMPI PUSH1 0x12 DUP3 PUSH1 0xFF AND LT ISZERO PUSH2 0x5B2 JUMPI DUP2 PUSH1 0xFF AND PUSH1 0x10 EQ PUSH2 0x58D JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x9 DUP2 MSTORE PUSH1 0x20 ADD PUSH9 0x566974696C6967696F PUSH1 0xB8 SHL DUP2 MSTORE POP PUSH2 0x36D JUMP JUMPDEST POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x9 DUP2 MSTORE PUSH9 0x566974696C6967696F PUSH1 0xB8 SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST DUP2 PUSH1 0xFF AND PUSH1 0x12 EQ PUSH2 0x619 JUMPI DUP2 PUSH1 0xFF AND PUSH1 0x13 EQ PUSH2 0x5F1 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xB DUP2 MSTORE PUSH1 0x20 ADD PUSH11 0x477265656E20536C696D65 PUSH1 0xA8 SHL DUP2 MSTORE POP PUSH2 0x36D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xA DUP2 MSTORE PUSH1 0x20 ADD PUSH10 0x426C756520536C696D65 PUSH1 0xB0 SHL DUP2 MSTORE POP PUSH2 0x36D JUMP JUMPDEST POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0xA DUP2 MSTORE PUSH10 0x426C756520536C696D65 PUSH1 0xB0 SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x19 DUP3 PUSH1 0xFF AND GT PUSH2 0x73D JUMPI PUSH1 0x17 DUP3 PUSH1 0xFF AND LT ISZERO PUSH2 0x6B1 JUMPI DUP2 PUSH1 0xFF AND PUSH1 0x15 EQ PUSH2 0x68A JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xB DUP2 MSTORE PUSH1 0x20 ADD PUSH11 0x477265656E20536C696D65 PUSH1 0xA8 SHL DUP2 MSTORE POP PUSH2 0x36D JUMP JUMPDEST POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0xB DUP2 MSTORE PUSH11 0x477265656E20536C696D65 PUSH1 0xA8 SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST DUP2 PUSH1 0xFF AND PUSH1 0x17 EQ PUSH2 0x717 JUMPI DUP2 PUSH1 0xFF AND PUSH1 0x18 EQ PUSH2 0x6EF JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xA DUP2 MSTORE PUSH1 0x20 ADD PUSH10 0x427562626C652047756D PUSH1 0xB0 SHL DUP2 MSTORE POP PUSH2 0x36D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xA DUP2 MSTORE PUSH1 0x20 ADD PUSH10 0x427562626C652047756D PUSH1 0xB0 SHL DUP2 MSTORE POP PUSH2 0x36D JUMP JUMPDEST POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0xA DUP2 MSTORE PUSH10 0x427562626C652047756D PUSH1 0xB0 SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x1E DUP3 PUSH1 0xFF AND GT PUSH2 0x83C JUMPI PUSH1 0x1C DUP3 PUSH1 0xFF AND LT ISZERO PUSH2 0x7B1 JUMPI DUP2 PUSH1 0xFF AND PUSH1 0x1A EQ PUSH2 0x789 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xC DUP2 MSTORE PUSH1 0x20 ADD PUSH12 0x23B932B2B71023B7B13634B7 PUSH1 0xA1 SHL DUP2 MSTORE POP PUSH2 0x36D JUMP JUMPDEST POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0xC DUP2 MSTORE PUSH12 0x23B932B2B71023B7B13634B7 PUSH1 0xA1 SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST DUP2 PUSH1 0xFF AND PUSH1 0x1C EQ PUSH2 0x81A JUMPI DUP2 PUSH1 0xFF AND PUSH1 0x1D EQ PUSH2 0x7F2 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xD DUP2 MSTORE PUSH1 0x20 ADD PUSH13 0x2CB2B63637BB9023B7B13634B7 PUSH1 0x99 SHL DUP2 MSTORE POP PUSH2 0x36D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xA DUP2 MSTORE PUSH1 0x20 ADD PUSH10 0x2932B21023B7B13634B7 PUSH1 0xB1 SHL DUP2 MSTORE POP PUSH2 0x36D JUMP JUMPDEST POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x6 DUP2 MSTORE PUSH6 0x5A6F6D626965 PUSH1 0xD0 SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP3 PUSH1 0xFF AND GT PUSH2 0x898 JUMPI DUP2 PUSH1 0xFF AND PUSH1 0x1F EQ PUSH2 0x877 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x7 DUP2 MSTORE PUSH1 0x20 ADD PUSH7 0x506C6173746963 PUSH1 0xC8 SHL DUP2 MSTORE POP PUSH2 0x36D JUMP JUMPDEST POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x5 DUP2 MSTORE PUSH5 0x53756C6C79 PUSH1 0xD8 SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x22 DUP3 PUSH1 0xFF AND GT PUSH2 0x8F5 JUMPI DUP2 PUSH1 0xFF AND PUSH1 0x21 EQ PUSH2 0x8D4 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x8 DUP2 MSTORE PUSH1 0x20 ADD PUSH8 0x29B5B2B632BA37B7 PUSH1 0xC1 SHL DUP2 MSTORE POP PUSH2 0x36D JUMP JUMPDEST POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x5 DUP2 MSTORE PUSH5 0x2A34B3B2B9 PUSH1 0xD9 SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x24 DUP3 PUSH1 0xFF AND GT PUSH2 0x956 JUMPI DUP2 PUSH1 0xFF AND PUSH1 0x23 EQ PUSH2 0x930 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x7 DUP2 MSTORE PUSH1 0x20 ADD PUSH7 0x476F72696C6C61 PUSH1 0xC8 SHL DUP2 MSTORE POP PUSH2 0x36D JUMP JUMPDEST POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0xA DUP2 MSTORE PUSH10 0x29B737BB902A34B3B2B9 PUSH1 0xB1 SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x26 DUP3 PUSH1 0xFF AND GT PUSH2 0x9B1 JUMPI DUP2 PUSH1 0xFF AND PUSH1 0x25 EQ PUSH2 0x991 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x7 DUP2 MSTORE PUSH1 0x20 ADD PUSH7 0xA6E2EAC2E8C6D PUSH1 0xCB SHL DUP2 MSTORE POP PUSH2 0x36D JUMP JUMPDEST POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x4 DUP2 MSTORE PUSH4 0x59657469 PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x28 DUP3 PUSH1 0xFF AND GT PUSH2 0xA0C JUMPI DUP2 PUSH1 0xFF AND PUSH1 0x27 EQ PUSH2 0x9EB JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x6 DUP2 MSTORE PUSH1 0x20 ADD PUSH6 0x436F736D6963 PUSH1 0xD0 SHL DUP2 MSTORE POP PUSH2 0x36D JUMP JUMPDEST POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x5 DUP2 MSTORE PUSH5 0x5374657665 PUSH1 0xD8 SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST DUP2 PUSH1 0xFF AND PUSH1 0x29 EQ ISZERO PUSH2 0xA3A JUMPI POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x6 DUP2 MSTORE PUSH6 0x506972617465 PUSH1 0xD0 SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x13 DUP2 MSTORE PUSH19 0x115C9C9BDC8E881259081B9BDD08199BDD5B99 PUSH1 0x6A SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0xC0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xA0 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x25E5 PUSH1 0xA0 SWAP2 CODECOPY PUSH2 0xA8F PUSH1 0x0 DUP8 PUSH2 0x1036 JUMP JUMPDEST PUSH2 0xA9A PUSH1 0x1 DUP8 PUSH2 0x1036 JUMP JUMPDEST DUP6 PUSH2 0xAB4 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0xABF JUMP JUMPDEST PUSH2 0xABF PUSH1 0x2 DUP7 PUSH2 0x1036 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x120 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xEB DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x26C5 PUSH1 0xEB SWAP2 CODECOPY PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xAED SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1FE6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x120 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xEB DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x26C5 PUSH1 0xEB SWAP2 CODECOPY DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xB4D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x294 SWAP1 PUSH2 0x2470 JUMP JUMPDEST PUSH1 0x1 JUMPDEST DUP3 PUSH1 0xFF AND DUP2 PUSH1 0xFF AND GT PUSH2 0x2EA JUMPI PUSH1 0xFF DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND OR SWAP1 SSTORE DUP1 PUSH2 0xB92 DUP2 PUSH2 0x2542 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xB50 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x14 DUP3 PUSH1 0xFF AND GT PUSH2 0xA3A JUMPI PUSH1 0xA DUP3 PUSH1 0xFF AND LT ISZERO PUSH2 0xCD8 JUMPI PUSH1 0x5 DUP3 PUSH1 0xFF AND LT ISZERO PUSH2 0xC45 JUMPI PUSH1 0x3 DUP3 PUSH1 0xFF AND LT ISZERO PUSH2 0xC18 JUMPI DUP2 PUSH1 0xFF AND PUSH1 0x1 EQ PUSH2 0xBF8 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH4 0x426C7565 PUSH1 0xE0 SHL DUP2 MSTORE POP PUSH2 0x36D JUMP JUMPDEST POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x4 DUP2 MSTORE PUSH4 0x426C7565 PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST DUP2 PUSH1 0xFF AND PUSH1 0x3 EQ PUSH2 0xBF8 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH4 0x426C7565 PUSH1 0xE0 SHL DUP2 MSTORE POP PUSH2 0x36D JUMP JUMPDEST PUSH1 0x7 DUP3 PUSH1 0xFF AND LT ISZERO PUSH2 0xC7E JUMPI DUP2 PUSH1 0xFF AND PUSH1 0x5 EQ PUSH2 0xBF8 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH4 0x426C7565 PUSH1 0xE0 SHL DUP2 MSTORE POP PUSH2 0x36D JUMP JUMPDEST DUP2 PUSH1 0xFF AND PUSH1 0x7 EQ PUSH2 0xBF8 JUMPI DUP2 PUSH1 0xFF AND PUSH1 0x8 EQ PUSH2 0xCB6 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH4 0x426C7565 PUSH1 0xE0 SHL DUP2 MSTORE POP PUSH2 0x36D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH4 0x426C7565 PUSH1 0xE0 SHL DUP2 MSTORE POP PUSH2 0x36D JUMP JUMPDEST PUSH1 0xF DUP3 PUSH1 0xFF AND GT PUSH2 0xDA5 JUMPI PUSH1 0xD DUP3 PUSH1 0xFF AND LT ISZERO PUSH2 0xD28 JUMPI DUP2 PUSH1 0xFF AND PUSH1 0xA EQ PUSH2 0xBF8 JUMPI DUP2 PUSH1 0xFF AND PUSH1 0xB EQ PUSH2 0xCB6 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH5 0x23B932B2B7 PUSH1 0xD9 SHL DUP2 MSTORE POP PUSH2 0x36D JUMP JUMPDEST DUP2 PUSH1 0xFF AND PUSH1 0xD EQ PUSH2 0xD84 JUMPI DUP2 PUSH1 0xFF AND PUSH1 0xE EQ PUSH2 0xD61 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH5 0x23B932B2B7 PUSH1 0xD9 SHL DUP2 MSTORE POP PUSH2 0x36D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH5 0x23B932B2B7 PUSH1 0xD9 SHL DUP2 MSTORE POP PUSH2 0x36D JUMP JUMPDEST POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x5 DUP2 MSTORE PUSH5 0x23B932B2B7 PUSH1 0xD9 SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x12 DUP3 PUSH1 0xFF AND LT ISZERO PUSH2 0xDDF JUMPI DUP2 PUSH1 0xFF AND PUSH1 0x10 EQ PUSH2 0xD84 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH5 0x23B932B2B7 PUSH1 0xD9 SHL DUP2 MSTORE POP PUSH2 0x36D JUMP JUMPDEST DUP2 PUSH1 0xFF AND PUSH1 0x12 EQ PUSH2 0xE3D JUMPI DUP2 PUSH1 0xFF AND PUSH1 0x13 EQ PUSH2 0xE19 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x6 DUP2 MSTORE PUSH1 0x20 ADD PUSH6 0x507572706C65 PUSH1 0xD0 SHL DUP2 MSTORE POP PUSH2 0x36D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x6 DUP2 MSTORE PUSH1 0x20 ADD PUSH6 0x507572706C65 PUSH1 0xD0 SHL DUP2 MSTORE POP PUSH2 0x36D JUMP JUMPDEST POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x6 DUP2 MSTORE PUSH6 0x507572706C65 PUSH1 0xD0 SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0xE6A DUP7 PUSH2 0x1A22 JUMP JUMPDEST PUSH2 0xE73 DUP7 PUSH2 0x1A53 JUMP JUMPDEST DUP6 PUSH2 0xE98 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x4E6F PUSH1 0xF0 SHL DUP2 MSTORE POP PUSH2 0xEB5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x596573 PUSH1 0xE8 SHL DUP2 MSTORE POP JUMPDEST PUSH2 0xEC4 DUP7 PUSH4 0xFFFFFFFF AND PUSH2 0x1A6E JUMP JUMPDEST DUP6 PUSH2 0xEE9 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x4E6F PUSH1 0xF0 SHL DUP2 MSTORE POP PUSH2 0xF06 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x596573 PUSH1 0xE8 SHL DUP2 MSTORE POP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xF1A SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2252 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0xF4C PUSH2 0xF47 DUP10 DUP10 DUP10 DUP8 PUSH2 0xA69 JUMP JUMPDEST PUSH2 0x1B73 JUMP JUMPDEST SWAP1 POP PUSH2 0xF92 PUSH2 0xF5E DUP11 PUSH2 0xFFFF AND PUSH2 0x1A6E JUMP JUMPDEST DUP3 PUSH2 0xF6C DUP12 DUP12 DUP12 DUP12 DUP12 PUSH2 0xE5F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xF7E SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2172 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH2 0x1B73 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xFA2 SWAP2 SWAP1 PUSH2 0x23F8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP POP SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xFE9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x294 SWAP1 PUSH2 0x2470 JUMP JUMPDEST PUSH1 0x1 JUMPDEST DUP3 PUSH1 0xFF AND DUP2 PUSH1 0xFF AND GT PUSH2 0x2EA JUMPI PUSH1 0xFF DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND OR SWAP1 SSTORE DUP1 PUSH2 0x102E DUP2 PUSH2 0x2542 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xFEC JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 DUP5 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x104D JUMPI PUSH2 0x104D PUSH2 0x25A2 JUMP JUMPDEST EQ ISZERO PUSH2 0x1075 JUMPI POP PUSH1 0xFF DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1124 JUMP JUMPDEST PUSH1 0x1 DUP5 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1089 JUMPI PUSH2 0x1089 PUSH2 0x25A2 JUMP JUMPDEST EQ ISZERO PUSH2 0x10B1 JUMPI POP PUSH1 0xFF DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1124 JUMP JUMPDEST PUSH1 0x2 DUP5 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x10C5 JUMPI PUSH2 0x10C5 PUSH2 0x25A2 JUMP JUMPDEST EQ ISZERO PUSH2 0x10ED JUMPI POP PUSH1 0xFF DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1124 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x1A5B9D985B1A59081C185C9D PUSH1 0xA2 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x294 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP6 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x113A JUMPI PUSH2 0x113A PUSH2 0x25A2 JUMP JUMPDEST EQ ISZERO PUSH2 0x124A JUMPI DUP4 PUSH1 0xFF AND PUSH1 0x1 GT ISZERO DUP1 ISZERO PUSH2 0x1158 JUMPI POP PUSH1 0xB DUP5 PUSH1 0xFF AND GT ISZERO JUMPDEST ISZERO PUSH2 0x1183 JUMPI POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x9 DUP2 MSTORE PUSH9 0x676574426C75652829 PUSH1 0xB8 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x1912 JUMP JUMPDEST DUP4 PUSH1 0xFF AND PUSH1 0xB LT DUP1 ISZERO PUSH2 0x119A JUMPI POP PUSH1 0x11 DUP5 PUSH1 0xFF AND GT ISZERO JUMPDEST ISZERO PUSH2 0x11C6 JUMPI POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0xA DUP2 MSTORE PUSH10 0x676574477265656E2829 PUSH1 0xB0 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x1912 JUMP JUMPDEST DUP4 PUSH1 0xFF AND PUSH1 0x11 LT DUP1 ISZERO PUSH2 0x11DD JUMPI POP PUSH1 0x14 DUP5 PUSH1 0xFF AND GT ISZERO JUMPDEST ISZERO PUSH2 0x120A JUMPI POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0xB DUP2 MSTORE PUSH11 0x676574507572706C652829 PUSH1 0xA8 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x1912 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x125B9D985B1A5908109858DAD9DC9BDD5B99081259 PUSH1 0x5A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x294 JUMP JUMPDEST PUSH1 0x1 DUP6 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x125E JUMPI PUSH2 0x125E PUSH2 0x25A2 JUMP JUMPDEST EQ ISZERO PUSH2 0x18D4 JUMPI DUP4 PUSH1 0xFF AND PUSH1 0x1 GT ISZERO DUP1 ISZERO PUSH2 0x127C JUMPI POP PUSH1 0x3 DUP5 PUSH1 0xFF AND GT ISZERO JUMPDEST ISZERO PUSH2 0x12A8 JUMPI POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0xA DUP2 MSTORE PUSH10 0x67657448616E64312829 PUSH1 0xB0 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x1912 JUMP JUMPDEST DUP4 PUSH1 0xFF AND PUSH1 0x3 LT DUP1 ISZERO PUSH2 0x12BF JUMPI POP PUSH1 0x6 DUP5 PUSH1 0xFF AND GT ISZERO JUMPDEST ISZERO PUSH2 0x12EB JUMPI POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0xA DUP2 MSTORE PUSH10 0x67657448616E64322829 PUSH1 0xB0 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x1912 JUMP JUMPDEST DUP4 PUSH1 0xFF AND PUSH1 0x6 LT DUP1 ISZERO PUSH2 0x1302 JUMPI POP PUSH1 0xA DUP5 PUSH1 0xFF AND GT ISZERO JUMPDEST ISZERO PUSH2 0x132E JUMPI POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0xA DUP2 MSTORE PUSH10 0x67657448616E64332829 PUSH1 0xB0 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x1912 JUMP JUMPDEST DUP4 PUSH1 0xFF AND PUSH1 0xA LT DUP1 ISZERO PUSH2 0x1345 JUMPI POP PUSH1 0xE DUP5 PUSH1 0xFF AND GT ISZERO JUMPDEST ISZERO PUSH2 0x1371 JUMPI POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0xA DUP2 MSTORE PUSH10 0x67657448616E64342829 PUSH1 0xB0 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x1912 JUMP JUMPDEST DUP4 PUSH1 0xFF AND PUSH1 0xE LT DUP1 ISZERO PUSH2 0x1388 JUMPI POP PUSH1 0x11 DUP5 PUSH1 0xFF AND GT ISZERO JUMPDEST ISZERO PUSH2 0x13B7 JUMPI POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0xD DUP2 MSTORE PUSH13 0x676574566974696C69676F2829 PUSH1 0x98 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x1912 JUMP JUMPDEST DUP4 PUSH1 0xFF AND PUSH1 0x11 LT DUP1 ISZERO PUSH2 0x13CE JUMPI POP PUSH1 0x13 DUP5 PUSH1 0xFF AND GT ISZERO JUMPDEST ISZERO PUSH2 0x13FE JUMPI POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0xE DUP2 MSTORE PUSH14 0x676574426C7565536C696D652829 PUSH1 0x90 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x1912 JUMP JUMPDEST DUP4 PUSH1 0xFF AND PUSH1 0x13 LT DUP1 ISZERO PUSH2 0x1415 JUMPI POP PUSH1 0x16 DUP5 PUSH1 0xFF AND GT ISZERO JUMPDEST ISZERO PUSH2 0x1446 JUMPI POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0xF DUP2 MSTORE PUSH15 0x676574477265656E536C696D652829 PUSH1 0x88 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x1912 JUMP JUMPDEST DUP4 PUSH1 0xFF AND PUSH1 0x16 LT DUP1 ISZERO PUSH2 0x145D JUMPI POP PUSH1 0x19 DUP5 PUSH1 0xFF AND GT ISZERO JUMPDEST ISZERO PUSH2 0x148D JUMPI POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0xE DUP2 MSTORE PUSH14 0x676574427562626C6547756D2829 PUSH1 0x90 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x1912 JUMP JUMPDEST DUP4 PUSH1 0xFF AND PUSH1 0x19 LT DUP1 ISZERO PUSH2 0x14A4 JUMPI POP PUSH1 0x1B DUP5 PUSH1 0xFF AND GT ISZERO JUMPDEST ISZERO PUSH2 0x14D6 JUMPI POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x10 DUP2 MSTORE PUSH16 0x676574477265656E476F626C696E2829 PUSH1 0x80 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x1912 JUMP JUMPDEST DUP4 PUSH1 0xFF AND PUSH1 0x1B LT DUP1 ISZERO PUSH2 0x14ED JUMPI POP PUSH1 0x1C DUP5 PUSH1 0xFF AND GT ISZERO JUMPDEST ISZERO PUSH2 0x151A JUMPI POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0xB DUP2 MSTORE PUSH11 0x6765745A6F6D6269652829 PUSH1 0xA8 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x1912 JUMP JUMPDEST DUP4 PUSH1 0xFF AND PUSH1 0x1C LT DUP1 ISZERO PUSH2 0x1531 JUMPI POP PUSH1 0x1D DUP5 PUSH1 0xFF AND GT ISZERO JUMPDEST ISZERO PUSH2 0x1561 JUMPI POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0xE DUP2 MSTORE PUSH14 0x676574526564476F626C696E2829 PUSH1 0x90 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x1912 JUMP JUMPDEST DUP4 PUSH1 0xFF AND PUSH1 0x1D LT DUP1 ISZERO PUSH2 0x1578 JUMPI POP PUSH1 0x1E DUP5 PUSH1 0xFF AND GT ISZERO JUMPDEST ISZERO PUSH2 0x15AB JUMPI POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x11 DUP2 MSTORE PUSH17 0x67657459656C6C6F77476F626C696E2829 PUSH1 0x78 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x1912 JUMP JUMPDEST DUP4 PUSH1 0xFF AND PUSH1 0x1E LT DUP1 ISZERO PUSH2 0x15C2 JUMPI POP PUSH1 0x1F DUP5 PUSH1 0xFF AND GT ISZERO JUMPDEST ISZERO PUSH2 0x15EE JUMPI POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0xA DUP2 MSTORE PUSH10 0x67657453756C6C792829 PUSH1 0xB0 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x1912 JUMP JUMPDEST DUP4 PUSH1 0xFF AND PUSH1 0x1F LT DUP1 ISZERO PUSH2 0x1605 JUMPI POP PUSH1 0x20 DUP5 PUSH1 0xFF AND GT ISZERO JUMPDEST ISZERO PUSH2 0x1633 JUMPI POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0xC DUP2 MSTORE PUSH12 0x676574506C61737469632829 PUSH1 0xA0 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x1912 JUMP JUMPDEST DUP4 PUSH1 0xFF AND PUSH1 0x20 LT DUP1 ISZERO PUSH2 0x164A JUMPI POP PUSH1 0x21 DUP5 PUSH1 0xFF AND GT ISZERO JUMPDEST ISZERO PUSH2 0x1676 JUMPI POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0xA DUP2 MSTORE PUSH10 0x67657454696765722829 PUSH1 0xB0 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x1912 JUMP JUMPDEST DUP4 PUSH1 0xFF AND PUSH1 0x21 LT DUP1 ISZERO PUSH2 0x168D JUMPI POP PUSH1 0x22 DUP5 PUSH1 0xFF AND GT ISZERO JUMPDEST ISZERO PUSH2 0x16BC JUMPI POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0xD DUP2 MSTORE PUSH13 0x676574536B656C65746F6E2829 PUSH1 0x98 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x1912 JUMP JUMPDEST DUP4 PUSH1 0xFF AND PUSH1 0x22 LT DUP1 ISZERO PUSH2 0x16D3 JUMPI POP PUSH1 0x23 DUP5 PUSH1 0xFF AND GT ISZERO JUMPDEST ISZERO PUSH2 0x1703 JUMPI POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0xE DUP2 MSTORE PUSH14 0x676574536E6F7754696765722829 PUSH1 0x90 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x1912 JUMP JUMPDEST DUP4 PUSH1 0xFF AND PUSH1 0x23 LT DUP1 ISZERO PUSH2 0x171A JUMPI POP PUSH1 0x24 DUP5 PUSH1 0xFF AND GT ISZERO JUMPDEST ISZERO PUSH2 0x1748 JUMPI POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0xC DUP2 MSTORE PUSH12 0x676574476F72696C6C612829 PUSH1 0xA0 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x1912 JUMP JUMPDEST DUP4 PUSH1 0xFF AND PUSH1 0x24 LT DUP1 ISZERO PUSH2 0x175F JUMPI POP PUSH1 0x25 DUP5 PUSH1 0xFF AND GT ISZERO JUMPDEST ISZERO PUSH2 0x178A JUMPI POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x9 DUP2 MSTORE PUSH9 0x676574596574692829 PUSH1 0xB8 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x1912 JUMP JUMPDEST DUP4 PUSH1 0xFF AND PUSH1 0x25 LT DUP1 ISZERO PUSH2 0x17A1 JUMPI POP PUSH1 0x26 DUP5 PUSH1 0xFF AND GT ISZERO JUMPDEST ISZERO PUSH2 0x17CF JUMPI POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0xC DUP2 MSTORE PUSH12 0x676574537175617463682829 PUSH1 0xA0 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x1912 JUMP JUMPDEST DUP4 PUSH1 0xFF AND PUSH1 0x26 LT DUP1 ISZERO PUSH2 0x17E6 JUMPI POP PUSH1 0x27 DUP5 PUSH1 0xFF AND GT ISZERO JUMPDEST ISZERO PUSH2 0x1812 JUMPI POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0xA DUP2 MSTORE PUSH10 0x67657453746576652829 PUSH1 0xB0 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x1912 JUMP JUMPDEST DUP4 PUSH1 0xFF AND PUSH1 0x27 LT DUP1 ISZERO PUSH2 0x1829 JUMPI POP PUSH1 0x28 DUP5 PUSH1 0xFF AND GT ISZERO JUMPDEST ISZERO PUSH2 0x1856 JUMPI POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0xB DUP2 MSTORE PUSH11 0x676574436F736D69632829 PUSH1 0xA8 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x1912 JUMP JUMPDEST DUP4 PUSH1 0xFF AND PUSH1 0x28 LT DUP1 ISZERO PUSH2 0x186D JUMPI POP PUSH1 0x29 DUP5 PUSH1 0xFF AND GT ISZERO JUMPDEST ISZERO PUSH2 0x189A JUMPI POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0xB DUP2 MSTORE PUSH11 0x6765745069726174652829 PUSH1 0xA8 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x1912 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x125B9D985B1A590812185B99081259 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x294 JUMP JUMPDEST PUSH1 0x2 DUP6 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x18E8 JUMPI PUSH2 0x18E8 PUSH2 0x25A2 JUMP JUMPDEST EQ ISZERO PUSH2 0x10ED JUMPI POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0xB DUP2 MSTORE PUSH11 0x676574506F7461746F2829 PUSH1 0xA8 SHL PUSH1 0x20 DUP3 ADD MSTORE JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x4 DUP2 MSTORE PUSH1 0x24 DUP2 ADD SWAP2 DUP3 SWAP1 MSTORE PUSH1 0x0 SWAP2 DUP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP2 PUSH2 0x193D SWAP1 DUP7 SWAP1 PUSH2 0x1FCA JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 SWAP1 SUB SWAP1 SWAP2 KECCAK256 PUSH1 0x20 DUP4 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 MSTORE MLOAD PUSH2 0x1974 SWAP2 SWAP1 PUSH2 0x1FCA JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS STATICCALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x19AF JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x19B4 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 PUSH2 0x19FB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x6661696C656420746F206765742064617461 PUSH1 0x70 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x294 JUMP JUMPDEST PUSH2 0x1A17 DUP2 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x1A12 SWAP2 SWAP1 PUSH2 0x1D60 JUMP JUMPDEST PUSH2 0x1CDA JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1A2D DUP3 PUSH2 0xB9A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1A3D SWAP2 SWAP1 PUSH2 0x23B2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1A5E DUP3 PUSH2 0x2EF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1A3D SWAP2 SWAP1 PUSH2 0x2113 JUMP JUMPDEST PUSH1 0x60 DUP2 PUSH2 0x1A92 JUMPI POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x1 DUP2 MSTORE PUSH1 0x3 PUSH1 0xFC SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x0 JUMPDEST DUP2 ISZERO PUSH2 0x1ABC JUMPI DUP1 PUSH2 0x1AA6 DUP2 PUSH2 0x2527 JUMP JUMPDEST SWAP2 POP PUSH2 0x1AB5 SWAP1 POP PUSH1 0xA DUP4 PUSH2 0x24AD JUMP JUMPDEST SWAP2 POP PUSH2 0x1A96 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x1AD6 JUMPI PUSH2 0x1AD6 PUSH2 0x25CE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1B00 JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP JUMPDEST DUP5 ISZERO PUSH2 0x1B6B JUMPI PUSH2 0x1B15 PUSH1 0x1 DUP4 PUSH2 0x24E0 JUMP JUMPDEST SWAP2 POP PUSH2 0x1B22 PUSH1 0xA DUP7 PUSH2 0x2562 JUMP JUMPDEST PUSH2 0x1B2D SWAP1 PUSH1 0x30 PUSH2 0x2495 JUMP JUMPDEST PUSH1 0xF8 SHL DUP2 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1B42 JUMPI PUSH2 0x1B42 PUSH2 0x25B8 JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH2 0x1B64 PUSH1 0xA DUP7 PUSH2 0x24AD JUMP JUMPDEST SWAP5 POP PUSH2 0x1B04 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 MLOAD PUSH1 0x0 EQ ISZERO PUSH2 0x1B93 JUMPI POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP2 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x40 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2685 PUSH1 0x40 SWAP2 CODECOPY SWAP1 POP PUSH1 0x0 PUSH1 0x3 DUP5 MLOAD PUSH1 0x2 PUSH2 0x1BC2 SWAP2 SWAP1 PUSH2 0x2495 JUMP JUMPDEST PUSH2 0x1BCC SWAP2 SWAP1 PUSH2 0x24AD JUMP JUMPDEST PUSH2 0x1BD7 SWAP1 PUSH1 0x4 PUSH2 0x24C1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1BE6 DUP3 PUSH1 0x20 PUSH2 0x2495 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x1BFD JUMPI PUSH2 0x1BFD PUSH2 0x25CE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1C27 JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP DUP2 DUP2 MSTORE PUSH1 0x1 DUP4 ADD DUP6 DUP7 MLOAD DUP2 ADD PUSH1 0x20 DUP5 ADD JUMPDEST DUP2 DUP4 LT ISZERO PUSH2 0x1C95 JUMPI PUSH1 0x3 SWAP3 DUP4 ADD DUP1 MLOAD PUSH1 0x3F PUSH1 0x12 DUP3 SWAP1 SHR DUP2 AND DUP8 ADD MLOAD PUSH1 0xF8 SWAP1 DUP2 SHL DUP6 MSTORE PUSH1 0xC DUP4 SWAP1 SHR DUP3 AND DUP9 ADD MLOAD DUP2 SHL PUSH1 0x1 DUP7 ADD MSTORE PUSH1 0x6 DUP4 SWAP1 SHR DUP3 AND DUP9 ADD MLOAD DUP2 SHL PUSH1 0x2 DUP7 ADD MSTORE SWAP2 AND DUP7 ADD MLOAD SWAP1 SHL SWAP4 DUP3 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x4 ADD PUSH2 0x1C3B JUMP JUMPDEST PUSH1 0x3 DUP10 MLOAD MOD PUSH1 0x1 DUP2 EQ PUSH2 0x1CAF JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x1CC0 JUMPI PUSH2 0x1CCC JUMP JUMPDEST PUSH2 0x3D3D PUSH1 0xF0 SHL PUSH1 0x1 NOT DUP4 ADD MSTORE PUSH2 0x1CCC JUMP JUMPDEST PUSH1 0x3D PUSH1 0xF8 SHL PUSH1 0x0 NOT DUP4 ADD MSTORE JUMPDEST POP SWAP4 SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1A3D SWAP2 SWAP1 PUSH2 0x2051 JUMP JUMPDEST DUP1 CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1CFD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH4 0xFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x1CFD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x1CFD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1D3A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH1 0x3 DUP2 LT PUSH2 0x1D49 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 POP PUSH2 0x1D57 PUSH1 0x20 DUP5 ADD PUSH2 0x1D16 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1D72 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x1D89 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP5 ADD SWAP2 POP DUP5 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1D9D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP2 DUP2 GT ISZERO PUSH2 0x1DAF JUMPI PUSH2 0x1DAF PUSH2 0x25CE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x1DD7 JUMPI PUSH2 0x1DD7 PUSH2 0x25CE JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP8 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0x1DF0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1A17 DUP4 PUSH1 0x20 DUP4 ADD PUSH1 0x20 DUP9 ADD PUSH2 0x24F7 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x1E1C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP8 CALLDATALOAD PUSH2 0xFFFF DUP2 AND DUP2 EQ PUSH2 0x1E2E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP7 POP PUSH2 0x1E3C PUSH1 0x20 DUP10 ADD PUSH2 0x1D16 JUMP JUMPDEST SWAP6 POP PUSH2 0x1E4A PUSH1 0x40 DUP10 ADD PUSH2 0x1D16 JUMP JUMPDEST SWAP5 POP PUSH2 0x1E58 PUSH1 0x60 DUP10 ADD PUSH2 0x1CED JUMP JUMPDEST SWAP4 POP PUSH2 0x1E66 PUSH1 0x80 DUP10 ADD PUSH2 0x1D02 JUMP JUMPDEST SWAP3 POP PUSH2 0x1E74 PUSH1 0xA0 DUP10 ADD PUSH2 0x1CED JUMP JUMPDEST SWAP2 POP PUSH2 0x1E82 PUSH1 0xC0 DUP10 ADD PUSH2 0x1D16 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1EA2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1EAB DUP3 PUSH2 0x1D16 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1EC5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1ECE DUP4 PUSH2 0x1D16 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1EEA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1F0D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1F16 DUP7 PUSH2 0x1D16 JUMP JUMPDEST SWAP5 POP PUSH2 0x1F24 PUSH1 0x20 DUP8 ADD PUSH2 0x1D16 JUMP JUMPDEST SWAP4 POP PUSH2 0x1F32 PUSH1 0x40 DUP8 ADD PUSH2 0x1CED JUMP JUMPDEST SWAP3 POP PUSH2 0x1F40 PUSH1 0x60 DUP8 ADD PUSH2 0x1D02 JUMP JUMPDEST SWAP2 POP PUSH2 0x1F4E PUSH1 0x80 DUP8 ADD PUSH2 0x1CED JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1F70 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1F79 DUP6 PUSH2 0x1D16 JUMP JUMPDEST SWAP4 POP PUSH2 0x1F87 PUSH1 0x20 DUP7 ADD PUSH2 0x1D16 JUMP JUMPDEST SWAP3 POP PUSH2 0x1F95 PUSH1 0x40 DUP7 ADD PUSH2 0x1CED JUMP JUMPDEST SWAP2 POP PUSH2 0x1FA3 PUSH1 0x60 DUP7 ADD PUSH2 0x1D16 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD PUSH2 0x1FC0 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x24F7 JUMP JUMPDEST SWAP3 SWAP1 SWAP3 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x1FDC DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x24F7 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP7 MLOAD PUSH2 0x1FF8 DUP2 DUP5 PUSH1 0x20 DUP12 ADD PUSH2 0x24F7 JUMP JUMPDEST DUP7 MLOAD SWAP1 DUP4 ADD SWAP1 PUSH2 0x200C DUP2 DUP4 PUSH1 0x20 DUP12 ADD PUSH2 0x24F7 JUMP JUMPDEST DUP7 MLOAD SWAP2 ADD SWAP1 PUSH2 0x201F DUP2 DUP4 PUSH1 0x20 DUP11 ADD PUSH2 0x24F7 JUMP JUMPDEST DUP6 MLOAD SWAP2 ADD SWAP1 PUSH2 0x2032 DUP2 DUP4 PUSH1 0x20 DUP10 ADD PUSH2 0x24F7 JUMP JUMPDEST DUP5 MLOAD SWAP2 ADD SWAP1 PUSH2 0x2045 DUP2 DUP4 PUSH1 0x20 DUP9 ADD PUSH2 0x24F7 JUMP JUMPDEST ADD SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x3C696D6167652077696474683D22363022206865696768743D2236302220696D DUP2 MSTORE PUSH32 0x6167652D72656E646572696E673D22706978656C617465642220707265736572 PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x7665417370656374526174696F3D22784D6964594D69642220786C696E6B3A68 PUSH1 0x40 DUP3 ADD MSTORE PUSH27 0x1C99598F4899185D184E9A5B5859D94BDC1B99CED8985CD94D8D0B PUSH1 0x2A SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x0 DUP3 MLOAD PUSH2 0x20F9 DUP2 PUSH1 0x7B DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x24F7 JUMP JUMPDEST PUSH3 0x11179F PUSH1 0xE9 SHL PUSH1 0x7B SWAP4 SWAP1 SWAP2 ADD SWAP3 DUP4 ADD MSTORE POP PUSH1 0x7E ADD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x7B2274726169745F74797065223A2248616E642054797065222C202276616C75 DUP2 MSTORE PUSH5 0x32911D1011 PUSH1 0xD9 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 DUP3 MLOAD PUSH2 0x2159 DUP2 PUSH1 0x25 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x24F7 JUMP JUMPDEST PUSH2 0x227D PUSH1 0xF0 SHL PUSH1 0x25 SWAP4 SWAP1 SWAP2 ADD SWAP3 DUP4 ADD MSTORE POP PUSH1 0x27 ADD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH17 0x7B226E616D65223A2022546F6B656E2023 PUSH1 0x78 SHL DUP2 MSTORE DUP4 MLOAD PUSH1 0x0 SWAP1 PUSH2 0x219F DUP2 PUSH1 0x11 DUP6 ADD PUSH1 0x20 DUP10 ADD PUSH2 0x24F7 JUMP JUMPDEST PUSH32 0x222C20226465736372697074696F6E223A2022412073696D706C6520546F6B65 PUSH1 0x11 SWAP2 DUP5 ADD SWAP2 DUP3 ADD MSTORE PUSH32 0x6E222C2022696D616765223A2022646174613A696D6167652F7376672B786D6C PUSH1 0x31 DUP3 ADD MSTORE PUSH8 0xED8985CD94D8D0B PUSH1 0xC2 SHL PUSH1 0x51 DUP3 ADD MSTORE DUP5 MLOAD PUSH2 0x2213 DUP2 PUSH1 0x59 DUP5 ADD PUSH1 0x20 DUP10 ADD PUSH2 0x24F7 JUMP JUMPDEST PUSH3 0x11161 PUSH1 0xED SHL PUSH1 0x59 SWAP3 SWAP1 SWAP2 ADD SWAP2 DUP3 ADD MSTORE DUP4 MLOAD PUSH2 0x2237 DUP2 PUSH1 0x5C DUP5 ADD PUSH1 0x20 DUP9 ADD PUSH2 0x24F7 JUMP JUMPDEST PUSH1 0x7D PUSH1 0xF8 SHL PUSH1 0x5C SWAP3 SWAP1 SWAP2 ADD SWAP2 DUP3 ADD MSTORE PUSH1 0x5D ADD SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH15 0x2261747472696275746573223A205B PUSH1 0x88 SHL DUP2 MSTORE DUP6 MLOAD PUSH1 0x0 SWAP1 PUSH2 0x227D DUP2 PUSH1 0xF DUP6 ADD PUSH1 0x20 DUP12 ADD PUSH2 0x24F7 JUMP JUMPDEST PUSH1 0xB PUSH1 0xFA SHL PUSH1 0xF SWAP2 DUP5 ADD SWAP2 DUP3 ADD MSTORE DUP7 MLOAD PUSH2 0x229E DUP2 PUSH1 0x10 DUP5 ADD PUSH1 0x20 DUP12 ADD PUSH2 0x24F7 JUMP JUMPDEST PUSH32 0x2C7B2274726169745F74797065223A2022506F7461746F222C202276616C7565 PUSH1 0x10 SWAP3 SWAP1 SWAP2 ADD SWAP2 DUP3 ADD MSTORE PUSH3 0x111D11 PUSH1 0xE9 SHL PUSH1 0x30 DUP3 ADD MSTORE DUP6 MLOAD PUSH2 0x22E8 DUP2 PUSH1 0x33 DUP5 ADD PUSH1 0x20 DUP11 ADD PUSH2 0x24F7 JUMP JUMPDEST PUSH32 0x227D2C7B22646973706C61795F74797065223A20226E756D626572222C227472 PUSH1 0x33 SWAP3 SWAP1 SWAP2 ADD SWAP2 DUP3 ADD MSTORE PUSH32 0x6169745F74797065223A202247656E65726174696F6E222C202276616C756522 PUSH1 0x53 DUP3 ADD MSTORE PUSH2 0x1D11 PUSH1 0xF1 SHL PUSH1 0x73 DUP3 ADD MSTORE PUSH2 0x23A6 PUSH2 0x2397 PUSH2 0x2391 PUSH2 0x235A PUSH1 0x75 DUP6 ADD DUP10 PUSH2 0x1FAE JUMP JUMPDEST PUSH32 0x227D2C7B2274726169745F74797065223A2022416374697665222C202276616C DUP2 MSTORE PUSH5 0x3AB2911D11 PUSH1 0xD9 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x25 ADD SWAP1 JUMP JUMPDEST DUP7 PUSH2 0x1FAE JUMP JUMPDEST PUSH3 0x227D5D PUSH1 0xE8 SHL DUP2 MSTORE PUSH1 0x3 ADD SWAP1 JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x7B2274726169745F74797065223A224261636B67726F756E64222C202276616C DUP2 MSTORE PUSH5 0x3AB2911D11 PUSH1 0xD9 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 DUP3 MLOAD PUSH2 0x2159 DUP2 PUSH1 0x25 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x24F7 JUMP JUMPDEST PUSH32 0x646174613A6170706C69636174696F6E2F6A736F6E3B6261736536342C000000 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD PUSH2 0x2430 DUP2 PUSH1 0x1D DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x24F7 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD PUSH1 0x1D ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x245C DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x24F7 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xB SWAP1 DUP3 ADD MSTORE PUSH11 0x3737BA1036B0B730B3B2B9 PUSH1 0xA9 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x24A8 JUMPI PUSH2 0x24A8 PUSH2 0x2576 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x24BC JUMPI PUSH2 0x24BC PUSH2 0x258C JUMP JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x24DB JUMPI PUSH2 0x24DB PUSH2 0x2576 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x24F2 JUMPI PUSH2 0x24F2 PUSH2 0x2576 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2512 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x24FA JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x2521 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x253B JUMPI PUSH2 0x253B PUSH2 0x2576 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND PUSH1 0xFF DUP2 EQ ISZERO PUSH2 0x2559 JUMPI PUSH2 0x2559 PUSH2 0x2576 JUMP JUMPDEST PUSH1 0x1 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x2571 JUMPI PUSH2 0x2571 PUSH2 0x258C JUMP JUMPDEST POP MOD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID EXTCODECOPY PUSH20 0x76672069643D226261636B6275726E6572222077 PUSH10 0x6474683D223130302522 KECCAK256 PUSH9 0x65696768743D223130 ADDRESS 0x25 0x22 KECCAK256 PUSH23 0x657273696F6E3D22312E31222076696577426F783D2230 KECCAK256 ADDRESS KECCAK256 CALLDATASIZE ADDRESS KECCAK256 CALLDATASIZE ADDRESS 0x22 KECCAK256 PUSH25 0x6D6C6E733D22687474703A2F2F7777772E77332E6F72672F32 ADDRESS ADDRESS ADDRESS 0x2F PUSH20 0x76672220786D6C6E733A786C696E6B3D22687474 PUSH17 0x3A2F2F7777772E77332E6F72672F313939 CODECOPY 0x2F PUSH25 0x6C696E6B223E4142434445464748494A4B4C4D4E4F50515253 SLOAD SSTORE JUMP JUMPI PC MSIZE GAS PUSH2 0x6263 PUSH5 0x6566676869 PUSH11 0x6B6C6D6E6F707172737475 PUSH23 0x7778797A303132333435363738392B2F3C7374796C653E 0x23 PUSH3 0x61636B PUSH3 0x75726E PUSH6 0x727B73686170 PUSH6 0x2D72656E6465 PUSH19 0x696E673A20637269737065646765733B20696D PUSH2 0x6765 0x2D PUSH19 0x656E646572696E673A202D7765626B69742D63 PUSH19 0x6973702D65646765733B20696D6167652D7265 PUSH15 0x646572696E673A202D6D6F7A2D6372 PUSH10 0x73702D65646765733B20 PUSH10 0x6D6167652D72656E6465 PUSH19 0x696E673A2063726973702D65646765733B2069 PUSH14 0x6167652D72656E646572696E673A KECCAK256 PUSH17 0x6978656C617465643B202D6D732D696E74 PUSH6 0x72706F6C6174 PUSH10 0x6F6E2D6D6F64653A206E PUSH6 0x61726573742D PUSH15 0x65696768626F723B7D3C2F7374796C PUSH6 0x3E3C2F737667 RETURNDATACOPY LOG1 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP EXP ",
              "sourceMap": "92:14150:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;410:203;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3844:220;;;;;;:::i;:::-;;:::i;:::-;;11884:2355;;;;;;:::i;:::-;;:::i;907:512::-;;;;;;:::i;:::-;;:::i;620:278::-;;;:::i;3609:227::-;;;;;;:::i;:::-;;:::i;10904:972::-;;;;;;:::i;:::-;;:::i;145:22::-;;;;;-1:-1:-1;;;;;145:22:1;;;;;;-1:-1:-1;;;;;12488:32:2;;;12470:51;;12458:2;12443:18;145:22:1;12324:203:2;360:41:1;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;360:41:1;;;9173:872;;;;;;:::i;:::-;;:::i;310:43::-;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;310:43:1;;;2019:1397;;;;;;:::i;:::-;;:::i;4072:221::-;;;;;;:::i;:::-;;:::i;259:44::-;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;259:44:1;;;4768:3268;;;;;;:::i;:::-;;:::i;410:203::-;;;;;;;;;;;;;;;;;;;:::o;3844:220::-;3933:7;;-1:-1:-1;;;;;3933:7:1;3919:10;:21;3911:45;;;;-1:-1:-1;;;3911:45:1;;;;;;;:::i;:::-;;;;;;;;;3985:1;3969:88;3994:5;3988:11;;:2;:11;;;3969:88;;4022:14;;;;;;;:10;:14;;;;;:23;;-1:-1:-1;;;;;;4022:23:1;-1:-1:-1;;;;;4022:23:1;;;;;:14;4001:4;4022:14;4001:4;:::i;:::-;;;;3969:88;;;;3844:220;;:::o;11884:2355::-;11936:13;11972:2;11966;:8;;;11962:2231;;12000:2;11995;:7;;;11991:429;;;12032:1;12027:2;:6;;;12023:206;;;12067:1;12062:2;:6;;;12058:97;;;12104:2;:7;;12110:1;12104:7;:27;;;;;;;;;;;;;;;-1:-1:-1;;;12104:27:1;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;12104:27:1;;;;12097:34;11884:2355;-1:-1:-1;;11884:2355:1:o;12058:97::-;12184:2;:7;;12190:1;12184:7;:25;;;;;;;;;;;;;;;-1:-1:-1;;;12184:25:1;;;;;12023:206;12256:1;12251:2;:6;;;12247:85;;;12289:2;:7;;12295:1;12289:7;:23;;;;;;;;;;;;;;;-1:-1:-1;;;12289:23:1;;;;;;-1:-1:-1;;12289:23:1;;;;;;;;;;;;-1:-1:-1;;;12289:23:1;;;;;11884:2355::o;12247:85::-;12357:2;:7;;12363:1;12357:7;:47;;12377:2;:7;;12383:1;12377:7;:27;;;;;;;;;;;;;;;-1:-1:-1;;;12377:27:1;;;12357:47;;12377:27;;;;;;;;;;;;;;-1:-1:-1;;;12377:27:1;;;12357:47;;;-1:-1:-1;;12357:47:1;;;;;;;;;;;;-1:-1:-1;;;12357:47:1;;;;;11884:2355::o;11991:429::-;12444:2;12438;:8;;;12434:239;;12476:2;12471;:7;;;12467:112;;;12510:2;:8;;12516:2;12510:8;:49;;12531:2;:8;;12537:2;12531:8;:28;;;;;;;;;;;;;;;-1:-1:-1;;;12531:28:1;;;12510:49;;12531:28;;;;;;;;;;;;;;-1:-1:-1;;;12531:28:1;;;12510:49;;12467:112;12604:2;:8;;12610:2;12604:8;:53;;12625:2;:8;;12631:2;12625:8;:32;;;;;;;;;;;;;;;-1:-1:-1;;;12625:32:1;;;12604:53;;;-1:-1:-1;;12604:53:1;;;;;;;;;;;;-1:-1:-1;;;12604:53:1;;;;;11884:2355::o;12434:239::-;12697:2;12691;:8;;;12687:309;;12729:2;12724;:7;;;12720:99;;;12763:2;:8;;12769:2;12763:8;:36;;;;;;;;;;;;;;;-1:-1:-1;;;12763:36:1;;;;;;-1:-1:-1;;12763:36:1;;;;;;;;;;;;-1:-1:-1;;;12763:36:1;;;;;11884:2355::o;12720:99::-;12865:2;:8;;12871:2;12865:8;:115;;12891:2;:8;;12897:2;12891:8;:89;;;;;;;;;;;;;;;-1:-1:-1;;;12891:89:1;;;12865:115;;12891:89;;;;;;;;;;;;;;-1:-1:-1;;;12891:89:1;;;12865:115;;;-1:-1:-1;;12865:115:1;;;;;;;;;;;;-1:-1:-1;;;12865:115:1;;;;;11884:2355::o;12687:309::-;13020:2;13014;:8;;;13010:312;;13052:2;13047;:7;;;13043:103;;;13086:2;:8;;13092:2;13086:8;:40;;;;;;;;;;;;;;;-1:-1:-1;;;13086:40:1;;;;;;-1:-1:-1;;13086:40:1;;;;;;;;;;;;-1:-1:-1;;;13086:40:1;;;;;11884:2355::o;13043:103::-;13192:2;:8;;13198:2;13192:8;:114;;13218:2;:8;;13224:2;13218:8;:88;;;;;;;;;;;;;;;-1:-1:-1;;;13218:88:1;;;13192:114;;13218:88;;;;;;;;;;;;;;-1:-1:-1;;;13218:88:1;;;13192:114;;;-1:-1:-1;;13192:114:1;;;;;;;;;;;;-1:-1:-1;;;13192:114:1;;;;;11884:2355::o;13010:312::-;13346:2;13340;:8;;;13336:263;;13378:2;13373;:7;;;13369:105;;;13412:2;:8;;13418:2;13412:8;:42;;;;;;;;;;;;;;;-1:-1:-1;;;13412:42:1;;;;;;-1:-1:-1;;13412:42:1;;;;;;;;;;;;-1:-1:-1;;;13412:42:1;;;;;11884:2355::o;13369:105::-;13520:2;:8;;13526:2;13520:8;:63;;13542:2;:8;;13548:2;13542:8;:41;;;;;;;;;;;;;;;-1:-1:-1;;;13542:41:1;;;13520:63;;13542:41;;;;;;;;;;;;;;-1:-1:-1;;;13542:41:1;;;13520:63;;;-1:-1:-1;;13520:63:1;;;;;;;;;;;;-1:-1:-1;;;13520:63:1;;;;;11884:2355::o;13336:263::-;13623:2;13617;:8;;;13613:86;;13653:2;:8;;13659:2;13653:8;:30;;;;;;;;;;;;;;;-1:-1:-1;;;13653:30:1;;;;;;-1:-1:-1;;13653:30:1;;;;;;;;;;;;-1:-1:-1;;;13653:30:1;;;;;11884:2355::o;13613:86::-;13724:2;13718;:8;;;13714:87;;13754:2;:8;;13760:2;13754:8;:31;;;;;;;;;;;;;;;-1:-1:-1;;;13754:31:1;;;;;;-1:-1:-1;;13754:31:1;;;;;;;;;;;;-1:-1:-1;;;13754:31:1;;;;;11884:2355::o;13714:87::-;13825:2;13819;:8;;;13815:91;;13855:2;:8;;13861:2;13855:8;:35;;;;;;;;;;;;;;;-1:-1:-1;;;13855:35:1;;;;;;-1:-1:-1;;13855:35:1;;;;;;;;;;;;-1:-1:-1;;;13855:35:1;;;;;11884:2355::o;13815:91::-;13930:2;13924;:8;;;13920:85;;13960:2;:8;;13966:2;13960:8;:29;;;;;;;;;;;;;;;-1:-1:-1;;;13960:29:1;;;;;;-1:-1:-1;;13960:29:1;;;;;;;;;;;;-1:-1:-1;;;13960:29:1;;;;;11884:2355::o;13920:85::-;14029:2;14023;:8;;;14019:85;;14059:2;:8;;14065:2;14059:8;:29;;;;;;;;;;;;;;;-1:-1:-1;;;14059:29:1;;;;;;-1:-1:-1;;14059:29:1;;;;;;;;;;;;-1:-1:-1;;;14059:29:1;;;;;11884:2355::o;14019:85::-;14122:2;:8;;14128:2;14122:8;14118:64;;;-1:-1:-1;;14151:15:1;;;;;;;;;;;;-1:-1:-1;;;14151:15:1;;;;;11884:2355::o;14118:64::-;-1:-1:-1;;14203:28:1;;;;;;;;;;;;-1:-1:-1;;;14203:28:1;;;;;11884:2355::o;907:512::-;1056:13;1166:6;;;;;;;;;;;;;;;;;1195:33;1199:15;1216:11;1195:3;:33::i;:::-;1251:31;1255:14;1271:10;1251:3;:31::i;:::-;1305:10;:43;;;;;;;;;;;;;;;;;1318:25;1322:11;1335:7;1318:3;:25::i;:::-;1371:6;;;;;;;;;;;;;;;;;1127:269;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1082:329;;907:512;;;;;;:::o;620:278::-;;;;;;;;;;;;;;;;;;;:::o;3609:227::-;3704:7;;-1:-1:-1;;;;;3704:7:1;3690:10;:21;3682:45;;;;-1:-1:-1;;;3682:45:1;;;;;;;:::i;:::-;3756:1;3740:89;3765:5;3759:11;;:2;:11;;;3740:89;;3793:15;;;;;;;:11;:15;;;;;:24;;-1:-1:-1;;;;;;3793:24:1;-1:-1:-1;;;;;3793:24:1;;;;;:15;3772:4;3793:15;3772:4;:::i;:::-;;;;3740:89;;10904:972;10962:13;10998:2;10992;:8;;;10988:842;;11026:2;11021;:7;;;11017:384;;;11058:1;11053:2;:6;;;11049:204;;;11093:1;11088:2;:6;;;11084:95;;;11130:2;:7;;11136:1;11130:7;:25;;;;;;;;;;;;;;;-1:-1:-1;;;11130:25:1;;;;;;-1:-1:-1;;11130:25:1;;;;;;;;;;;;-1:-1:-1;;;11130:25:1;;;;;10904:972::o;11084:95::-;11208:2;:7;;11214:1;11208:7;:25;;;;;;;;;;;;;;;-1:-1:-1;;;11208:25:1;;;;;11049:204;11280:1;11275:2;:6;;;11271:44;;;11290:2;:7;;11296:1;11290:7;:25;;;;;;;;;;;;;;;-1:-1:-1;;;11290:25:1;;;;;11271:44;11341:2;:7;;11347:1;11341:7;:44;;11360:2;:7;;11366:1;11360:7;:25;;;;;;;;;;;;;;;-1:-1:-1;;;11360:25:1;;;11341:44;;11360:25;;;;;;;;;;;;;;-1:-1:-1;;;11360:25:1;;;11341:44;;11017:384;11425:2;11419;:8;;;11415:233;;11457:2;11452;:7;;;11448:110;;;11491:2;:8;;11497:2;11491:8;:47;;11511:2;:8;;11517:2;11511:8;:27;;;;;;;;;;;;;;;-1:-1:-1;;;11511:27:1;;;11491:47;;11448:110;11583:2;:8;;11589:2;11583:8;:49;;11604:2;:8;;11610:2;11604:8;:28;;;;;;;;;;;;;;;-1:-1:-1;;;11604:28:1;;;11583:49;;11604:28;;;;;;;;;;;;;;-1:-1:-1;;;11604:28:1;;;11583:49;;;-1:-1:-1;;11583:49:1;;;;;;;;;;;;-1:-1:-1;;;11583:49:1;;;;;10904:972::o;11415:233::-;11671:2;11666;:7;;;11662:83;;;11701:2;:8;;11707:2;11701:8;:28;;;;;;;;;;;;;;;-1:-1:-1;;;11701:28:1;;;;;11662:83;11766:2;:8;;11772:2;11766:8;:52;;11788:2;:8;;11794:2;11788:8;:30;;;;;;;;;;;;;;;-1:-1:-1;;;11788:30:1;;;11766:52;;11788:30;;;;;;;;;;;;;;-1:-1:-1;;;11788:30:1;;;11766:52;;;-1:-1:-1;;11766:52:1;;;;;;;;;;;;-1:-1:-1;;;11766:52:1;;;;;10904:972::o;9173:872::-;9359:13;9509:36;9533:11;9509:23;:36::i;:::-;9594:29;9612:10;9594:17;:29::i;:::-;9706:10;:25;;;;;;;;;;;;;;;-1:-1:-1;;;9706:25:1;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;9706:25:1;;;;9845:21;9854:11;9845:21;;:8;:21::i;:::-;9951:9;:24;;;;;;;;;;;;;;;-1:-1:-1;;;9951:24:1;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;9951:24:1;;;;9430:592;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;9385:652;;9173:872;;;;;;;:::o;2019:1397::-;2250:13;2276:17;2296:98;2330:52;2337:11;2350:10;2362;2374:7;2330:6;:52::i;:::-;2296:13;:98::i;:::-;2276:118;;2545:829;2726:13;2735:3;2726:13;;:8;:13::i;:::-;2883:3;2961:294;3013:11;3063:10;3112;3161:11;3211:9;2961:13;:294::i;:::-;2621:703;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2545:13;:829::i;:::-;2452:941;;;;;;;;:::i;:::-;;;;;;;;;;;;;2407:1001;;;2019:1397;;;;;;;;;:::o;4072:221::-;4164:7;;-1:-1:-1;;;;;4164:7:1;4150:10;:21;4142:45;;;;-1:-1:-1;;;4142:45:1;;;;;;;:::i;:::-;4216:1;4200:86;4225:5;4219:11;;:2;:11;;;4200:86;;4253:12;;;;;;;:8;:12;;;;;:21;;-1:-1:-1;;;;;;4253:21:1;-1:-1:-1;;;;;4253:21:1;;;;;:12;4232:4;4253:12;4232:4;:::i;:::-;;;;4200:86;;4768:3268;4823:17;4853:14;;4882:4;:23;;;;;;;;:::i;:::-;;4878:298;;;-1:-1:-1;4931:15:1;;;;;;;:11;:15;;;;;;-1:-1:-1;;;;;4931:15:1;4878:298;;;4976:14;4968:4;:22;;;;;;;;:::i;:::-;;4964:212;;;-1:-1:-1;5016:14:1;;;;;;;:10;:14;;;;;;-1:-1:-1;;;;;5016:14:1;4964:212;;;5060:11;5052:4;:19;;;;;;;;:::i;:::-;;5048:128;;;-1:-1:-1;5097:12:1;;;;;;;:8;:12;;;;;;-1:-1:-1;;;;;5097:12:1;5048:128;;;5142:22;;-1:-1:-1;;;5142:22:1;;14163:2:2;5142:22:1;;;14145:21:2;14202:2;14182:18;;;14175:30;-1:-1:-1;;;14221:18:2;;;14214:42;14273:18;;5142:22:1;13961:336:2;5048:128:1;5186:17;5226:15;5218:4;:23;;;;;;;;:::i;:::-;;5214:2601;;;5267:2;5262:7;;:1;:7;;:19;;;;;5279:2;5273;:8;;;;5262:19;5258:318;;;-1:-1:-1;5302:17:1;;;;;;;;;;;;-1:-1:-1;;;5302:17:1;;;;5214:2601;;5258:318;5350:2;5345:7;;:2;:7;:19;;;;;5362:2;5356;:8;;;;5345:19;5341:235;;;-1:-1:-1;5385:18:1;;;;;;;;;;;;-1:-1:-1;;;5385:18:1;;;;5214:2601;;5341:235;5434:2;5429:7;;:2;:7;:19;;;;;5446:2;5440;:8;;;;5429:19;5425:151;;;-1:-1:-1;5469:19:1;;;;;;;;;;;;-1:-1:-1;;;5469:19:1;;;;5214:2601;;5425:151;5529:31;;-1:-1:-1;;;5529:31:1;;13122:2:2;5529:31:1;;;13104:21:2;13161:2;13141:18;;;13134:30;-1:-1:-1;;;13180:18:2;;;13173:51;13241:18;;5529:31:1;12920:345:2;5214:2601:1;5605:14;5597:4;:22;;;;;;;;:::i;:::-;;5593:2222;;;5645:2;5640:7;;:1;:7;;:18;;;;;5657:1;5651:2;:7;;;;5640:18;5636:2036;;;-1:-1:-1;5679:18:1;;;;;;;;;;;;-1:-1:-1;;;5679:18:1;;;;5593:2222;;5636:2036;5727:2;5723:6;;:1;:6;:17;;;;;5739:1;5733:2;:7;;;;5723:17;5719:1953;;;-1:-1:-1;5761:18:1;;;;;;;;;;;;-1:-1:-1;;;5761:18:1;;;;5214:2601;;5719:1953;5809:2;5805:6;;:1;:6;:18;;;;;5821:2;5815;:8;;;;5805:18;5801:1871;;;-1:-1:-1;5844:18:1;;;;;;;;;;;;-1:-1:-1;;;5844:18:1;;;;5214:2601;;5801:1871;5893:2;5888:7;;:2;:7;:19;;;;;5905:2;5899;:8;;;;5888:19;5884:1788;;;-1:-1:-1;5928:18:1;;;;;;;;;;;;-1:-1:-1;;;5928:18:1;;;;5214:2601;;5884:1788;5977:2;5972:7;;:2;:7;:19;;;;;5989:2;5983;:8;;;;5972:19;5968:1704;;;-1:-1:-1;6012:21:1;;;;;;;;;;;;-1:-1:-1;;;6012:21:1;;;;5214:2601;;5968:1704;6064:2;6059:7;;:2;:7;:19;;;;;6076:2;6070;:8;;;;6059:19;6055:1617;;;-1:-1:-1;6099:22:1;;;;;;;;;;;;-1:-1:-1;;;6099:22:1;;;;5214:2601;;6055:1617;6152:2;6147:7;;:2;:7;:19;;;;;6164:2;6158;:8;;;;6147:19;6143:1529;;;-1:-1:-1;6187:23:1;;;;;;;;;;;;-1:-1:-1;;;6187:23:1;;;;5214:2601;;6143:1529;6241:2;6236:7;;:2;:7;:19;;;;;6253:2;6247;:8;;;;6236:19;6232:1440;;;-1:-1:-1;6276:22:1;;;;;;;;;;;;-1:-1:-1;;;6276:22:1;;;;5214:2601;;6232:1440;6329:2;6324:7;;:2;:7;:19;;;;;6341:2;6335;:8;;;;6324:19;6320:1352;;;-1:-1:-1;6364:24:1;;;;;;;;;;;;-1:-1:-1;;;6364:24:1;;;;5214:2601;;6320:1352;6419:2;6414:7;;:2;:7;:19;;;;;6431:2;6425;:8;;;;6414:19;6410:1262;;;-1:-1:-1;6454:19:1;;;;;;;;;;;;-1:-1:-1;;;6454:19:1;;;;5214:2601;;6410:1262;6504:2;6499:7;;:2;:7;:19;;;;;6516:2;6510;:8;;;;6499:19;6495:1177;;;-1:-1:-1;6539:22:1;;;;;;;;;;;;-1:-1:-1;;;6539:22:1;;;;5214:2601;;6495:1177;6592:2;6587:7;;:2;:7;:19;;;;;6604:2;6598;:8;;;;6587:19;6583:1089;;;-1:-1:-1;6627:25:1;;;;;;;;;;;;-1:-1:-1;;;6627:25:1;;;;5214:2601;;6583:1089;6683:2;6678:7;;:2;:7;:19;;;;;6695:2;6689;:8;;;;6678:19;6674:998;;;-1:-1:-1;6718:18:1;;;;;;;;;;;;-1:-1:-1;;;6718:18:1;;;;5214:2601;;6674:998;6767:2;6762:7;;:2;:7;:19;;;;;6779:2;6773;:8;;;;6762:19;6758:914;;;-1:-1:-1;6802:20:1;;;;;;;;;;;;-1:-1:-1;;;6802:20:1;;;;5214:2601;;6758:914;6853:2;6848:7;;:2;:7;:19;;;;;6865:2;6859;:8;;;;6848:19;6844:828;;;-1:-1:-1;6888:18:1;;;;;;;;;;;;-1:-1:-1;;;6888:18:1;;;;5214:2601;;6844:828;6937:2;6932:7;;:2;:7;:19;;;;;6949:2;6943;:8;;;;6932:19;6928:744;;;-1:-1:-1;6972:21:1;;;;;;;;;;;;-1:-1:-1;;;6972:21:1;;;;5214:2601;;6928:744;7024:2;7019:7;;:2;:7;:19;;;;;7036:2;7030;:8;;;;7019:19;7015:657;;;-1:-1:-1;7059:22:1;;;;;;;;;;;;-1:-1:-1;;;7059:22:1;;;;5214:2601;;7015:657;7112:2;7107:7;;:2;:7;:19;;;;;7124:2;7118;:8;;;;7107:19;7103:569;;;-1:-1:-1;7147:20:1;;;;;;;;;;;;-1:-1:-1;;;7147:20:1;;;;5214:2601;;7103:569;7198:2;7193:7;;:2;:7;:19;;;;;7210:2;7204;:8;;;;7193:19;7189:483;;;-1:-1:-1;7233:17:1;;;;;;;;;;;;-1:-1:-1;;;7233:17:1;;;;5214:2601;;7189:483;7281:2;7276:7;;:2;:7;:19;;;;;7293:2;7287;:8;;;;7276:19;7272:400;;;-1:-1:-1;7316:20:1;;;;;;;;;;;;-1:-1:-1;;;7316:20:1;;;;5214:2601;;7272:400;7367:2;7362:7;;:2;:7;:19;;;;;7379:2;7373;:8;;;;7362:19;7358:314;;;-1:-1:-1;7402:18:1;;;;;;;;;;;;-1:-1:-1;;;7402:18:1;;;;5214:2601;;7358:314;7451:2;7446:7;;:2;:7;:19;;;;;7463:2;7457;:8;;;;7446:19;7442:230;;;-1:-1:-1;7486:19:1;;;;;;;;;;;;-1:-1:-1;;;7486:19:1;;;;5214:2601;;7442:230;7536:2;7531:7;;:2;:7;:19;;;;;7548:2;7542;:8;;;;7531:19;7527:145;;;-1:-1:-1;7571:19:1;;;;;;;;;;;;-1:-1:-1;;;7571:19:1;;;;5214:2601;;7527:145;7631:25;;-1:-1:-1;;;7631:25:1;;13819:2:2;7631:25:1;;;13801:21:2;13858:2;13838:18;;;13831:30;-1:-1:-1;;;13877:18:2;;;13870:45;13932:18;;7631:25:1;13617:339:2;5593:2222:1;7701:11;7693:4;:19;;;;;;;;:::i;:::-;;7689:126;;;-1:-1:-1;7729:19:1;;;;;;;;;;;;-1:-1:-1;;;7729:19:1;;;;7689:126;7890:28;;;;;;;;;;;;;7826:9;;;;-1:-1:-1;;;;;7858:17:1;;;7890:28;;7914:3;;7890:28;:::i;:::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7890:28:1;-1:-1:-1;;;;;;7890:28:1;;;;;;;;;7858:71;;;7890:28;7858:71;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7825:104;;;;7948:4;7940:35;;;;-1:-1:-1;;;7940:35:1;;13472:2:2;7940:35:1;;;13454:21:2;13511:2;13491:18;;;13484:30;-1:-1:-1;;;13530:18:2;;;13523:48;13588:18;;7940:35:1;13270:342:2;7940:35:1;7993;8012:4;8001:26;;;;;;;;;;;;:::i;:::-;7993:7;:35::i;:::-;7986:42;4768:3268;-1:-1:-1;;;;;;;4768:3268:1:o;10053:362::-;10144:13;10316:30;10334:11;10316:17;:30::i;:::-;10215:177;;;;;;;;:::i;:::-;;;;;;;;;;;;;10170:237;;10053:362;;;:::o;10423:348::-;10507:13;10679:23;10691:10;10679:11;:23::i;:::-;10578:170;;;;;;;;:::i;8442:723::-;8498:13;8719:10;8715:53;;-1:-1:-1;;8746:10:1;;;;;;;;;;;;-1:-1:-1;;;8746:10:1;;;;;8442:723::o;8715:53::-;8793:5;8778:12;8834:78;8841:9;;8834:78;;8867:8;;;;:::i;:::-;;-1:-1:-1;8890:10:1;;-1:-1:-1;8898:2:1;8890:10;;:::i;:::-;;;8834:78;;;8922:19;8954:6;-1:-1:-1;;;;;8944:17:1;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;8944:17:1;;8922:39;;8972:154;8979:10;;8972:154;;9006:11;9016:1;9006:11;;:::i;:::-;;-1:-1:-1;9075:10:1;9083:2;9075:5;:10;:::i;:::-;9062:24;;:2;:24;:::i;:::-;9049:39;;9032:6;9039;9032:14;;;;;;;;:::i;:::-;;;;:56;-1:-1:-1;;;;;9032:56:1;;;;;;;;-1:-1:-1;9103:11:1;9112:2;9103:11;;:::i;:::-;;;8972:154;;;9150:6;8442:723;-1:-1:-1;;;;8442:723:1:o;14584:2256::-;14642:13;14672:4;:11;14687:1;14672:16;14668:31;;;-1:-1:-1;;14690:9:1;;;;;;;;;-1:-1:-1;14690:9:1;;;14584:2256::o;14668:31::-;14751:19;14773:5;;;;;;;;;;;;;;;;;14751:27;;14830:18;14876:1;14857:4;:11;14871:1;14857:15;;;;:::i;:::-;14856:21;;;;:::i;:::-;14851:27;;:1;:27;:::i;:::-;14830:48;-1:-1:-1;14961:20:1;14995:15;14830:48;15008:2;14995:15;:::i;:::-;-1:-1:-1;;;;;14984:27:1;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;14984:27:1;;14961:50;;15108:10;15100:6;15093:26;15203:1;15196:5;15192:13;15262:4;15313;15307:11;15298:7;15294:25;15409:2;15401:6;15397:15;15482:1045;15517:6;15508:7;15505:19;15482:1045;;;15587:1;15574:15;;;15655:14;;15838:4;15826:2;15822:14;;;15818:25;;15804:40;;15798:47;15793:3;15789:57;;;15728:137;;16029:2;16025:14;;;16021:25;;16007:40;;16001:47;15992:57;;15911:1;15896:17;;15931:137;16232:1;16228:13;;;16224:24;;16210:39;;16204:46;16195:56;;16099:17;;;16134:136;16426:16;;16412:31;;16406:38;16397:48;;16301:17;;;16336:128;;;;16495:17;;15482:1045;;;16600:1;16593:4;16587:11;16583:19;16621:1;16616:84;;;;16719:1;16714:82;;;;16576:220;;16616:84;-1:-1:-1;;;;;16649:17:1;;16642:43;16616:84;;16714:82;-1:-1:-1;;;;;16747:17:1;;16740:41;16576:220;-1:-1:-1;16826:6:1;;14584:2256;-1:-1:-1;;;;;;;;14584:2256:1:o;8044:390::-;8103:13;8361:3;8174:237;;;;;;;;:::i;14:160:2:-;79:20;;135:13;;128:21;118:32;;108:60;;164:1;161;154:12;108:60;14:160;;;:::o;179:163::-;246:20;;306:10;295:22;;285:33;;275:61;;332:1;329;322:12;347:156;413:20;;473:4;462:16;;452:27;;442:55;;493:1;490;483:12;508:334;582:6;590;643:2;631:9;622:7;618:23;614:32;611:52;;;659:1;656;649:12;611:52;698:9;685:23;737:1;730:5;727:12;717:40;;753:1;750;743:12;717:40;776:5;-1:-1:-1;800:36:2;832:2;817:18;;800:36;:::i;:::-;790:46;;508:334;;;;;:::o;847:884::-;927:6;980:2;968:9;959:7;955:23;951:32;948:52;;;996:1;993;986:12;948:52;1029:9;1023:16;-1:-1:-1;;;;;1099:2:2;1091:6;1088:14;1085:34;;;1115:1;1112;1105:12;1085:34;1153:6;1142:9;1138:22;1128:32;;1198:7;1191:4;1187:2;1183:13;1179:27;1169:55;;1220:1;1217;1210:12;1169:55;1249:2;1243:9;1271:2;1267;1264:10;1261:36;;;1277:18;;:::i;:::-;1352:2;1346:9;1320:2;1406:13;;-1:-1:-1;;1402:22:2;;;1426:2;1398:31;1394:40;1382:53;;;1450:18;;;1470:22;;;1447:46;1444:72;;;1496:18;;:::i;:::-;1536:10;1532:2;1525:22;1571:2;1563:6;1556:18;1611:7;1606:2;1601;1597;1593:11;1589:20;1586:33;1583:53;;;1632:1;1629;1622:12;1583:53;1645:55;1697:2;1692;1684:6;1680:15;1675:2;1671;1667:11;1645:55;:::i;1736:694::-;1835:6;1843;1851;1859;1867;1875;1883;1936:3;1924:9;1915:7;1911:23;1907:33;1904:53;;;1953:1;1950;1943:12;1904:53;1992:9;1979:23;2042:6;2035:5;2031:18;2024:5;2021:29;2011:57;;2064:1;2061;2054:12;2011:57;2087:5;-1:-1:-1;2111:36:2;2143:2;2128:18;;2111:36;:::i;:::-;2101:46;;2166:36;2198:2;2187:9;2183:18;2166:36;:::i;:::-;2156:46;;2221:35;2252:2;2241:9;2237:18;2221:35;:::i;:::-;2211:45;;2275:38;2308:3;2297:9;2293:19;2275:38;:::i;:::-;2265:48;;2332:36;2363:3;2352:9;2348:19;2332:36;:::i;:::-;2322:46;;2387:37;2419:3;2408:9;2404:19;2387:37;:::i;:::-;2377:47;;1736:694;;;;;;;;;;:::o;2435:182::-;2492:6;2545:2;2533:9;2524:7;2520:23;2516:32;2513:52;;;2561:1;2558;2551:12;2513:52;2584:27;2601:9;2584:27;:::i;:::-;2574:37;2435:182;-1:-1:-1;;;2435:182:2:o;2622:356::-;2688:6;2696;2749:2;2737:9;2728:7;2724:23;2720:32;2717:52;;;2765:1;2762;2755:12;2717:52;2788:27;2805:9;2788:27;:::i;:::-;2778:37;-1:-1:-1;2865:2:2;2850:18;;2837:32;-1:-1:-1;;;;;2898:31:2;;2888:42;;2878:70;;2944:1;2941;2934:12;2878:70;2967:5;2957:15;;;2622:356;;;;;:::o;2983:462::-;3067:6;3075;3083;3091;3099;3152:3;3140:9;3131:7;3127:23;3123:33;3120:53;;;3169:1;3166;3159:12;3120:53;3192:27;3209:9;3192:27;:::i;:::-;3182:37;;3238:36;3270:2;3259:9;3255:18;3238:36;:::i;:::-;3228:46;;3293:35;3324:2;3313:9;3309:18;3293:35;:::i;:::-;3283:45;;3347:37;3380:2;3369:9;3365:18;3347:37;:::i;:::-;3337:47;;3403:36;3434:3;3423:9;3419:19;3403:36;:::i;:::-;3393:46;;2983:462;;;;;;;;:::o;3450:391::-;3527:6;3535;3543;3551;3604:3;3592:9;3583:7;3579:23;3575:33;3572:53;;;3621:1;3618;3611:12;3572:53;3644:27;3661:9;3644:27;:::i;:::-;3634:37;;3690:36;3722:2;3711:9;3707:18;3690:36;:::i;:::-;3680:46;;3745:35;3776:2;3765:9;3761:18;3745:35;:::i;:::-;3735:45;;3799:36;3831:2;3820:9;3816:18;3799:36;:::i;:::-;3789:46;;3450:391;;;;;;;:::o;3846:184::-;3887:3;3925:5;3919:12;3940:52;3985:6;3980:3;3973:4;3966:5;3962:16;3940:52;:::i;:::-;4008:16;;;;;3846:184;-1:-1:-1;;3846:184:2:o;4404:274::-;4533:3;4571:6;4565:13;4587:53;4633:6;4628:3;4621:4;4613:6;4609:17;4587:53;:::i;:::-;4656:16;;;;;4404:274;-1:-1:-1;;4404:274:2:o;4964:1052::-;5287:3;5325:6;5319:13;5341:53;5387:6;5382:3;5375:4;5367:6;5363:17;5341:53;:::i;:::-;5457:13;;5416:16;;;;5479:57;5457:13;5416:16;5513:4;5501:17;;5479:57;:::i;:::-;5603:13;;5558:20;;;5625:57;5603:13;5558:20;5659:4;5647:17;;5625:57;:::i;:::-;5749:13;;5704:20;;;5771:57;5749:13;5704:20;5805:4;5793:17;;5771:57;:::i;:::-;5895:13;;5850:20;;;5917:57;5895:13;5850:20;5951:4;5939:17;;5917:57;:::i;:::-;5990:20;;4964:1052;-1:-1:-1;;;;;;;4964:1052:2:o;6021:943::-;6384:66;6379:3;6372:79;6481:66;6476:2;6471:3;6467:12;6460:88;6578:66;6573:2;6568:3;6564:12;6557:88;6683:56;6679:2;6675:65;6670:2;6665:3;6661:12;6654:87;6354:3;6770:6;6764:13;6786:61;6840:6;6834:3;6829;6825:13;6820:2;6812:6;6808:15;6786:61;:::i;:::-;-1:-1:-1;;;6906:3:2;6866:16;;;;6898:12;;;6891:39;-1:-1:-1;6954:3:2;6946:12;;6021:943;-1:-1:-1;6021:943:2:o;6969:700::-;7332:66;7327:3;7320:79;7438:12;7433:3;7429:22;7424:2;7419:3;7415:12;7408:44;7302:3;7481:6;7475:13;7497:60;7550:6;7545:2;7540:3;7536:12;7531:2;7523:6;7519:15;7497:60;:::i;:::-;-1:-1:-1;;;7616:2:2;7576:16;;;;7608:11;;;7601:35;-1:-1:-1;7660:2:2;7652:11;;6969:700;-1:-1:-1;6969:700:2:o;7674:1485::-;-1:-1:-1;;;8323:59:2;;8405:13;;8305:3;;8427:62;8405:13;8477:2;8468:12;;8461:4;8449:17;;8427:62;:::i;:::-;8553:66;8548:2;8508:16;;;8540:11;;;8533:87;8649:66;8644:2;8636:11;;8629:87;-1:-1:-1;;;8740:2:2;8732:11;;8725:31;8781:13;;8803:63;8781:13;8852:2;8844:11;;8837:4;8825:17;;8803:63;:::i;:::-;-1:-1:-1;;;8926:2:2;8885:17;;;;8918:11;;;8911:36;8972:13;;8994:63;8972:13;9043:2;9035:11;;9028:4;9016:17;;8994:63;:::i;:::-;-1:-1:-1;;;9117:2:2;9076:17;;;;9109:11;;;9102:24;9150:2;9142:11;;7674:1485;-1:-1:-1;;;;;7674:1485:2:o;9164:1997::-;-1:-1:-1;;;10111:55:2;;10189:13;;10093:3;;10211:62;10189:13;10261:2;10252:12;;10245:4;10233:17;;10211:62;:::i;:::-;-1:-1:-1;;;10332:2:2;10292:16;;;10324:11;;;10317:24;10366:13;;10388:63;10366:13;10437:2;10429:11;;10422:4;10410:17;;10388:63;:::i;:::-;10516:66;10511:2;10470:17;;;;10503:11;;;10496:87;-1:-1:-1;;;10607:2:2;10599:11;;10592:38;10655:13;;10677:63;10655:13;10726:2;10718:11;;10711:4;10699:17;;10677:63;:::i;:::-;10805:66;10800:2;10759:17;;;;10792:11;;;10785:87;10901:66;10896:2;10888:11;;10881:87;-1:-1:-1;;;10992:3:2;10984:12;;10977:36;11029:126;11059:95;11084:69;11114:38;11147:3;11139:12;;11131:6;11114:38;:::i;:::-;4245:66;4233:79;;-1:-1:-1;;;4337:2:2;4328:12;;4321:44;4390:2;4381:12;;4168:231;11084:69;11076:6;11059:95;:::i;:::-;-1:-1:-1;;;4100:30:2;;4155:1;4146:11;;4035:128;11029:126;11022:133;9164:1997;-1:-1:-1;;;;;;;;9164:1997:2:o;11166:700::-;11529:66;11524:3;11517:79;11635:12;11630:3;11626:22;11621:2;11616:3;11612:12;11605:44;11499:3;11678:6;11672:13;11694:60;11747:6;11742:2;11737:3;11733:12;11728:2;11720:6;11716:15;11694:60;:::i;11871:448::-;12133:31;12128:3;12121:44;12103:3;12194:6;12188:13;12210:62;12265:6;12260:2;12255:3;12251:12;12244:4;12236:6;12232:17;12210:62;:::i;:::-;12292:16;;;;12310:2;12288:25;;11871:448;-1:-1:-1;;11871:448:2:o;12532:383::-;12681:2;12670:9;12663:21;12644:4;12713:6;12707:13;12756:6;12751:2;12740:9;12736:18;12729:34;12772:66;12831:6;12826:2;12815:9;12811:18;12806:2;12798:6;12794:15;12772:66;:::i;:::-;12899:2;12878:15;-1:-1:-1;;12874:29:2;12859:45;;;;12906:2;12855:54;;12532:383;-1:-1:-1;;12532:383:2:o;14302:335::-;14504:2;14486:21;;;14543:2;14523:18;;;14516:30;-1:-1:-1;;;14577:2:2;14562:18;;14555:41;14628:2;14613:18;;14302:335::o;14642:128::-;14682:3;14713:1;14709:6;14706:1;14703:13;14700:39;;;14719:18;;:::i;:::-;-1:-1:-1;14755:9:2;;14642:128::o;14775:120::-;14815:1;14841;14831:35;;14846:18;;:::i;:::-;-1:-1:-1;14880:9:2;;14775:120::o;14900:168::-;14940:7;15006:1;15002;14998:6;14994:14;14991:1;14988:21;14983:1;14976:9;14969:17;14965:45;14962:71;;;15013:18;;:::i;:::-;-1:-1:-1;15053:9:2;;14900:168::o;15073:125::-;15113:4;15141:1;15138;15135:8;15132:34;;;15146:18;;:::i;:::-;-1:-1:-1;15183:9:2;;15073:125::o;15203:258::-;15275:1;15285:113;15299:6;15296:1;15293:13;15285:113;;;15375:11;;;15369:18;15356:11;;;15349:39;15321:2;15314:10;15285:113;;;15416:6;15413:1;15410:13;15407:48;;;15451:1;15442:6;15437:3;15433:16;15426:27;15407:48;;15203:258;;;:::o;15466:135::-;15505:3;-1:-1:-1;;15526:17:2;;15523:43;;;15546:18;;:::i;:::-;-1:-1:-1;15593:1:2;15582:13;;15466:135::o;15606:175::-;15643:3;15687:4;15680:5;15676:16;15716:4;15707:7;15704:17;15701:43;;;15724:18;;:::i;:::-;15773:1;15760:15;;15606:175;-1:-1:-1;;15606:175:2:o;15786:112::-;15818:1;15844;15834:35;;15849:18;;:::i;:::-;-1:-1:-1;15883:9:2;;15786:112::o;15903:127::-;15964:10;15959:3;15955:20;15952:1;15945:31;15995:4;15992:1;15985:15;16019:4;16016:1;16009:15;16035:127;16096:10;16091:3;16087:20;16084:1;16077:31;16127:4;16124:1;16117:15;16151:4;16148:1;16141:15;16167:127;16228:10;16223:3;16219:20;16216:1;16209:31;16259:4;16256:1;16249:15;16283:4;16280:1;16273:15;16299:127;16360:10;16355:3;16351:20;16348:1;16341:31;16391:4;16388:1;16381:15;16415:4;16412:1;16405:15;16431:127;16492:10;16487:3;16483:20;16480:1;16473:31;16523:4;16520:1;16513:15;16547:4;16544:1;16537:15"
            },
            "methodIdentifiers": {
              "backgrounds(uint8)": "c3495567",
              "footer()": "3ce30185",
              "get(uint8,uint8)": "f9ec93d4",
              "getAttributes(uint8,uint8,bool,uint32,bool)": "646c1464",
              "getBackgroundName(uint8)": "4342e652",
              "getHandName(uint8)": "22c414eb",
              "getSVG(uint8,uint8,bool,uint8)": "2544c815",
              "getSVGInterface(uint8,uint8,bool,uint8)": "915bb129",
              "getTokenURI(uint16,uint8,uint8,bool,uint32,bool,uint8)": "b6046d7c",
              "hand_types(uint8)": "95fb756a",
              "header()": "0d7163c6",
              "manager()": "481c6a75",
              "potatoes(uint8)": "52b76522",
              "setBackgrounds(uint8,address)": "428bff6b",
              "setHands(uint8,address)": "158eb4e5",
              "setPotatoes(uint8,address)": "b6934925"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"name\":\"backgrounds\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"footer\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum InventoryManager.Part\",\"name\":\"part\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"id\",\"type\":\"uint8\"}],\"name\":\"get\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"svg\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"background_\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"hand_type_\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"hasPotato_\",\"type\":\"bool\"},{\"internalType\":\"uint32\",\"name\":\"generation_\",\"type\":\"uint32\"},{\"internalType\":\"bool\",\"name\":\"isActive_\",\"type\":\"bool\"}],\"name\":\"getAttributes\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"id\",\"type\":\"uint8\"}],\"name\":\"getBackgroundName\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"id\",\"type\":\"uint8\"}],\"name\":\"getHandName\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"background_\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"hand_type_\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"hasPotato_\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"potato_\",\"type\":\"uint8\"}],\"name\":\"getSVG\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"background_\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"hand_type_\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"hasPotato_\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"potato_\",\"type\":\"uint8\"}],\"name\":\"getSVGInterface\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"id_\",\"type\":\"uint16\"},{\"internalType\":\"uint8\",\"name\":\"background_\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"hand_type_\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"hasPotato_\",\"type\":\"bool\"},{\"internalType\":\"uint32\",\"name\":\"generation_\",\"type\":\"uint32\"},{\"internalType\":\"bool\",\"name\":\"isActive_\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"potato_\",\"type\":\"uint8\"}],\"name\":\"getTokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"name\":\"hand_types\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"header\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"manager\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"name\":\"potatoes\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"count\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"}],\"name\":\"setBackgrounds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"count\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"}],\"name\":\"setHands\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"count\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"}],\"name\":\"setPotatoes\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@Allcontracts/InventoryManager.sol\":\"InventoryManager\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":25},\"remappings\":[]},\"sources\":{\"@Allcontracts/Inventory.sol\":{\"keccak256\":\"0x66c19721ac9af209a955d9063975d0a5247d2970cdea1109c1278b2ebadffd7e\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://e6b7b3fc65f0de45e18ce6196255dcc5c66df0d6f6ee7bb7fc7ae3da6bedc873\",\"dweb:/ipfs/QmTBAqdf2y6N8dDAVCR5yWZiFyn5kFefaFFfFgRXiKeQwD\"]},\"@Allcontracts/InventoryManager.sol\":{\"keccak256\":\"0xc35f5d2df33062580b0ebb1ba2470dcc3cc30c88ec7923544cfcdad00ee7ef9f\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://3fcb1cb38024a5187ccad2d6150342a6c0ef86f7da5963bff4579a655f8a4f6a\",\"dweb:/ipfs/QmTUaraDGXKPVmuwWDMjctZKi3XeTG2RWXVBtuGK7D5xew\"]}},\"version\":1}"
        }
      }
    }
  }
}